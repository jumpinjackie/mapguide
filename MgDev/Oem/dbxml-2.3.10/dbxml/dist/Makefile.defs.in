# $Id: Makefile.defs.in,v 1.14.2.1 2007/01/19 15:44:05 gmf Exp $

srcdir=	@abs_srcdir@/..
builddir= @abs_builddir@

##################################################
# Installation directories and permissions.
##################################################
prefix=	@prefix@
exec_prefix=@exec_prefix@
bindir=	@bindir@
includedir=@includedir@/dbxml
libdir=	@libdir@
docdir=	$(prefix)/docs

dmode=	755
emode=	555
fmode=	444

transform=@program_transform_name@

##################################################
# Paths for standard user-level commands.
##################################################
SHELL=	@db_cv_path_sh@
ar=	@db_cv_path_ar@
chmod=	@db_cv_path_chmod@
cp=	@db_cv_path_cp@
ln=	@db_cv_path_ln@
mkdir=	@db_cv_path_mkdir@
ranlib=	@db_cv_path_ranlib@
rm=	@db_cv_path_rm@
strip=	@db_cv_path_strip@

##################################################
# General library information.
##################################################
DEF_LIB=	@DEFAULT_LIB@
DEF_LIB_CXX=	@DEFAULT_LIB_CXX@
INSTALLER=	@INSTALLER@
LIBTOOL=	@MAKEFILE_LIBTOOL@

POSTLINK=	@POSTLINK@
SOLINK=		@MAKEFILE_SOLINK@
SOFLAGS=	@SOFLAGS@
SOMAJOR=	@DBXML_VERSION_MAJOR@
SOVERSION=	@DBXML_VERSION_MAJOR@.@DBXML_VERSION_MINOR@

CPPFLAGS=       -I$(builddir) -I$(srcdir)/include -I$(srcdir)/src/dbxml -I$(srcdir)/src/common @CPPFLAGS@

##################################################
# C API.
##################################################
CFLAGS=	 	-c $(CPPFLAGS) @CFLAGS@
CC=		@MAKEFILE_CC@
CCLINK=		@MAKEFILE_CCLINK@
CC_MM= @MAKEFILE_CC_MM@

LDFLAGS=	@LDFLAGS@
LIBS=		@LIBS@
LIBSO_LIBS=	@LIBSO_LIBS@

libdbxml=	libdbxml.a
libso_base=	libdbxml
libso=		$(libso_base)-$(SOVERSION)@SOSUFFIX@
libso_static=	$(libso_base)-$(SOVERSION).a
libso_target=	$(libso_base)-$(SOVERSION).la
libso_default=	$(libso_base)@SOSUFFIX@
libso_major=	$(libso_base)-$(SOMAJOR)@SOSUFFIX@

OBJECT_POSTFIX= @o@

##################################################
# C++ API.
#
# C++ can be built with static or shared libraries.
##################################################
CXXFLAGS=	-c $(CPPFLAGS) @CXXFLAGS@
CXX=		@MAKEFILE_CXX@
CXXLINK=	@MAKEFILE_CXXLINK@
CXX_MM= @MAKEFILE_CXX_MM@

XSOLINK=	@MAKEFILE_XSOLINK@
LIBXSO_LIBS=	@LIBXSO_LIBS@

libcxx=		libdbxml.a
libxso_base=	libdbxml
libxso=		$(libxso_base)-$(SOVERSION)@SOSUFFIX@
libxso_static=	$(libxso_base)-$(SOVERSION).a
libxso_target=	$(libxso_base)-$(SOVERSION).la
libxso_default=	$(libxso_base)@SOSUFFIX@
libxso_major=	$(libxso_base)-$(SOMAJOR)@SOSUFFIX@

##################################################
# Java API.
#
# Java support is optional and requires shared librarires.
##################################################
CLASSPATH=	$(JAVA_CLASSTOP)@ADDITIONAL_CLASSPATH@
LIBJSO_LIBS=	$(LIBS) @LIBJSO_LIBS@
SWIGCPPFLAGS=	@SWIGCPPFLAGS@

JAR=		@JAR@
JAVAC=		env CLASSPATH="$(CLASSPATH)" @JAVAC@
JAVACFLAGS=	@JAVACFLAGS@
JAVA_CLASSTOP=	./classes
JAVA_SRCDIR=	$(srcdir)/src/java
JAVA_DBXMLREL=	com/sleepycat/dbxml
JAVA_DBREL=	com/sleepycat/db
JAVA_EX_GSG=	dbxml/gettingStarted
JAVA_EX_BASIC=	dbxml/basic
JAVA_EXREL=	$(JAVA_EX_GSG) $(JAVA_EX_BASIC)
JAVA_PERFREL=	com/sleepycat/dbxml/perftest
JAVA_DBXMLDIR=	$(JAVA_SRCDIR)/$(JAVA_DBXMLREL)
JAVA_DBDIR=	$(JAVA_SRCDIR)/$(JAVA_DBREL)
JAVA_EX_GSG_DIR= $(srcdir)/examples/java/gettingStarted
JAVA_EX_BASIC_DIR= $(srcdir)/examples/java/basic
JAVA_PERFDIR=	$(srcdir)/src/dbxml_perf

build_java=@BUILD_JAVA_TARGET@
install_java=@INSTALL_JAVA_TARGET@
libj_jarfile=	dbxml.jar
libj_exjarfile=	dbxmlexamples.jar
libj_perfjarfile=	dbxmlperf.jar
libjso_base=	libdbxml_java
libjso_suffix= @JMODSUFFIX@
libjso=		$(libjso_base)-$(SOVERSION)@SOSUFFIX@
libjso_static=	$(libjso_base)-$(SOVERSION).a
libjso_target=	$(libjso_base)-$(SOVERSION).la
libjso_default=	$(libjso_base)@JMODSUFFIX@
libjso_major=	$(libjso_base)-$(SOMAJOR)@JMODSUFFIX@
libjso_g=	$(libjso_base)-$(SOVERSION)_g@JMODSUFFIX@
LIBJSO_LN_BUILD = @LIBJSO_LN_BUILD@
LIBJSO_LN_INSTALL = @LIBJSO_LN_INSTALL@

##################################################
# TCL API.
#
# Tcl support is optional and requires shared libraries.
##################################################
build_tcl=	@BUILD_TCL_TARGET@
install_tcl=	@INSTALL_TCL_TARGET@
TCL_INCLUDE_SPEC=	@TCL_INCLUDE_SPEC@
LIBTSO_LIBS=	$(LIBS) @LIBTSO_LIBS@
libtso_base=	libdbxml_tcl
libtso=		$(libtso_base)-$(SOVERSION)@SOSUFFIX@
libtso_static=	$(libtso_base)-$(SOVERSION).a
libtso_target=	$(libtso_base)-$(SOVERSION).la
libtso_default=	$(libtso_base)@SOSUFFIX@
libtso_major=	$(libtso_base)-$(SOMAJOR)@SOSUFFIX@

# build test or not
build_test=	@BUILD_TEST_TARGET@

##################################################
# Dependency rules
##################################################
cppdeps= @set -e; $(CXX_MM) $(CXXFLAGS) $< \
	| sed 's^\($*\)\.o[ :]*^$(builddir)/\1$(OBJECT_POSTFIX) $@ : ^g' > $@; \
	[ -s $@ ] || rm -f $@

ccdeps=	@set -e; $(CC_MM) $(CFLAGS) $< \
	| sed 's^\($*\)\.o[ :]*^$(builddir)/\1$(OBJECT_POSTFIX) $@ : ^g' > $@; \
	[ -s $@ ] || rm -f $@

nocppdeps=
noccdeps=

buildcppdep=@BUILD_CPP_DEP@

buildccdep=@BUILD_CC_DEP@

##################################################
# Source file lists
#
# Every file that is to be compiled needs to be
# listed here, in the list corresponding to the
# directory that it's in.
##################################################

DBXML_PATH= $(srcdir)/src/dbxml

DBXML_SOURCES= \
		Buffer.cpp Indexer.cpp QueryExecutionContext.cpp SyntaxManager.cpp \
		XmlException.cpp XmlValue.cpp Container.cpp IndexSpecification.cpp \
		QueryExpression.cpp TransactedContainer.cpp XmlIndexSpecification.cpp \
		Cursor.cpp Key.cpp UpdateContext.cpp DictionaryDatabase.cpp \
		XmlModify.cpp DbWrapper.cpp KeyStatistics.cpp \
		UTF8.cpp XmlNamespace.cpp Document.cpp Log.cpp \
		ReferenceCounted.cpp Value.cpp XmlQueryContext.cpp \
		HighResTimer.cpp Modify.cpp Results.cpp ConfigurationDatabase.cpp \
		VariableBindings.cpp XmlQueryExpression.cpp DocID.cpp NameID.cpp Name.cpp Statistics.cpp \
		XmlContainer.cpp XmlResults.cpp IDS.cpp QueryContext.cpp Syntax.cpp \
		XmlDocument.cpp XmlUpdateContext.cpp db_rdbt.c MetaDatum.cpp \
		PrintDataItemTree.cpp XmlManager.cpp Globals.cpp \
		Manager.cpp XmlData.cpp XmlTransaction.cpp Transaction.cpp \
		XmlResolver.cpp QueryPlan.cpp ImpliedSchemaNode.cpp \
		SyntaxDatabase.cpp StdInInputStream.cpp IndexEntry.cpp \
		XmlInputStream.cpp LocalFileInputStream.cpp BaseInputStream.cpp	\
		MemBufInputStream.cpp URLInputStream.cpp ReferenceMinder.cpp \
		XmlMetaDataIterator.cpp XmlStatistics.cpp KeyStash.cpp \
		DocumentDatabase.cpp DbXmlInternal.cpp KeyGenerator.cpp \
		XmlIndexLookup.cpp IndexLookup.cpp XmlEventReader.cpp \
		XmlEventWriter.cpp XmlEventReaderToWriter.cpp

DBXML_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${DBXML_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

DBXML_NODESTORE_PATH= $(srcdir)/src/dbxml/nodeStore

DBXML_NODESTORE_SOURCES= \
	NsDocument.cpp NsDom.cpp NsEvent.cpp \
	NsHandlerBase.cpp NsSAX2Reader.cpp NsUtil.cpp NsWriter.cpp \
	NsXercesDom.cpp NsTransientDomBuilder.cpp NsXercesTranscoder.cpp \
	NsXercesIndexer.cpp NsDocumentDatabase.cpp \
	PullEventInputStream.cpp NsNid.cpp NsNode.cpp NsFormat.cpp \
	NsEventReader.cpp EventReaderToWriter.cpp NsDomReader.cpp EventReader.cpp \
	NsEventWriter.cpp NsUpgrade.cpp NsIterator.cpp

DBXML_NODESTORE_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${DBXML_NODESTORE_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

DBXML_DATAITEM_PATH= $(srcdir)/src/dbxml/dataItem

DBXML_DATAITEM_SOURCES= \
	DbXmlContextImpl.cpp DbXmlURIResolver.cpp MetaDataFunction.cpp \
	DbXmlContext.cpp DbXmlDynamicContextImpl.cpp QueryPlanFunction.cpp \
	DbXmlUri.cpp DbXmlFactoryImpl.cpp DbXmlNodeImpl.cpp DbXmlNodeTest.cpp \
	DbXmlCompare.cpp QueryPlanHolder.cpp DbXmlNav.cpp DbXmlFilter.cpp \
	DbXmlContains.cpp DbXmlDocAvailable.cpp DbXmlFunction.cpp DbXmlAtomize.cpp \
	LookupIndexFunction.cpp DbXmlStep.cpp QueryPlanResultImpl.cpp \
	Join.cpp DbXmlResult.cpp NodeHandleFunction.cpp

DBXML_DATAITEM_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${DBXML_DATAITEM_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})


DBXML_OPTIMIZER_PATH= $(srcdir)/src/dbxml/optimizer

DBXML_OPTIMIZER_SOURCES= \
	Optimizer.cpp NodeVisitingOptimizer.cpp ASTReplaceOptimizer.cpp \
	QueryPlanGenerator.cpp CostBasedOptimizer.cpp ASTRewriteOptimizer.cpp \
	QueryPlanOptimizer.cpp CombineStepsOptimizer.cpp

DBXML_OPTIMIZER_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${DBXML_OPTIMIZER_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})


EXAMPLE_GSG_PATH= $(srcdir)/examples/cxx/gettingStarted

EXAMPLE_GSG_SOURCES= \
	addIndex.cpp buildDB.cpp deleteDocument.cpp deleteIndex.cpp \
	exampleLoadContainer.cpp modifyDocument.cpp queryForDocumentValue.cpp \
	queryForMetaData.cpp queryWithContext.cpp queryWithDocumentNames.cpp \
	replaceIndex.cpp retrieveDB.cpp simpleAdd.cpp simpleContainer.cpp \
	simpleContainerInEnv.cpp simpleQuery.cpp updateDocument.cpp

EXAMPLE_GSG_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${EXAMPLE_GSG_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

EXAMPLE_BASIC_PATH= $(srcdir)/examples/cxx/basic

EXAMPLE_BASIC_SOURCES= \
	helloWorld.cpp helloWorldTxn.cpp query.cpp queryTxn.cpp

EXAMPLE_BASIC_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${EXAMPLE_BASIC_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

COMMON_UTIL_PATH= $(srcdir)/src/common

COMMON_UTIL_SOURCES = util_sig.c Timer.cpp SigBlock.cpp

COMMON_UTIL_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${COMMON_UTIL_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

DBXML_DUMP_PATH= $(srcdir)/src/dbxml_dump

DBXML_DUMP_SOURCES= dbxml_dump.cpp

DBXML_DUMP_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${DBXML_DUMP_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

DBXML_LOAD_PATH= $(srcdir)/src/dbxml_load

DBXML_LOAD_SOURCES= dbxml_load.cpp

DBXML_LOAD_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${DBXML_LOAD_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

SHELL_PATH= $(srcdir)/src/utils/shell

SHELL_SOURCES= \
	dbxmlsh.cpp InputParser.cpp ContainerQueryCommand.cpp \
	QueryCommand.cpp PrintCommand.cpp CommitCommand.cpp AbortCommand.cpp \
	PreLoadCommand.cpp ContextItemQueryCommand.cpp OpenContainerCommand.cpp \
	ListIndexesCommand.cpp AddIndexCommand.cpp DeleteIndexCommand.cpp \
	SetVariableCommand.cpp SetTypedVariableCommand.cpp SetNamespaceCommand.cpp \
	LazyCommand.cpp ReturnTypeCommand.cpp RemoveCommand.cpp \
	ShellCommand.cpp HelpCommand.cpp CommentCommand.cpp Shell.cpp DefaultShell.cpp \
	RenameCommand.cpp UpdateCommand.cpp AddContentCommand.cpp InsertAfterCommand.cpp \
	InsertBeforeCommand.cpp AppendCommand.cpp Environment.cpp IncludeCommand.cpp \
	QuitCommand.cpp ApplyChangesCommand.cpp QueryPlanCommand.cpp \
	CreateContainerCommand.cpp AddDocumentCommand.cpp DeleteDocumentCommand.cpp \
	SetBaseURICommand.cpp IndexLookupCommand.cpp StatsLookupCommand.cpp \
	StartTransactionCommand.cpp DebugCommand.cpp RemoveContainerCommand.cpp \
	GetDocumentsCommand.cpp SetVerboseCommand.cpp UpgradeCommand.cpp \
	InfoCommand.cpp AddAliasCommand.cpp RemoveAliasCommand.cpp \
	SetMetaDataCommand.cpp GetMetaDataCommand.cpp ReindexCommand.cpp \
	EdgeIndexLookupCommand.cpp TimeCommand.cpp EchoCommand.cpp \
	SyncCommand.cpp SetQueryTimeoutCommand.cpp SetIgnoreCommand.cpp \
	CompactCommand.cpp

SHELL_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${SHELL_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})


QUERY_RUNNER_PATH= $(srcdir)/src/utils/query_runner

QUERY_RUNNER_SOURCES= \
	QueryRunner.cpp 

QUERY_RUNNER_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${QUERY_RUNNER_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

LOAD_CONTAINER_PATH= $(srcdir)/src/utils/load_container

LOAD_CONTAINER_SOURCES= \
	LoadContainer.cpp 

LOAD_CONTAINER_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${LOAD_CONTAINER_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

UNIT_TEST_UTIL_PATH= $(srcdir)/test/cpp/util

UNIT_TEST_UTIL_SOURCES= \
	TestLogging.cpp  TestResolver.cpp Transcoding.cpp

UNIT_TEST_UTIL_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${UNIT_TEST_UTIL_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

UNIT_TEST_PATH= $(srcdir)/test/cpp/unitTests

UNIT_TEST_SOURCES= unit_test_driver.cpp \
	QueryPlanTest.cpp ResolverUnitTest.cpp \
	TestEnvironment.cpp UnitTest.cpp UpdateDocumentTest.cpp XQueryTest.cpp

UNIT_TEST_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${UNIT_TEST_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

UNIT_TEST_DATABASE_PATH= $(srcdir)/test/cpp/databaseManagement

UNIT_TEST_DATABASE_SOURCES= \
	databaseManagement.cpp 

UNIT_TEST_DATABASE_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${UNIT_TEST_DATABASE_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

UNIT_TEST_QPAPI_PATH= $(srcdir)/test/cpp/queryProcessorAPI

UNIT_TEST_QPAPI_SOURCES= \
	queryProcessorAPI.cpp 

UNIT_TEST_QPAPI_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${UNIT_TEST_QPAPI_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

UNIT_TEST_INPUTSTREAMS_PATH= $(srcdir)/test/cpp/inputStreams

UNIT_TEST_INPUTSTREAMS_SOURCES= \
	inputStreams.cpp

UNIT_TEST_INPUTSTREAMS_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${UNIT_TEST_INPUTSTREAMS_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

BENCHMARK_PATH= $(srcdir)/test/benchmark/src

BENCHMARK_SOURCES= \
	Benchmark.cpp

BENCHMARK_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${BENCHMARK_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

PERF_PATH= $(srcdir)/test/perf

PERF_SOURCES= \
	perf_test.cpp perf_workload.cpp perf_work.c perf_os.c DbXmlWorkload.cpp \
	QueryWorkload.cpp PutAndQueriesWorkload.cpp PutWorkload.cpp

PERF_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${PERF_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})

XQTS_PATH= $(srcdir)/test/cpp/xqts

XQTS_SOURCES= \
	xqts_runner.cpp

XQTS_OBJECTS= \
	$(patsubst %.c,%$(OBJECT_POSTFIX),${XQTS_SOURCES:%.cpp=%$(OBJECT_POSTFIX)})


