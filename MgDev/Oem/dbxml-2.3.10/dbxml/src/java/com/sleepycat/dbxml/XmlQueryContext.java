/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sleepycat.dbxml;

import com.sleepycat.db.*;
import com.sleepycat.db.internal.DbEnv;
import com.sleepycat.db.internal.DbConstants;

public class XmlQueryContext {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected XmlQueryContext(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XmlQueryContext obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() /* no exception */ {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      dbxml_javaJNI.delete_XmlQueryContext(swigCPtr);
    }
    swigCPtr = 0;
  }

  public XmlQueryContext(XmlQueryContext o) throws XmlException {
    this(dbxml_javaJNI.new_XmlQueryContext(XmlQueryContext.getCPtr(o)), true);
  }

  public void setNamespace(String prefix, String uri) throws XmlException {
    dbxml_javaJNI.XmlQueryContext_setNamespace(swigCPtr, prefix, uri);
  }

  public String getNamespace(String prefix) throws XmlException {
    return dbxml_javaJNI.XmlQueryContext_getNamespace(swigCPtr, prefix);
  }

  public void removeNamespace(String prefix) throws XmlException {
    dbxml_javaJNI.XmlQueryContext_removeNamespace(swigCPtr, prefix);
  }

  public void clearNamespaces() throws XmlException {
    dbxml_javaJNI.XmlQueryContext_clearNamespaces(swigCPtr);
  }

  public void setVariableValue(String name, XmlValue value) throws XmlException {
    dbxml_javaJNI.XmlQueryContext_setVariableValue__SWIG_0(swigCPtr, name, XmlValue.getCPtr(value));
  }

  public void setVariableValue(String name, XmlResults value) throws XmlException {
    dbxml_javaJNI.XmlQueryContext_setVariableValue__SWIG_1(swigCPtr, name, XmlResults.getCPtr(value));
  }

  public void setBaseURI(String baseURI) throws XmlException {
    dbxml_javaJNI.XmlQueryContext_setBaseURI(swigCPtr, baseURI);
  }

  public String getBaseURI() throws XmlException {
    return dbxml_javaJNI.XmlQueryContext_getBaseURI(swigCPtr);
  }

  public void setReturnType(int type) throws XmlException {
    dbxml_javaJNI.XmlQueryContext_setReturnType(swigCPtr, type);
  }

  public int getReturnType() throws XmlException {
    return dbxml_javaJNI.XmlQueryContext_getReturnType(swigCPtr);
  }

  public void setEvaluationType(int type) throws XmlException {
    dbxml_javaJNI.XmlQueryContext_setEvaluationType(swigCPtr, type);
  }

  public int getEvaluationType() throws XmlException {
    return dbxml_javaJNI.XmlQueryContext_getEvaluationType(swigCPtr);
  }

  public void setDefaultCollection(String uri) throws XmlException {
    dbxml_javaJNI.XmlQueryContext_setDefaultCollection(swigCPtr, uri);
  }

  public String getDefaultCollection() throws XmlException {
    return dbxml_javaJNI.XmlQueryContext_getDefaultCollection(swigCPtr);
  }

  public void interruptQuery() throws XmlException {
    dbxml_javaJNI.XmlQueryContext_interruptQuery(swigCPtr);
  }

  public void setQueryTimeoutSeconds(int secs) throws XmlException {
    dbxml_javaJNI.XmlQueryContext_setQueryTimeoutSeconds(swigCPtr, secs);
  }

  public int getQueryTimeoutSeconds() throws XmlException {
    return dbxml_javaJNI.XmlQueryContext_getQueryTimeoutSeconds(swigCPtr);
  }

  public XmlValue getVariableValue(String name) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlQueryContext_getVariableValue(swigCPtr, name);
    return (cPtr == 0) ? null : new XmlValue(cPtr, true);
  }

  public XmlResults getVariableValues(String name) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlQueryContext_getVariableValues(swigCPtr, name);
    return (cPtr == 0) ? null : new XmlResults(cPtr, false);
  }

  public final static int DeadValues = 0;
  public final static int LiveValues = DeadValues + 1;

  public final static int Eager = 0;
  public final static int Lazy = Eager + 1;

}
