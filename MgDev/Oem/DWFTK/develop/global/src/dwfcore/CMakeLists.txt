include_directories(${CMAKE_CURRENT_SOURCE_DIR}/..)

set (dwfcore_SRCS
    BufferInputStream.cpp
    BufferOutputStream.cpp
    DecompressingInputStream.cpp
    DWFCompressingInputStream.cpp
    DWFEncryptingInputStream.cpp
    DWFDecryptingInputStream.cpp
    Digest.cpp
    DigestInputStream.cpp
    DigestOutputStream.cpp
    DWFXMLSerializer.cpp
    Exception.cpp
    File.cpp
    FileInputStream.cpp
    FileOutputStream.cpp
    MIME.cpp
    MonitoredInputStream.cpp
    Owner.cpp
    StreamOutputBufferDescriptor.cpp
    ThreadPool.cpp
    UnzippingInputStream.cpp
    UTF8EncodingOutputStream.cpp
    UUID.cpp
    XML.cpp
    XMLEncodingOutputStream.cpp
    XMLParser.cpp
    ZipFileDescriptor.cpp
    ZippingOutputStream.cpp
    #ansi
    ansi/Core.cpp
    ansi/Mutex.cpp
    ansi/Semaphore.cpp
    ansi/Signal.cpp
    ansi/StandardFileDescriptor.cpp
    ansi/StreamFileDescriptor.cpp
    ansi/String.cpp
    ansi/TempFile.cpp
    ansi/Thread.cpp
    ansi/UUID.cpp
    #crypto
    crypto/AsymmetricAlgorithm.cpp
    crypto/CryptoEngine.cpp
    crypto/CryptoEngineProvider.cpp
    crypto/CryptoKeyGeneratorProvider.cpp
    crypto/DigestEngine.cpp
    crypto/SymmetricCipher.cpp
    crypto/X509Certificate.cpp
    #digest
    digest/md5.c
    digest/sha1.c
    #expat
    expat/xmlparse.c
    expat/xmlrole.c
    expat/xmltok.c
    #mac
    mac/Core.cpp
    mac/Timer.cpp
    #paging
    paging/FileAdapter.cpp
    paging/MemoryManager.cpp
    paging/PagingStrategy.cpp
    paging/SqlAdapter.cpp
    #sqlite
    sqlite/sqlite3.c
    #utility
    utility/XMLCompatibilityContext.cpp
    utility/XMLCompatibilityPP.cpp
    utility/XMLCompatibilityProcessChoices.cpp
    utility/XMLCompatibilityProcessConsider.cpp
    utility/XMLCompatibilityProcessIgnore.cpp
    utility/XMLCompatibilityProcessStandard.cpp
    utility/XMLCompatibilityStack.cpp
    utility/XMLCompatibilityStreamFilter.cpp
    utility/XMLIdentityWriter.cpp
    utility/XMLNamespaceCollection.cpp
    utility/XMLQualifiedNameCollection.cpp
    #x64
    x64/Core.cpp
    x64/Timer.cpp
    #x86
    x86/Core.cpp
    x86/Timer.cpp
    #zip
    zip/gvmat32c.cpp
    zip/password.cpp
    zip/unzip.cpp
    zip/zip.cpp
    #zlib
    zlib/adler32.c
    zlib/compress.c
    zlib/crc32.c
    zlib/deflate.c
    zlib/gzclose.c
    zlib/gzlib.c
    zlib/gzread.c
    zlib/gzwrite.c
    zlib/infback.c
    zlib/inffast.c
    zlib/inflate.c
    zlib/inftrees.c
    zlib/trees.c
    zlib/uncompr.c
    zlib/zutil.c
)

add_library(dwfcore-${DWFCORE_VERSION} SHARED ${dwfcore_SRCS})

if (NOT uuid-NOTFOUND)
    target_link_libraries(dwfcore-${DWFCORE_VERSION}
        -Wl,-Bsymbolic
        dl
        pthread
        uuid
    )
else (NOT uuid-NOTFOUND)
    target_link_libraries(dwfcore-${DWFCORE_VERSION}
        -Wl,-Bsymbolic
        dl
        pthread
    )
endif (NOT uuid-NOTFOUND)

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/config.h.in ${CMAKE_CURRENT_BINARY_DIR}/config.h)