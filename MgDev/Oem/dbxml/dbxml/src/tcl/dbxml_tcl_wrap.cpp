/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGTCL


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#include <stdio.h>
#include <tcl.h>
#include <errno.h>
#include <stdlib.h>
#include <stdarg.h>
#include <ctype.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGINTERN const char*
SWIG_Tcl_ErrorType(int code) {
  const char* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = "MemoryError";
    break;
  case SWIG_IOError:
    type = "IOError";
    break;
  case SWIG_RuntimeError:
    type = "RuntimeError";
    break;
  case SWIG_IndexError:
    type = "IndexError";
    break;
  case SWIG_TypeError:
    type = "TypeError";
    break;
  case SWIG_DivisionByZero:
    type = "ZeroDivisionError";
    break;
  case SWIG_OverflowError:
    type = "OverflowError";
    break;
  case SWIG_SyntaxError:
    type = "SyntaxError";
    break;
  case SWIG_ValueError:
    type = "ValueError";
    break;
  case SWIG_SystemError:
    type = "SystemError";
    break;
  case SWIG_AttributeError:
    type = "AttributeError";
    break;
  default:
    type = "RuntimeError";
  }
  return type;
}


SWIGINTERN void
SWIG_Tcl_SetErrorObj(Tcl_Interp *interp, const char *ctype, Tcl_Obj *obj)
{
  Tcl_ResetResult(interp);
  Tcl_SetObjResult(interp, obj);
  Tcl_SetErrorCode(interp, "SWIG", ctype, NULL);
}

SWIGINTERN void
SWIG_Tcl_SetErrorMsg(Tcl_Interp *interp, const char *ctype, const char *mesg)
{
  Tcl_ResetResult(interp);
  Tcl_SetErrorCode(interp, "SWIG", ctype, NULL);
  Tcl_AppendResult(interp, ctype, " ", mesg, NULL);
  /*
  Tcl_AddErrorInfo(interp, ctype);
  Tcl_AddErrorInfo(interp, " ");
  Tcl_AddErrorInfo(interp, mesg);
  */
}

SWIGINTERNINLINE void
SWIG_Tcl_AddErrorMsg(Tcl_Interp *interp, const char* mesg)
{
  Tcl_AddErrorInfo(interp, mesg);
}



/* -----------------------------------------------------------------------------
 * SWIG API. Portion that goes into the runtime
 * ----------------------------------------------------------------------------- */
#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_TCL_POINTER 4
#define SWIG_TCL_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

typedef int   (*swig_wrapper)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
typedef int   (*swig_wrapper_func)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
typedef char *(*swig_variable_func)(ClientData, Tcl_Interp *, char *, char *, int);
typedef void  (*swig_delete_func)(ClientData);

typedef struct swig_method {
  const char     *name;
  swig_wrapper   method;
} swig_method;

typedef struct swig_attribute {
  const char     *name;
  swig_wrapper   getmethod;
  swig_wrapper   setmethod;
} swig_attribute;

typedef struct swig_class {
  const char         *name;
  swig_type_info   **type;
  swig_wrapper       constructor;
  void              (*destructor)(void *);
  swig_method        *methods;
  swig_attribute     *attributes;
  struct swig_class **bases;
  const char              **base_names;
  swig_module_info   *module;
} swig_class;

typedef struct swig_instance {
  Tcl_Obj       *thisptr;
  void          *thisvalue;
  swig_class   *classptr;
  int            destroy;
  Tcl_Command    cmdtok;
} swig_instance;

/* Structure for command table */
typedef struct {
  const char *name;
  int       (*wrapper)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
  ClientData  clientdata;
} swig_command_info;

/* Structure for variable linking table */
typedef struct {
  const char *name;
  void *addr;
  char * (*get)(ClientData, Tcl_Interp *, char *, char *, int);
  char * (*set)(ClientData, Tcl_Interp *, char *, char *, int);
} swig_var_info;


/* -----------------------------------------------------------------------------*
 *  Install a constant object 
 * -----------------------------------------------------------------------------*/

static Tcl_HashTable   swigconstTable;
static int             swigconstTableinit = 0;

SWIGINTERN void
SWIG_Tcl_SetConstantObj(Tcl_Interp *interp, const char* name, Tcl_Obj *obj) {
  int newobj;
  Tcl_ObjSetVar2(interp,Tcl_NewStringObj(name,-1), NULL, obj, TCL_GLOBAL_ONLY);
  Tcl_SetHashValue(Tcl_CreateHashEntry(&swigconstTable, name, &newobj), (ClientData) obj);
}

SWIGINTERN Tcl_Obj *
SWIG_Tcl_GetConstantObj(const char *key) {
  Tcl_HashEntry *entryPtr;
  if (!swigconstTableinit) return 0;
  entryPtr = Tcl_FindHashEntry(&swigconstTable, key);
  if (entryPtr) {
    return (Tcl_Obj *) Tcl_GetHashValue(entryPtr);
  }
  return 0;
}

#ifdef __cplusplus
}
#endif



/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * tclrun.swg
 *
 * This file contains the runtime support for Tcl modules and includes
 * code for managing global variables and pointer type checking.
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_ConvertPtr(oc, ptr, ty, flags)             SWIG_Tcl_ConvertPtr(interp, oc, ptr, ty, flags)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Tcl_NewPointerObj(ptr, type, flags)

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Tcl_ConvertPacked(interp, obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Tcl_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_Tcl_ConvertPtr(interp, obj, pptr, type, flags)
#define SWIG_NewInstanceObj(thisvalue, type, flags)     SWIG_Tcl_NewInstanceObj(interp, thisvalue, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Tcl_ConvertPtr(interp, obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Tcl_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Tcl_ConvertPacked(interp,obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Tcl_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Tcl_GetModule((Tcl_Interp *) (clientdata))	     
#define SWIG_SetModule(clientdata, pointer)          	SWIG_Tcl_SetModule((Tcl_Interp *) (clientdata), pointer)


/* Error manipulation */

#define SWIG_ErrorType(code)                            SWIG_Tcl_ErrorType(code)                                      
#define SWIG_Error(code, msg)            		SWIG_Tcl_SetErrorMsg(interp, SWIG_Tcl_ErrorType(code), msg)
#define SWIG_fail                        		goto fail						    


/* Tcl-specific SWIG API */

#define SWIG_Acquire(ptr)                               SWIG_Tcl_Acquire(ptr)                                     
#define SWIG_MethodCommand                           	SWIG_Tcl_MethodCommand				       
#define SWIG_Disown(ptr)                             	SWIG_Tcl_Disown(ptr)				       
#define SWIG_ConvertPtrFromString(c, ptr, ty, flags) 	SWIG_Tcl_ConvertPtrFromString(interp, c, ptr, ty, flags)  
#define SWIG_MakePtr(c, ptr, ty, flags)              	SWIG_Tcl_MakePtr(c, ptr, ty, flags)		       
#define SWIG_PointerTypeFromString(c)                	SWIG_Tcl_PointerTypeFromString(c)			       
#define SWIG_GetArgs                                 	SWIG_Tcl_GetArgs					       
#define SWIG_GetConstantObj(key)                     	SWIG_Tcl_GetConstantObj(key)			       
#define SWIG_ObjectConstructor                       	SWIG_Tcl_ObjectConstructor				       
#define SWIG_Thisown(ptr)                            	SWIG_Tcl_Thisown(ptr)				       
#define SWIG_ObjectDelete                            	SWIG_Tcl_ObjectDelete				       


#define SWIG_TCL_DECL_ARGS_2(arg1, arg2)                (Tcl_Interp *interp SWIGUNUSED, arg1, arg2)
#define SWIG_TCL_CALL_ARGS_2(arg1, arg2)                (interp, arg1, arg2)
/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* For backward compatibility only */
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_GetConstant        SWIG_GetConstantObj
#define SWIG_Tcl_GetConstant    SWIG_Tcl_GetConstantObj

#include "assert.h"

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* Object support */

SWIGRUNTIME Tcl_HashTable*
SWIG_Tcl_ObjectTable(void) {
  static Tcl_HashTable  swigobjectTable;
  static int            swigobjectTableinit = 0;
  if (!swigobjectTableinit) {
    Tcl_InitHashTable(&swigobjectTable, TCL_ONE_WORD_KEYS);
    swigobjectTableinit = 1;
  }
  return &swigobjectTable;
}

/* Acquire ownership of a pointer */
SWIGRUNTIME void
SWIG_Tcl_Acquire(void *ptr) {
  int newobj;
  Tcl_CreateHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr, &newobj);
}

SWIGRUNTIME int
SWIG_Tcl_Thisown(void *ptr) {
  if (Tcl_FindHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr)) {
    return 1;
  }
  return 0;
}

/* Disown a pointer.  Returns 1 if we owned it to begin with */
SWIGRUNTIME int
SWIG_Tcl_Disown(void *ptr) {
  Tcl_HashEntry *entryPtr = Tcl_FindHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr);
  if (entryPtr) {
    Tcl_DeleteHashEntry(entryPtr);
    return 1;
  }
  return 0;
}

/* Convert a pointer value */
SWIGRUNTIME int
SWIG_Tcl_ConvertPtrFromString(Tcl_Interp *interp, const char *c, void **ptr, swig_type_info *ty, int flags) {
  swig_cast_info *tc;
  /* Pointer values must start with leading underscore */
  while (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) return SWIG_OK;

    /* Empty string: not a pointer */
    if (*c == 0) return SWIG_ERROR; 

    /* Hmmm. It could be an object name. */

    /* Check if this is a command at all. Prevents <c> cget -this         */
    /* from being called when c is not a command, firing the unknown proc */
    if (Tcl_VarEval(interp,"info commands ", c, (char *) NULL) == TCL_OK) {
      Tcl_Obj *result = Tcl_GetObjResult(interp);
      if (*(Tcl_GetStringFromObj(result, NULL)) == 0) {
        /* It's not a command, so it can't be a pointer */
        Tcl_ResetResult(interp);
        return SWIG_ERROR;
      }
    } else {
      /* This will only fail if the argument is multiple words. */
      /* Multiple words are also not commands.                  */
      Tcl_ResetResult(interp);
      return SWIG_ERROR;
    }

    /* Check if this is really a SWIG pointer */
    if (Tcl_VarEval(interp,c," cget -this", (char *) NULL) != TCL_OK) {
      Tcl_ResetResult(interp);
      return SWIG_ERROR;
    }

    c = Tcl_GetStringFromObj(Tcl_GetObjResult(interp), NULL);
  }

  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (ty) {
    tc = c ? SWIG_TypeCheck(c,ty) : 0;
    if (!tc) {
      return SWIG_ERROR;
    }
    if (flags & SWIG_POINTER_DISOWN) {
      SWIG_Disown((void *) *ptr);
    }
    {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,(void *) *ptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    }
  }
  return SWIG_OK;
}

/* Convert a pointer value */
SWIGRUNTIMEINLINE int
SWIG_Tcl_ConvertPtr(Tcl_Interp *interp, Tcl_Obj *oc, void **ptr, swig_type_info *ty, int flags) {
  return SWIG_Tcl_ConvertPtrFromString(interp, Tcl_GetStringFromObj(oc,NULL), ptr, ty, flags);
}

/* Convert a pointer value */
SWIGRUNTIME char *
SWIG_Tcl_PointerTypeFromString(char *c) {
  char d;
  /* Pointer values must start with leading underscore. NULL has no type */
  if (*c != '_') {
    return 0;
  }
  c++;
  /* Extract hex value from pointer */
  while ((d = *c)) {
    if (!(((d >= '0') && (d <= '9')) || ((d >= 'a') && (d <= 'f')))) break;
    c++;
  }
  return c;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Tcl_ConvertPacked(Tcl_Interp *SWIGUNUSEDPARM(interp) , Tcl_Obj *obj, void *ptr, int sz, swig_type_info *ty) {
  swig_cast_info *tc;
  const char  *c;

  if (!obj) goto type_error;
  c = Tcl_GetStringFromObj(obj,NULL);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return SWIG_OK;

 type_error:

  return SWIG_ERROR;
}


/* Take a pointer and convert it to a string */
SWIGRUNTIME void
SWIG_Tcl_MakePtr(char *c, void *ptr, swig_type_info *ty, int flags) {
  if (ptr) {
    *(c++) = '_';
    c = SWIG_PackData(c,&ptr,sizeof(void *));
    strcpy(c,ty->name);
  } else {
    strcpy(c,(char *)"NULL");
  }
  flags = 0;
}

/* Create a new pointer object */
SWIGRUNTIMEINLINE Tcl_Obj *
SWIG_Tcl_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  Tcl_Obj *robj;
  char result[SWIG_BUFFER_SIZE];
  SWIG_MakePtr(result,ptr,type,flags);
  robj = Tcl_NewStringObj(result,-1);
  return robj;
}

SWIGRUNTIME Tcl_Obj *
SWIG_Tcl_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return Tcl_NewStringObj(result,-1);
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

SWIGRUNTIME swig_module_info * 
SWIG_Tcl_GetModule(Tcl_Interp *interp) {
  const char *data;
  swig_module_info *ret = 0;
  
  /* first check if pointer already created */
  data = Tcl_GetVar(interp, (char *)"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, TCL_GLOBAL_ONLY);
  if (data) {
    SWIG_UnpackData(data, &ret, sizeof(swig_type_info **));
  }

  return ret;
}

SWIGRUNTIME void
SWIG_Tcl_SetModule(Tcl_Interp *interp, swig_module_info *module) {
  char buf[SWIG_BUFFER_SIZE];
  char *data;

  /* create a new pointer */
  data = SWIG_PackData(buf, &module, sizeof(swig_type_info **));
  *data = 0;
  Tcl_SetVar(interp, (char *)"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, buf, 0);
}

/* -----------------------------------------------------------------------------*
 *  Object auxiliars
 * -----------------------------------------------------------------------------*/


SWIGRUNTIME void
SWIG_Tcl_ObjectDelete(ClientData clientData) {
  swig_instance *si = (swig_instance *) clientData;
  if ((si) && (si->destroy) && (SWIG_Disown(si->thisvalue))) {
    if (si->classptr->destructor) {
      (si->classptr->destructor)(si->thisvalue);
    }
  }
  Tcl_DecrRefCount(si->thisptr);
  free(si);
}

/* Function to invoke object methods given an instance */
SWIGRUNTIME int
SWIG_Tcl_MethodCommand(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST _objv[]) {
  char *method,   *attrname;
  swig_instance   *inst = (swig_instance *) clientData;
  swig_method     *meth;
  swig_attribute  *attr;
  Tcl_Obj         *oldarg;
  Tcl_Obj         **objv;
  int              rcode;
  swig_class      *cls;
  swig_class      *cls_stack[64];
  int              cls_stack_bi[64];
  int              cls_stack_top = 0;
  int              numconf = 2;
  int              bi;

  objv = (Tcl_Obj **) _objv;
  if (objc < 2) {
    Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
    return TCL_ERROR;
  }
  method = Tcl_GetStringFromObj(objv[1],NULL);
  if (strcmp(method,"-acquire") == 0) {
    inst->destroy = 1;
    SWIG_Acquire(inst->thisvalue);
    return TCL_OK;
  }
  if (strcmp(method,"-disown") == 0) {
    if (inst->destroy) {
      SWIG_Disown(inst->thisvalue);
    }
    inst->destroy = 0;
    return TCL_OK;
  }
  if (strcmp(method,"-delete") == 0) {
    Tcl_DeleteCommandFromToken(interp,inst->cmdtok);
    return TCL_OK;
  }
  cls_stack[cls_stack_top] = inst->classptr;
  cls_stack_bi[cls_stack_top] = -1;
  cls = inst->classptr;
  while (1) {
    bi = cls_stack_bi[cls_stack_top];
    cls = cls_stack[cls_stack_top];
    if (bi != -1) {
      if (!cls->bases[bi] && cls->base_names[bi]) {
        /* lookup and cache the base class */
	swig_type_info *info = SWIG_TypeQueryModule(cls->module, cls->module, cls->base_names[bi]);
	if (info) cls->bases[bi] = (swig_class *) info->clientdata;
      }
      cls = cls->bases[bi];
      if (cls) {
        cls_stack_bi[cls_stack_top]++;
        cls_stack_top++;
        cls_stack[cls_stack_top] = cls;
        cls_stack_bi[cls_stack_top] = -1;
        continue;
      }
    }
    if (!cls) {
      cls_stack_top--;
      if (cls_stack_top < 0) break;
      else continue;
    }
    cls_stack_bi[cls_stack_top]++;

    meth = cls->methods;
    /* Check for methods */
    while (meth && meth->name) {
      if (strcmp(meth->name,method) == 0) {
        oldarg = objv[1];
        objv[1] = inst->thisptr;
        Tcl_IncrRefCount(inst->thisptr);
        rcode = (*meth->method)(clientData,interp,objc,objv);
        objv[1] = oldarg;
        Tcl_DecrRefCount(inst->thisptr);
        return rcode;
      }
      meth++;
    }
    /* Check class methods for a match */
    if (strcmp(method,"cget") == 0) {
      if (objc < 3) {
        Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
        return TCL_ERROR;
      }
      attrname = Tcl_GetStringFromObj(objv[2],NULL);
      attr = cls->attributes;
      while (attr && attr->name) {
        if ((strcmp(attr->name, attrname) == 0) && (attr->getmethod)) {
          oldarg = objv[1];
          objv[1] = inst->thisptr;
          Tcl_IncrRefCount(inst->thisptr);
          rcode = (*attr->getmethod)(clientData,interp,2, objv);
          objv[1] = oldarg;
          Tcl_DecrRefCount(inst->thisptr);
          return rcode;
        }
        attr++;
      }
      if (strcmp(attrname, "-this") == 0) {
        Tcl_SetObjResult(interp, Tcl_DuplicateObj(inst->thisptr));
        return TCL_OK;
      }
      if (strcmp(attrname, "-thisown") == 0) {
        if (SWIG_Thisown(inst->thisvalue)) {
          Tcl_SetResult(interp,(char*)"1",TCL_STATIC);
        } else {
          Tcl_SetResult(interp,(char*)"0",TCL_STATIC);
        }
        return TCL_OK;
      }
    } else if (strcmp(method, "configure") == 0) {
      int i;
      if (objc < 4) {
        Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
        return TCL_ERROR;
      }
      i = 2;
      while (i < objc) {
        attrname = Tcl_GetStringFromObj(objv[i],NULL);
        attr = cls->attributes;
        while (attr && attr->name) {
          if ((strcmp(attr->name, attrname) == 0) && (attr->setmethod)) {
            oldarg = objv[i];
            objv[i] = inst->thisptr;
            Tcl_IncrRefCount(inst->thisptr);
            rcode = (*attr->setmethod)(clientData,interp,3, &objv[i-1]);
            objv[i] = oldarg;
            Tcl_DecrRefCount(inst->thisptr);
            if (rcode != TCL_OK) return rcode;
            numconf += 2;
          }
          attr++;
        }
        i+=2;
      }
    }
  }
  if (strcmp(method,"configure") == 0) {
    if (numconf >= objc) {
      return TCL_OK;
    } else {
      Tcl_SetResult(interp,(char *) "Invalid attribute name.", TCL_STATIC);
      return TCL_ERROR;
    }
  }
  if (strcmp(method,"cget") == 0) {
    Tcl_SetResult(interp,(char *) "Invalid attribute name.", TCL_STATIC);
    return TCL_ERROR;
  }
  Tcl_SetResult(interp, (char *) "Invalid method. Must be one of: configure cget -acquire -disown -delete", TCL_STATIC);
  cls = inst->classptr;
  bi = 0;
  while (cls) {
    meth = cls->methods;
    while (meth && meth->name) {
      char *cr = (char *) Tcl_GetStringResult(interp);
      size_t meth_len = strlen(meth->name);
      char* where = strchr(cr,':');
      while(where) {
        where = strstr(where, meth->name);
        if(where) {
          if(where[-1] == ' ' && (where[meth_len] == ' ' || where[meth_len]==0)) {
            break;
          } else {
            where++;
          }
        }
      }

      if (!where)
        Tcl_AppendElement(interp, (char *) meth->name);
      meth++;
    }
    cls = inst->classptr->bases[bi++];
  }
  return TCL_ERROR;
}

/* This function takes the current result and turns it into an object command */
SWIGRUNTIME Tcl_Obj *
SWIG_Tcl_NewInstanceObj(Tcl_Interp *interp, void *thisvalue, swig_type_info *type, int flags) {
  Tcl_Obj *robj = SWIG_NewPointerObj(thisvalue, type,0);
  /* Check to see if this pointer belongs to a class or not */
  if ((type->clientdata) && (interp)) {
    Tcl_CmdInfo    ci;
    char          *name;
    name = Tcl_GetStringFromObj(robj,NULL);
    if (!Tcl_GetCommandInfo(interp,name, &ci) || (flags)) {
      swig_instance *newinst = (swig_instance *) malloc(sizeof(swig_instance));
      newinst->thisptr = Tcl_DuplicateObj(robj);
      Tcl_IncrRefCount(newinst->thisptr);
      newinst->thisvalue = thisvalue;
      newinst->classptr = (swig_class *) type->clientdata;
      newinst->destroy = flags;
      newinst->cmdtok = Tcl_CreateObjCommand(interp, Tcl_GetStringFromObj(robj,NULL), (swig_wrapper_func) SWIG_MethodCommand, (ClientData) newinst, (swig_delete_func) SWIG_ObjectDelete);
      if (flags) {
        SWIG_Acquire(thisvalue);
      }
    }
  }
  return robj;
}

/* Function to create objects */
SWIGRUNTIME int
SWIG_Tcl_ObjectConstructor(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj          *newObj = 0;
  void             *thisvalue = 0;
  swig_instance   *newinst = 0;
  swig_class      *classptr = (swig_class *) clientData;
  swig_wrapper     cons = 0;
  char             *name = 0;
  int               firstarg = 0;
  int               thisarg = 0;
  int               destroy = 1;

  if (!classptr) {
    Tcl_SetResult(interp, (char *) "swig: internal runtime error. No class object defined.", TCL_STATIC);
    return TCL_ERROR;
  }
  cons = classptr->constructor;
  if (objc > 1) {
    char *s = Tcl_GetStringFromObj(objv[1],NULL);
    if (strcmp(s,"-this") == 0) {
      thisarg = 2;
      cons = 0;
    } else if (strcmp(s,"-args") == 0) {
      firstarg = 1;
    } else if (objc == 2) {
      firstarg = 1;
      name = s;
    } else if (objc >= 3) {
      char *s1;
      name = s;
      s1 = Tcl_GetStringFromObj(objv[2],NULL);
      if (strcmp(s1,"-this") == 0) {
	thisarg = 3;
	cons = 0;
      } else {
	firstarg = 1;
      }
    }
  }
  if (cons) {
    int result;
    result = (*cons)(0, interp, objc-firstarg, &objv[firstarg]);
    if (result != TCL_OK) {
      return result;
    }
    newObj = Tcl_DuplicateObj(Tcl_GetObjResult(interp));
    if (!name) name = Tcl_GetStringFromObj(newObj,NULL);
  } else if (thisarg > 0) {
    if (thisarg < objc) {
      destroy = 0;
      newObj = Tcl_DuplicateObj(objv[thisarg]);
      if (!name) name = Tcl_GetStringFromObj(newObj,NULL);
    } else {
      Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
      return TCL_ERROR;
    }
  } else {
    Tcl_SetResult(interp, (char *) "No constructor available.", TCL_STATIC);
    return TCL_ERROR;
  }
  if (SWIG_Tcl_ConvertPtr(interp,newObj, (void **) &thisvalue, *(classptr->type), 0) != SWIG_OK) {
    Tcl_DecrRefCount(newObj);
    return TCL_ERROR;
  }
  newinst = (swig_instance *) malloc(sizeof(swig_instance));
  newinst->thisptr = newObj;
  Tcl_IncrRefCount(newObj);
  newinst->thisvalue = thisvalue;
  newinst->classptr = classptr;
  newinst->destroy = destroy;
  if (destroy) {
    SWIG_Acquire(thisvalue);
  }
  newinst->cmdtok = Tcl_CreateObjCommand(interp,name, (swig_wrapper) SWIG_MethodCommand, (ClientData) newinst, (swig_delete_func) SWIG_ObjectDelete);
  return TCL_OK;
}

/* -----------------------------------------------------------------------------*
 *   Get arguments 
 * -----------------------------------------------------------------------------*/
SWIGRUNTIME int
SWIG_Tcl_GetArgs(Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], const char *fmt, ...) {
  int        argno = 0, opt = 0;
  long       tempi;
  double     tempd;
  const char *c;
  va_list    ap;
  void      *vptr;
  Tcl_Obj   *obj = 0;
  swig_type_info *ty;

  va_start(ap,fmt);
  for (c = fmt; (*c && (*c != ':') && (*c != ';')); c++,argno++) {
    if (*c == '|') {
      opt = 1;
      c++;
    }
    if (argno >= (objc-1)) {
      if (!opt) {
        Tcl_SetResult(interp, (char *) "Wrong number of arguments ", TCL_STATIC);
        goto argerror;
      } else {
        va_end(ap);
        return TCL_OK;
      }
    }

    vptr = va_arg(ap,void *);
    if (vptr) {
      if (isupper(*c)) {
        obj = SWIG_Tcl_GetConstantObj(Tcl_GetStringFromObj(objv[argno+1],0));
        if (!obj) obj = objv[argno+1];
      } else {
        obj = objv[argno+1];
      }
      switch(*c) {
      case 'i': case 'I':
      case 'l': case 'L':
      case 'h': case 'H':
      case 'b': case 'B':
        if (Tcl_GetLongFromObj(interp,obj,&tempi) != TCL_OK) goto argerror;
        if ((*c == 'i') || (*c == 'I')) *((int *)vptr) = (int)tempi;
        else if ((*c == 'l') || (*c == 'L')) *((long *)vptr) = (long)tempi;
        else if ((*c == 'h') || (*c == 'H')) *((short*)vptr) = (short)tempi;
        else if ((*c == 'b') || (*c == 'B')) *((unsigned char *)vptr) = (unsigned char)tempi;
        break;
      case 'f': case 'F':
      case 'd': case 'D':
        if (Tcl_GetDoubleFromObj(interp,obj,&tempd) != TCL_OK) goto argerror;
        if ((*c == 'f') || (*c == 'F')) *((float *) vptr) = (float)tempd;
        else if ((*c == 'd') || (*c == 'D')) *((double*) vptr) = tempd;
        break;
      case 's': case 'S':
        if (*(c+1) == '#') {
          int *vlptr = (int *) va_arg(ap, void *);
          *((char **) vptr) = Tcl_GetStringFromObj(obj, vlptr);
          c++;
        } else {
          *((char **)vptr) = Tcl_GetStringFromObj(obj,NULL);
        }
        break;
      case 'c': case 'C':
        *((char *)vptr) = *(Tcl_GetStringFromObj(obj,NULL));
        break;
      case 'p': case 'P':
        ty = (swig_type_info *) va_arg(ap, void *);
        if (SWIG_Tcl_ConvertPtr(interp, obj, (void **) vptr, ty, 0) != SWIG_OK) goto argerror;
        break;
      case 'o': case 'O':
        *((Tcl_Obj **)vptr) = objv[argno+1];
        break;
      default:
        break;
      }
    }
  }

  if ((*c != ';') && ((objc-1) > argno)) {
    Tcl_SetResult(interp, (char *) "Wrong # args.", TCL_STATIC);
    goto argerror;
  }
  va_end(ap);
  return TCL_OK;

 argerror:
  {
    char temp[32];
    sprintf(temp,"%d", argno+1);
    c = strchr(fmt,':');
    if (!c) c = strchr(fmt,';');
    if (!c) c = (char *)"";
    Tcl_AppendResult(interp,c," argument ", temp, NULL);
    va_end(ap);
    return TCL_ERROR;
  }
}

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); return TCL_ERROR;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_DB_TXN swig_types[0]
#define SWIGTYPE_p_XmlContainer swig_types[1]
#define SWIGTYPE_p_XmlContainerConfig swig_types[2]
#define SWIGTYPE_p_XmlData swig_types[3]
#define SWIGTYPE_p_XmlDocument swig_types[4]
#define SWIGTYPE_p_XmlEventReader swig_types[5]
#define SWIGTYPE_p_XmlEventReaderToWriter swig_types[6]
#define SWIGTYPE_p_XmlEventWriter swig_types[7]
#define SWIGTYPE_p_XmlIndexDeclaration swig_types[8]
#define SWIGTYPE_p_XmlIndexLookup swig_types[9]
#define SWIGTYPE_p_XmlIndexSpecification swig_types[10]
#define SWIGTYPE_p_XmlInputStream swig_types[11]
#define SWIGTYPE_p_XmlManager swig_types[12]
#define SWIGTYPE_p_XmlMetaData swig_types[13]
#define SWIGTYPE_p_XmlMetaDataIterator swig_types[14]
#define SWIGTYPE_p_XmlQueryContext swig_types[15]
#define SWIGTYPE_p_XmlQueryExpression swig_types[16]
#define SWIGTYPE_p_XmlResults swig_types[17]
#define SWIGTYPE_p_XmlStatistics swig_types[18]
#define SWIGTYPE_p_XmlTransaction swig_types[19]
#define SWIGTYPE_p_XmlUpdateContext swig_types[20]
#define SWIGTYPE_p_XmlValue swig_types[21]
#define SWIGTYPE_p_char swig_types[22]
#define SWIGTYPE_p_int swig_types[23]
#define SWIGTYPE_p_unsigned_char swig_types[24]
static swig_type_info *swig_types[26];
static swig_module_info swig_module = {swig_types, 25, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_init    Dbxml_tcl_Init
#define SWIG_name    "dbxml_tcl"
#define SWIG_prefix  ""
#define SWIG_version "0.0"

#define SWIGVERSION 0x010339 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>



#ifdef __cplusplus
extern "C" {
#endif
#ifdef MAC_TCL
#pragma export on
#endif
SWIGEXPORT int SWIG_init(Tcl_Interp *);
#ifdef MAC_TCL
#pragma export off
#endif
#ifdef __cplusplus
}
#endif



#include "db.h"
#include "dbxml/DbXml.hpp"
#include <errno.h>
#include <fstream>

/* compat w/pre-4.4 */
#ifndef DB_READ_COMMITTED
#define DB_READ_COMMITTED DB_DEGREE_2
#define DB_READ_UNCOMMITTED DB_DIRTY_READ
#endif

/* If these are not defined, there are no equivalents; just make things compile */
#ifndef DB_TXN_SNAPSHOT
#define DB_TXN_SNAPSHOT -1
#define DB_MULTIVERSION -1
#endif


using namespace DbXml;


#include <string>


extern "C" void *_NameToPtr(const char *);
#define NAME_TO_ENV(name) (DB_ENV *)_NameToPtr((name))
#define NAME_TO_TXN(name) (DB_TXN *)_NameToPtr((name))



class XmlIndexDeclaration {
public:
	XmlIndexDeclaration() {}
	XmlIndexDeclaration(const std::string &uri, const std::string &name, const std::string &index) : uri(uri), name(name), index(index) {}
#ifndef SWIGJAVA	
	const std::string &get_uri() const { return uri; }
	const std::string &get_name() const { return name; }
	const std::string &get_index() const { return index; }
#endif
	std::string uri, name, index;
};

class XmlMetaData {
public:
	XmlMetaData() {}
	XmlMetaData(const std::string &uri, const std::string &name, const
		    XmlValue &value) : uri(uri), name(name), value(value) {}
	
	const std::string &get_uri() const { return uri; }
	const std::string &get_name() const { return name; }
	const XmlValue &get_value() const { return value; }
	std::string uri, name;
	XmlValue value;
};



#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERNINLINE Tcl_Obj* 
SWIG_From_long  (long value)
{
  if (((long) INT_MIN <= value) && (value <= (long) INT_MAX)) {
    return Tcl_NewIntObj(static_cast< int >(value));
  } else {
    return Tcl_NewLongObj(value);
  }
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  return (size < INT_MAX) ? Tcl_NewStringObj(carray, static_cast< int >(size)) : NULL;
}


SWIGINTERNINLINE Tcl_Obj * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsVal_long SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, long* val)
{
  long v;
  if (Tcl_GetLongFromObj(0,obj, &v) == TCL_OK) {
    if (val) *val = (long) v;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long SWIG_TCL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_bool SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, bool *val)
{
  int v;
  if (Tcl_GetBooleanFromObj(0, obj, &v) == TCL_OK) {
    if (val) *val = v ? true : false;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_From_std_string  (const std::string& s)
{
  if (s.size()) {
    return SWIG_FromCharPtrAndSize(s.data(), s.size());
  } else {
    return SWIG_FromCharPtrAndSize(s.c_str(), 0);
  }
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(Tcl_Obj *obj, char** cptr, size_t* psize, int *alloc)
{ 
  int len = 0;
  char *cstr = Tcl_GetStringFromObj(obj, &len);
  if (cstr) {
    if (cptr)  *cptr = cstr;
    if (psize) *psize = len + 1;
    if (alloc) *alloc = SWIG_OLDOBJ;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}

SWIGINTERN void XmlManager_setDefaultContainerFlags(XmlManager *self,u_int32_t flags){
		self->setDefaultContainerFlags(flags);
	}
SWIGINTERN u_int32_t XmlManager_getDefaultContainerFlags(XmlManager const *self){
		return self->getDefaultContainerFlags();
	}
SWIGINTERN void XmlManager_compactContainer__SWIG_2(XmlManager *self,std::string const &name,XmlUpdateContext &uc,u_int32_t flags=0){
		self->compactContainer(name, uc, flags);
	}
SWIGINTERN void XmlManager_compactContainer__SWIG_4(XmlManager *self,XmlTransaction &txn,std::string const &name,XmlUpdateContext &uc,u_int32_t flags=0){
		self->compactContainer(txn, name, uc, flags);
	}
SWIGINTERN void XmlManager_truncateContainer__SWIG_2(XmlManager *self,std::string const &name,XmlUpdateContext &uc,u_int32_t flags=0){
		self->truncateContainer(name, uc, flags);
	}
SWIGINTERN void XmlManager_truncateContainer__SWIG_4(XmlManager *self,XmlTransaction &txn,std::string const &name,XmlUpdateContext &uc,u_int32_t flags=0){
		self->truncateContainer(txn, name, uc, flags);
	}
SWIGINTERN void XmlManager_reindexContainer__SWIG_2(XmlManager *self,std::string const &name,XmlUpdateContext &uc,u_int32_t flags=0){
		self->reindexContainer(name, uc, flags);
	}
SWIGINTERN void XmlManager_reindexContainer__SWIG_4(XmlManager *self,XmlTransaction &txn,std::string const &name,XmlUpdateContext &uc,u_int32_t flags=0){
		self->reindexContainer(name, uc, flags);
	}
SWIGINTERN XmlInputStream *XmlManager_createStdInInputStream(XmlManager const *self){
		return self->createStdInInputStream();
	}
SWIGINTERN XmlInputStream *XmlManager_createLocalFileInputStream(XmlManager const *self,std::string const &filename){
		return self->createLocalFileInputStream(filename);
	}




SWIGINTERN int
SWIG_AsVal_unsigned_SS_long SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, unsigned long *val) {
  long v;
  if (Tcl_GetLongFromObj(0,obj, &v) == TCL_OK) {
    if (v >= 0) {
      if (val) *val = (unsigned long) v;
      return SWIG_OK;
    }
    /* If v is negative, then this could be a negative number, or an
       unsigned value which doesn't fit in a signed long, so try to
       get it as a string so we can distinguish these cases. */
  }
  {
    int len = 0;
    const char *nptr = Tcl_GetStringFromObj(obj, &len);
    if (nptr && len > 0) {
      char *endptr;
      unsigned long v;
      if (*nptr == '-') return SWIG_OverflowError;
      errno = 0;
      v = strtoul(nptr, &endptr,0);
      if (nptr[0] == '\0' || *endptr != '\0')
	return SWIG_TypeError;
      if (v == ULONG_MAX && errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_OK;
	}
      }
    }
  }
  
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_TCL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}

SWIGINTERN XmlInputStream *XmlManager_createMemBufInputStream__SWIG_0(XmlManager const *self,char const *bytes,unsigned int const count,char const *id,bool const adopt=false){
		return self->createMemBufInputStream(bytes,
						     count,
						     id, adopt);
	}
SWIGINTERN XmlInputStream *XmlManager_createMemBufInputStream__SWIG_2(XmlManager const *self,char const *bytes,unsigned int const count,bool const copyBuffer){
		return self->createMemBufInputStream(bytes,
						     count,
						     copyBuffer);
	}
SWIGINTERN XmlInputStream *XmlManager_createURLInputStream__SWIG_0(XmlManager const *self,std::string const &baseId,std::string const &systemId,std::string const &publicId){
		return self->createURLInputStream(baseId, systemId, publicId);
	}
SWIGINTERN XmlInputStream *XmlManager_createURLInputStream__SWIG_1(XmlManager const *self,std::string const &baseId,std::string const &systemId){
		return self->createURLInputStream(baseId, systemId);
	}
SWIGINTERN XmlContainer *XmlManager_createContainer__SWIG_0(XmlManager *self,std::string const &name){
		return new XmlContainer(self->createContainer(name));
	}
SWIGINTERN XmlContainer *XmlManager_createContainer__SWIG_1(XmlManager *self,XmlTransaction &txn,std::string const &name){
		return new XmlContainer(self->createContainer(txn, name));
	}
SWIGINTERN XmlContainer *XmlManager_openContainer__SWIG_0(XmlManager *self,XmlTransaction &txn,std::string const &name){
		return new XmlContainer(self->openContainer(txn, name));
	}
SWIGINTERN XmlContainer *XmlManager_openContainer__SWIG_1(XmlManager *self,std::string const &name){
		return new XmlContainer(self->openContainer(name));
	}
SWIGINTERN XmlContainer *XmlManager_createContainer__SWIG_2(XmlManager *self,std::string const &name,XmlContainerConfig config){
		return new XmlContainer(
			self->createContainer(name, config));
	 }
SWIGINTERN XmlContainer *XmlManager_createContainer__SWIG_3(XmlManager *self,XmlTransaction &txn,std::string const &name,XmlContainerConfig config){
		return new XmlContainer(self->createContainer(txn, name, config));
        }
SWIGINTERN XmlContainer *XmlManager_createContainer__SWIG_4(XmlManager *self,std::string const &name,XmlContainerConfig flags,enum XmlContainer::ContainerType type,int mode=0){
		return new XmlContainer(
			self->createContainer(name, flags, type, mode));
	 }
SWIGINTERN XmlContainer *XmlManager_createContainer__SWIG_6(XmlManager *self,XmlTransaction &txn,std::string const &name,XmlContainerConfig flags,enum XmlContainer::ContainerType type,int mode=0){
		return new XmlContainer(self->createContainer(txn, name, flags,
							      type, mode));
        }
SWIGINTERN XmlContainer *XmlManager_openContainer__SWIG_2(XmlManager *self,std::string const &name,XmlContainerConfig flags){
		return new XmlContainer(self->openContainer(name, flags));
        }
SWIGINTERN XmlContainer *XmlManager_openContainer__SWIG_3(XmlManager *self,XmlTransaction &txn,std::string const &name,XmlContainerConfig flags){
		return new XmlContainer(self->openContainer(txn, name, flags));
        }
SWIGINTERN XmlContainer *XmlManager_openContainer__SWIG_4(XmlManager *self,std::string const &name,XmlContainerConfig flags,enum XmlContainer::ContainerType type,int mode=0){
	    return new XmlContainer(self->openContainer(name,
						    flags, type, mode));
        }
SWIGINTERN XmlContainer *XmlManager_openContainer__SWIG_6(XmlManager *self,XmlTransaction &txn,std::string const &name,XmlContainerConfig flags,enum XmlContainer::ContainerType type,int mode=0){
	    return new XmlContainer(self->openContainer(txn, name,
						    flags, type, mode));
        }
SWIGINTERN XmlContainer *XmlManager_createContainer__SWIG_8(XmlManager *self,std::string const &name,u_int32_t flags,enum XmlContainer::ContainerType type=XmlContainer::NodeContainer,int mode=0){
		return new XmlContainer(
			self->createContainer(name, flags, type, mode));
	 }
SWIGINTERN XmlContainer *XmlManager_createContainer__SWIG_11(XmlManager *self,XmlTransaction &txn,std::string const &name,u_int32_t flags,enum XmlContainer::ContainerType type=XmlContainer::NodeContainer,int mode=0){
		return new XmlContainer(self->createContainer(txn, name, flags,
							      type, mode));
        }
SWIGINTERN XmlContainer *XmlManager_openContainer__SWIG_8(XmlManager *self,std::string const &name,u_int32_t flags){
		XmlContainerConfig config(flags);
		config.setContainerType(self->getDefaultContainerType());
		config.setMode(self->getDefaultContainerConfig().getMode());
		config.setPageSize(self->getDefaultPageSize());
		config.setSequenceIncrement(self->getDefaultSequenceIncrement());
		return new XmlContainer(self->openContainer(name, config));
        }
SWIGINTERN XmlContainer *XmlManager_openContainer__SWIG_9(XmlManager *self,XmlTransaction &txn,std::string const &name,u_int32_t flags){
		XmlContainerConfig config(flags);
		config.setContainerType(self->getDefaultContainerType());
		config.setMode(self->getDefaultContainerConfig().getMode());
		config.setPageSize(self->getDefaultPageSize());
		config.setSequenceIncrement(self->getDefaultSequenceIncrement());
		return new XmlContainer(self->openContainer(txn, name, config));
        }
SWIGINTERN XmlContainer *XmlManager_openContainer__SWIG_10(XmlManager *self,std::string const &name,u_int32_t flags,enum XmlContainer::ContainerType type,int mode=0){
	    return new XmlContainer(self->openContainer(name,
						    flags, type, mode));
        }
SWIGINTERN XmlContainer *XmlManager_openContainer__SWIG_12(XmlManager *self,XmlTransaction &txn,std::string const &name,u_int32_t flags,enum XmlContainer::ContainerType type,int mode=0){
	    return new XmlContainer(self->openContainer(txn, name,
						    flags, type, mode));
        }
SWIGINTERN void XmlManager_dumpContainer(XmlManager *self,std::string const &name,char const *filename){
		std::ofstream out(filename);
		self->dumpContainer(name, &out);
		out.close();
	}
SWIGINTERN void XmlManager_loadContainer(XmlManager *self,std::string const &name,char const *filename,XmlUpdateContext &uc){
		std::ifstream in(filename);
		unsigned long lineno = 0;
		self->loadContainer(name, &in, &lineno, uc);
		in.close();
	}
SWIGINTERN void XmlManager_verifyContainer__SWIG_0(XmlManager *self,std::string const &name,char const *filename,u_int32_t flags=0){
		std::ofstream out;
		if (flags & DB_SALVAGE)
			out.open(filename);
		self->verifyContainer(name, &out, flags);
		if (flags & DB_SALVAGE)
			out.close();
	}
SWIGINTERN XmlDocument *XmlManager_createDocument(XmlManager *self){
		return new XmlDocument(self->createDocument());
	}
SWIGINTERN XmlQueryContext *XmlManager_createQueryContext__SWIG_0(XmlManager *self,enum XmlQueryContext::ReturnType rt,enum XmlQueryContext::EvaluationType et){
		return new XmlQueryContext(self->createQueryContext(rt, et));
	}
SWIGINTERN XmlQueryContext *XmlManager_createQueryContext__SWIG_1(XmlManager *self){
		return new XmlQueryContext(self->createQueryContext(
			XmlQueryContext::LiveValues, XmlQueryContext::Eager));
	}
SWIGINTERN XmlQueryContext *XmlManager_createQueryContext__SWIG_2(XmlManager *self,enum XmlQueryContext::ReturnType rt){
		return new XmlQueryContext(self->createQueryContext(rt, XmlQueryContext::Eager));
	}
SWIGINTERN XmlUpdateContext *XmlManager_createUpdateContext(XmlManager *self){
		return new XmlUpdateContext(self->createUpdateContext());
	}
SWIGINTERN XmlQueryExpression *XmlManager_prepare__SWIG_0(XmlManager *self,std::string const &query,XmlQueryContext &context){
		return new XmlQueryExpression(self->prepare(query, context));
	}
SWIGINTERN XmlQueryExpression *XmlManager_prepare__SWIG_1(XmlManager *self,XmlTransaction &txn,std::string const &query,XmlQueryContext &context){
		return new XmlQueryExpression(self->prepare(
						      txn,query, context));
	}
SWIGINTERN XmlResults *XmlManager_query__SWIG_0(XmlManager *self,std::string const &query,XmlQueryContext &context,u_int32_t flags){
		return new XmlResults(self->query(query, context, flags));
	}
SWIGINTERN XmlResults *XmlManager_query__SWIG_1(XmlManager *self,XmlTransaction &txn,std::string const &query,XmlQueryContext &context,u_int32_t flags){
		return new XmlResults(self->query(txn, query, context, flags));
	}
SWIGINTERN XmlResults *XmlManager_query__SWIG_2(XmlManager *self,std::string const &query,XmlQueryContext &context){
		return new XmlResults(self->query(query, context, 0));
	}
SWIGINTERN XmlResults *XmlManager_query__SWIG_3(XmlManager *self,XmlTransaction &txn,std::string const &query,XmlQueryContext &context){
		return new XmlResults(self->query(txn, query, context, 0));
	}
SWIGINTERN XmlResults *XmlManager_createResults(XmlManager *self){
		return new XmlResults(self->createResults());
	}
SWIGINTERN XmlTransaction *XmlManager_createTransaction__SWIG_0(XmlManager *self,DB_TXN *toAdopt){
		return new XmlTransaction(self->createTransaction(toAdopt));
        }
SWIGINTERN XmlTransaction *XmlManager_createTransaction__SWIG_1(XmlManager *self,u_int32_t flags){
		return new XmlTransaction(self->createTransaction(flags));
	}
SWIGINTERN XmlTransaction *XmlManager_createTransaction__SWIG_2(XmlManager *self){
		return new XmlTransaction(self->createTransaction((u_int32_t)0));
        }
SWIGINTERN XmlIndexLookup *XmlManager_createIndexLookup__SWIG_0(XmlManager *self,XmlContainer &cont,std::string const &uri,std::string const &name,std::string const &index,XmlValue const &value=XmlValue(),enum XmlIndexLookup::Operation op=XmlIndexLookup::NONE){
		return new XmlIndexLookup(self->createIndexLookup(cont, uri,name,
								  index, value,
								  op));
	}

  #define SWIG_From_bool   Tcl_NewBooleanObj 

SWIGINTERN XmlResults *XmlIndexLookup_execute__SWIG_0(XmlIndexLookup const *self,XmlQueryContext &context,u_int32_t flags=0){
		return new XmlResults(self->execute(context, flags));
	}
SWIGINTERN XmlResults *XmlIndexLookup_execute__SWIG_2(XmlIndexLookup const *self,XmlTransaction &txn,XmlQueryContext &context,u_int32_t flags=0){
		return new XmlResults(self->execute(txn, context, flags));
	}

#include <stdio.h>
#if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
# ifndef snprintf
#  define snprintf _snprintf
# endif
#endif


SWIGINTERNINLINE Tcl_Obj* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  if (value < (unsigned long) LONG_MAX) {
    return SWIG_From_long  (static_cast< long >(value));
  } else {
    char temp[256]; 
    sprintf(temp, "%lu", value);
    return Tcl_NewStringObj(temp,-1);
  }
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}

SWIGINTERN XmlIndexSpecification *XmlContainer_getIndexSpecification__SWIG_0(XmlContainer const *self){
		return new XmlIndexSpecification(self->getIndexSpecification());
	}
SWIGINTERN XmlIndexSpecification *XmlContainer_getIndexSpecification__SWIG_1(XmlContainer const *self,XmlTransaction &txn){
		 return new XmlIndexSpecification(
			 self->getIndexSpecification(txn));
        }
SWIGINTERN XmlIndexSpecification *XmlContainer_getIndexSpecification__SWIG_2(XmlContainer const *self,XmlTransaction &txn,u_int32_t flags){
		 return new XmlIndexSpecification(
			 self->getIndexSpecification(txn, flags));
	 }
SWIGINTERN XmlDocument *XmlContainer_getDocument__SWIG_0(XmlContainer *self,std::string const &name){
		return new XmlDocument(self->getDocument(name, 0));
	}
SWIGINTERN XmlDocument *XmlContainer_getDocument__SWIG_1(XmlContainer *self,XmlTransaction &txn,std::string const &name){
		return new XmlDocument(self->getDocument(txn, name, 0));
	}
SWIGINTERN XmlValue *XmlContainer_getNode__SWIG_0(XmlContainer *self,std::string const &name){
		return new XmlValue(self->getNode(name, 0));
	}
SWIGINTERN XmlValue *XmlContainer_getNode__SWIG_1(XmlContainer *self,XmlTransaction &txn,std::string const &name){
		return new XmlValue(self->getNode(txn, name, 0));
	}
SWIGINTERN XmlValue *XmlContainer_getNode__SWIG_2(XmlContainer *self,std::string const &name,u_int32_t flags){
		return new XmlValue(self->getNode(name, flags));
	}
SWIGINTERN XmlValue *XmlContainer_getNode__SWIG_3(XmlContainer *self,XmlTransaction &txn,std::string const &name,u_int32_t flags){
		return new XmlValue(self->getNode(txn, name, flags));
	}
SWIGINTERN XmlDocument *XmlContainer_getDocument__SWIG_2(XmlContainer *self,std::string const &name,u_int32_t flags){
		return new XmlDocument(self->getDocument(name, flags));
	}
SWIGINTERN XmlDocument *XmlContainer_getDocument__SWIG_3(XmlContainer *self,XmlTransaction &txn,std::string const &name,u_int32_t flags){
		return new XmlDocument(self->getDocument(txn, name, flags));
	}
SWIGINTERN XmlResults *XmlContainer_getAllDocuments__SWIG_0(XmlContainer *self,u_int32_t flags){
		   return new XmlResults(self->getAllDocuments(flags));
	}
SWIGINTERN XmlResults *XmlContainer_getAllDocuments__SWIG_1(XmlContainer *self,XmlTransaction &txn,u_int32_t flags){
		   return new XmlResults(self->getAllDocuments(txn, flags));
	}
SWIGINTERN XmlResults *XmlContainer_lookupIndex__SWIG_0(XmlContainer *self,XmlQueryContext &context,std::string const &uri,std::string const &name,std::string const &index,XmlValue const &value=XmlValue(),u_int32_t flags=0){
		return new XmlResults(
			self->lookupIndex(context, uri, name, index,
					  value, flags));
	}
SWIGINTERN XmlResults *XmlContainer_lookupIndex__SWIG_3(XmlContainer *self,XmlQueryContext &context,std::string const &uri,std::string const &name,std::string const &parent_uri,std::string const &parent_name,std::string const &index,XmlValue const &value=XmlValue(),u_int32_t flags=0){
		return new XmlResults(self->lookupIndex(context, uri, name,
							parent_uri, parent_name,
							index, value, flags));
	}
SWIGINTERN XmlResults *XmlContainer_lookupIndex__SWIG_6(XmlContainer *self,XmlTransaction &txn,XmlQueryContext &context,std::string const &uri,std::string const &name,std::string const &index,XmlValue const &value=XmlValue(),u_int32_t flags=0){
                return new XmlResults(self->lookupIndex(txn, context, uri, name,
							index, value, flags));
        }
SWIGINTERN XmlResults *XmlContainer_lookupIndex__SWIG_9(XmlContainer *self,XmlTransaction &txn,XmlQueryContext &context,std::string const &uri,std::string const &name,std::string const &parent_uri,std::string const &parent_name,std::string const &index,XmlValue const &value=XmlValue(),u_int32_t flags=0){
	        return new XmlResults(self->lookupIndex(txn, context, uri, name,
							parent_uri, parent_name,
							index, value, flags));
	}
SWIGINTERN XmlStatistics *XmlContainer_lookupStatistics__SWIG_0(XmlContainer *self,std::string const &uri,std::string const &name,std::string const &index,XmlValue const &value=XmlValue()){
		return new XmlStatistics(self->lookupStatistics(uri, name, index,
								value));
	}
SWIGINTERN XmlStatistics *XmlContainer_lookupStatistics__SWIG_2(XmlContainer *self,std::string const &uri,std::string const &name,std::string const &parent_uri,std::string const &parent_name,std::string const &index,XmlValue const &value=XmlValue()){
		return new XmlStatistics(self->lookupStatistics(uri, name,
								parent_uri,
								parent_name,
								index, value));
	}
SWIGINTERN XmlStatistics *XmlContainer_lookupStatistics__SWIG_4(XmlContainer *self,XmlTransaction &txn,std::string const &uri,std::string const &name,std::string const &index,XmlValue const &value=XmlValue()){
		return new XmlStatistics(self->lookupStatistics(txn, uri, name,
								index, value));
	}
SWIGINTERN XmlStatistics *XmlContainer_lookupStatistics__SWIG_6(XmlContainer *self,XmlTransaction &txn,std::string const &uri,std::string const &name,std::string const &parent_uri,std::string const &parent_name,std::string const &index,XmlValue const &value=XmlValue()){
		return new XmlStatistics(self->lookupStatistics(txn, uri, name,
								parent_uri,
								parent_name,
								index, value));
	}
SWIGINTERN std::string XmlDocument_getContentAsString(XmlDocument const *self){
		std::string s;
		return self->getContent(s);
	}
SWIGINTERN XmlData const *XmlDocument_getContent(XmlDocument const *self){
		return new XmlData(self->getContent());
	}
SWIGINTERN XmlData const *XmlDocument_getMetaData__SWIG_2(XmlDocument *self,std::string const &uri,std::string const &name){
		XmlData data;
		bool ret = self->getMetaData(uri, name, data);
		if (ret)
			return new XmlData(data);
		return 0;
	}
SWIGINTERN XmlMetaDataIterator *XmlDocument_getMetaDataIterator(XmlDocument const *self){
		return new XmlMetaDataIterator(self->getMetaDataIterator());
	}
SWIGINTERN bool XmlDocument_equals(XmlDocument const *self,XmlDocument const &other){
		return (*self == other);
	}
SWIGINTERN XmlMetaData *XmlMetaDataIterator_next(XmlMetaDataIterator *self){
		XmlMetaData *idecl = new XmlMetaData;
		if (self->next(idecl->uri, idecl->name, idecl->value))
			return idecl;
		else
			delete idecl;
		return NULL;
	}
SWIGINTERN XmlValue *XmlQueryContext_getVariableValue(XmlQueryContext const *self,std::string const &name){
		XmlValue *value = new XmlValue;
		try {
			if (self->getVariableValue(name, *value))
				return value;
			else {
				delete value;
				return NULL;
			}
		}
		catch(...) {
			delete value;
			throw;
		}
	}
SWIGINTERN XmlResults *XmlQueryContext_getVariableValues(XmlQueryContext const *self,std::string const &name){
		XmlResults *res = new XmlResults();
		try {
			if (self->getVariableValue(name, *res))
				return res;
			else {
				delete res;
				return NULL;
			}
		}
		catch(...) {
			delete res;
			throw;
		}
	}
SWIGINTERN std::string const XmlQueryContext_get(XmlQueryContext const *self,char const *name){
		XmlValue value;
		return self->getVariableValue(name, value) ? value.asString() : "";
	}
SWIGINTERN void XmlQueryContext_set(XmlQueryContext *self,std::string const &name,std::string const &value){
		XmlValue xval(value);
		self->setVariableValue(name, xval);
	}
SWIGINTERN void XmlQueryContext_setDebugVariable(XmlQueryContext *self,std::string const &var){
		self->setVariableValue("dbxml:debug", var);
	}

SWIGINTERN int
SWIG_AsVal_double SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, double *val)
{
  double v;
  if (Tcl_GetDoubleFromObj(0, obj, &v) == TCL_OK) {
    if (val) *val = v;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}


  #define SWIG_From_double   Tcl_NewDoubleObj 

SWIGINTERN XmlData *XmlValue_asBinary(XmlValue const *self){
		XmlData data = self->asBinary();
		return new XmlData(data);
	}
SWIGINTERN XmlDocument *XmlValue_asDocument(XmlValue const *self){
		return new XmlDocument(self->asDocument());
	}

SWIGINTERNINLINE Tcl_Obj *
SWIG_From_short  (short value)
{    
  return SWIG_From_long  (value);
}

SWIGINTERN XmlValue *XmlValue_getParentNode(XmlValue const *self){
		return new XmlValue(self->getParentNode());
	}
SWIGINTERN XmlValue *XmlValue_getFirstChild(XmlValue const *self){
		return new XmlValue(self->getFirstChild());
	}
SWIGINTERN XmlValue *XmlValue_getLastChild(XmlValue const *self){
		return new XmlValue(self->getLastChild());
	}
SWIGINTERN XmlValue *XmlValue_getPreviousSibling(XmlValue const *self){
		return new XmlValue(self->getPreviousSibling());
	}
SWIGINTERN XmlValue *XmlValue_getNextSibling(XmlValue const *self){
		return new XmlValue(self->getNextSibling());
	}
SWIGINTERN XmlResults *XmlValue_getAttributes(XmlValue const *self){
		return new XmlResults(self->getAttributes());
	}
SWIGINTERN XmlValue *XmlValue_getOwnerElement(XmlValue const *self){
		return new XmlValue(self->getOwnerElement());
	}
SWIGINTERN void XmlValue_setValue(XmlValue &to,XmlValue const &from){
		to = from;
	}
SWIGINTERN XmlIndexDeclaration *XmlIndexSpecification_find(XmlIndexSpecification *self,std::string const &uri,std::string const &name){
		XmlIndexDeclaration *idecl =
			new XmlIndexDeclaration(uri, name, "");
		if (self->find(idecl->uri, idecl->name, idecl->index))
			return idecl;
		else {
			delete idecl;
			return NULL;
		}
	}
SWIGINTERN XmlIndexDeclaration *XmlIndexSpecification_next(XmlIndexSpecification *self){
		XmlIndexDeclaration *idecl = new XmlIndexDeclaration;
		if (self->next(idecl->uri, idecl->name, idecl->index))
			return idecl;
		else {
			delete idecl;
			return NULL;
		}
	}
SWIGINTERN XmlResults *XmlQueryExpression_execute__SWIG_0(XmlQueryExpression const *self,XmlQueryContext &context,u_int32_t flags=0){
		return new XmlResults(self->execute(context, flags));
	}
SWIGINTERN XmlResults *XmlQueryExpression_execute__SWIG_2(XmlQueryExpression const *self,XmlValue const &contextItem,XmlQueryContext &context,u_int32_t flags=0){
		return new XmlResults(
			self->execute(contextItem, context, flags));
	}
SWIGINTERN XmlResults *XmlQueryExpression_execute__SWIG_4(XmlQueryExpression const *self,XmlTransaction &txn,XmlQueryContext &context,u_int32_t flags=0){
		return new XmlResults(self->execute(txn, context, flags));
	}
SWIGINTERN XmlResults *XmlQueryExpression_execute__SWIG_6(XmlQueryExpression const *self,XmlTransaction &txn,XmlValue const &contextItem,XmlQueryContext &context,u_int32_t flags=0){
		return new XmlResults(self->execute(txn, contextItem,
						    context, flags));
	}

SWIGINTERNINLINE Tcl_Obj *
SWIG_From_unsigned_SS_int  (unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}

SWIGINTERN void XmlInputStream_freeMemory(XmlInputStream *self){
		delete self;
	}
SWIGINTERN XmlTransaction *XmlTransaction_createChild__SWIG_0(XmlTransaction *self,u_int32_t flags=0){
		return new XmlTransaction(self->createChild(flags));
	}
SWIGINTERN void XmlTransaction_commit__SWIG_1(XmlTransaction *self){
	  self->commit(0);
	}
SWIGINTERN unsigned char const *XmlEventReader_getValue(XmlEventReader const *self){
		size_t len;
		return self->getValue(len);
	}
SWIGINTERN size_t XmlEventReader_getValueLength(XmlEventReader const *self){
		size_t len;
		(void)self->getValue(len);
		return len;
	}

SWIGINTERNINLINE int
SWIG_AsVal_size_t SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_TCL_CALL_ARGS_2(obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN int
_wrap_dbxml_version(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int *arg1 = (int *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  char *result = 0 ;
  
  arg1 = NULL; 
  arg2 = NULL; 
  arg3 = NULL; 
  if (SWIG_GetArgs(interp, objc, objv,":dbxml_version ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (char *)dbxml_version(arg1,arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_setLogLevel(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  enum LogLevel arg1 ;
  bool arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:setLogLevel level enabled ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "setLogLevel" "', argument " "1"" of type '" "enum LogLevel""'");
  } 
  arg1 = static_cast< enum LogLevel >(val1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "setLogLevel" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      setLogLevel(arg1,arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_setLogCategory(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  enum LogCategory arg1 ;
  bool arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:setLogCategory category enabled ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "setLogCategory" "', argument " "1"" of type '" "enum LogCategory""'");
  } 
  arg1 = static_cast< enum LogCategory >(val1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "setLogCategory" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      setLogCategory(arg1,arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlManager__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlManager ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlManager *)new XmlManager();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlManager,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlManager__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  u_int32_t arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  XmlManager *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlManager flags ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_XmlManager" "', argument " "1"" of type '" "u_int32_t""'");
  } 
  arg1 = static_cast< u_int32_t >(val1);
  {
    try {
      result = (XmlManager *)new XmlManager(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlManager,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlManager__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  DB_ENV *arg1 = (DB_ENV *) 0 ;
  u_int32_t arg2 ;
  int val2 ;
  int ecode2 = 0 ;
  XmlManager *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:new_XmlManager dbEnv flags ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    char *arg = Tcl_GetStringFromObj(objv[1], NULL);
    DB_ENV *envp = NAME_TO_ENV(arg);
    arg1 = envp;
  }
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_XmlManager" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      result = (XmlManager *)new XmlManager(arg1,arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlManager,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlManager(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlManager__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_XmlManager__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    {
      /* This would be a typecheck for a DB_ENV *; just succeed */
      _v = 1; 
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_XmlManager__SWIG_2(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlManager'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlManager(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlManager self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlManager" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_getFlags(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  u_int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_getFlags self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_getFlags" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = ((XmlManager const *)arg1)->getFlags();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_getDefaultContainerConfig(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlContainerConfig result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_getDefaultContainerConfig self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_getDefaultContainerConfig" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = (arg1)->getDefaultContainerConfig();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new XmlContainerConfig(static_cast< const XmlContainerConfig& >(result))), SWIGTYPE_p_XmlContainerConfig, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_setDefaultContainerConfig(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlContainerConfig *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_setDefaultContainerConfig self config ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_setDefaultContainerConfig" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlContainerConfig,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_setDefaultContainerConfig" "', argument " "2"" of type '" "XmlContainerConfig &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_setDefaultContainerConfig" "', argument " "2"" of type '" "XmlContainerConfig &""'"); 
  }
  arg2 = reinterpret_cast< XmlContainerConfig * >(argp2);
  {
    try {
      (arg1)->setDefaultContainerConfig(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_setDefaultContainerType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  enum XmlContainer::ContainerType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_setDefaultContainerType self type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_setDefaultContainerType" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlManager_setDefaultContainerType" "', argument " "2"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg2 = static_cast< enum XmlContainer::ContainerType >(val2);
  {
    try {
      (arg1)->setDefaultContainerType(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_getDefaultContainerType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlContainer::ContainerType result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_getDefaultContainerType self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_getDefaultContainerType" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = (enum XmlContainer::ContainerType)((XmlManager const *)arg1)->getDefaultContainerType();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_setDefaultPageSize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  u_int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_setDefaultPageSize self pageSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_setDefaultPageSize" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlManager_setDefaultPageSize" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      (arg1)->setDefaultPageSize(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_getDefaultPageSize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  u_int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_getDefaultPageSize self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_getDefaultPageSize" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = ((XmlManager const *)arg1)->getDefaultPageSize();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_setDefaultSequenceIncrement(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  u_int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_setDefaultSequenceIncrement self incr ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_setDefaultSequenceIncrement" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlManager_setDefaultSequenceIncrement" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      (arg1)->setDefaultSequenceIncrement(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_getDefaultSequenceIncrement(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  u_int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_getDefaultSequenceIncrement self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_getDefaultSequenceIncrement" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = ((XmlManager const *)arg1)->getDefaultSequenceIncrement();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_getHome(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_getHome self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_getHome" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = (std::string *) &((XmlManager const *)arg1)->getHome();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_getImplicitTimezone(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_getImplicitTimezone self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_getImplicitTimezone" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = (int)((XmlManager const *)arg1)->getImplicitTimezone();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_setImplicitTimezone(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_setImplicitTimezone self tz ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_setImplicitTimezone" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlManager_setImplicitTimezone" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->setImplicitTimezone(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_existsContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_existsContainer self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_existsContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_existsContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_existsContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (int)(arg1)->existsContainer((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_removeContainer__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_removeContainer self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_removeContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_removeContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_removeContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->removeContainer((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_removeContainer__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_removeContainer self txn name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_removeContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_removeContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_removeContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_removeContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_removeContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      (arg1)->removeContainer(*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_removeContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlManager_removeContainer__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_removeContainer__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_removeContainer'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_renameContainer__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_renameContainer self oldName newName ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_renameContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_renameContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_renameContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_renameContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_renameContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      (arg1)->renameContainer((std::string const &)*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_renameContainer__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_renameContainer self txn oldName newName ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_renameContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_renameContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_renameContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_renameContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_renameContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_renameContainer" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_renameContainer" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      (arg1)->renameContainer(*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_renameContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_renameContainer__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_renameContainer__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_renameContainer'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_upgradeContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_upgradeContainer self name uc ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_upgradeContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_upgradeContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_upgradeContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_upgradeContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_upgradeContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      (arg1)->upgradeContainer((std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_compactContainer__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  XmlContainerConfig arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_compactContainer self name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_compactContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_compactContainer" "', argument " "4"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "4"" of type '" "XmlContainerConfig""'");
    } else {
      arg4 = *(reinterpret_cast< XmlContainerConfig * >(argp4));
    }
  }
  {
    try {
      (arg1)->compactContainer((std::string const &)*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_compactContainer__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  XmlContainerConfig arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_compactContainer self txn name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_compactContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_compactContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlManager_compactContainer" "', argument " "5"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "5"" of type '" "XmlContainerConfig""'");
    } else {
      arg5 = *(reinterpret_cast< XmlContainerConfig * >(argp5));
    }
  }
  {
    try {
      (arg1)->compactContainer(*arg2,(std::string const &)*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_truncateContainer__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  XmlContainerConfig arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_truncateContainer self name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_truncateContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_truncateContainer" "', argument " "4"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "4"" of type '" "XmlContainerConfig""'");
    } else {
      arg4 = *(reinterpret_cast< XmlContainerConfig * >(argp4));
    }
  }
  {
    try {
      (arg1)->truncateContainer((std::string const &)*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_truncateContainer__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  XmlContainerConfig arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_truncateContainer self txn name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_truncateContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_truncateContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlManager_truncateContainer" "', argument " "5"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "5"" of type '" "XmlContainerConfig""'");
    } else {
      arg5 = *(reinterpret_cast< XmlContainerConfig * >(argp5));
    }
  }
  {
    try {
      (arg1)->truncateContainer(*arg2,(std::string const &)*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_reindexContainer__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  XmlContainerConfig arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_reindexContainer self name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_reindexContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_reindexContainer" "', argument " "4"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "4"" of type '" "XmlContainerConfig""'");
    } else {
      arg4 = *(reinterpret_cast< XmlContainerConfig * >(argp4));
    }
  }
  {
    try {
      (arg1)->reindexContainer((std::string const &)*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_reindexContainer__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  XmlContainerConfig arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_reindexContainer self txn name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_reindexContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_reindexContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlManager_reindexContainer" "', argument " "5"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "5"" of type '" "XmlContainerConfig""'");
    } else {
      arg5 = *(reinterpret_cast< XmlContainerConfig * >(argp5));
    }
  }
  {
    try {
      (arg1)->reindexContainer(*arg2,(std::string const &)*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_setDefaultContainerFlags(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  u_int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_setDefaultContainerFlags self flags ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_setDefaultContainerFlags" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlManager_setDefaultContainerFlags" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      XmlManager_setDefaultContainerFlags(arg1,arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_getDefaultContainerFlags(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  u_int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_getDefaultContainerFlags self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_getDefaultContainerFlags" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = XmlManager_getDefaultContainerFlags((XmlManager const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_compactContainer__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_compactContainer self name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_compactContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_compactContainer" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      XmlManager_compactContainer__SWIG_2(arg1,(std::string const &)*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_compactContainer__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_compactContainer self name uc ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_compactContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      XmlManager_compactContainer__SWIG_2(arg1,(std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_compactContainer__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  u_int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_compactContainer self txn name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_compactContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_compactContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_compactContainer" "', argument " "5"" of type '" "u_int32_t""'");
  } 
  arg5 = static_cast< u_int32_t >(val5);
  {
    try {
      XmlManager_compactContainer__SWIG_4(arg1,*arg2,(std::string const &)*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_compactContainer__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_compactContainer self txn name uc ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_compactContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_compactContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_compactContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      XmlManager_compactContainer__SWIG_4(arg1,*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_compactContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_compactContainer__SWIG_3(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_compactContainer__SWIG_5(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_compactContainer__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_compactContainer__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlManager_compactContainer__SWIG_1(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_compactContainer__SWIG_4(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_compactContainer'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_truncateContainer__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_truncateContainer self name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_truncateContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_truncateContainer" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      XmlManager_truncateContainer__SWIG_2(arg1,(std::string const &)*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_truncateContainer__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_truncateContainer self name uc ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_truncateContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      XmlManager_truncateContainer__SWIG_2(arg1,(std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_truncateContainer__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  u_int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_truncateContainer self txn name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_truncateContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_truncateContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_truncateContainer" "', argument " "5"" of type '" "u_int32_t""'");
  } 
  arg5 = static_cast< u_int32_t >(val5);
  {
    try {
      XmlManager_truncateContainer__SWIG_4(arg1,*arg2,(std::string const &)*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_truncateContainer__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_truncateContainer self txn name uc ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_truncateContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_truncateContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_truncateContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      XmlManager_truncateContainer__SWIG_4(arg1,*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_truncateContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_truncateContainer__SWIG_3(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_truncateContainer__SWIG_5(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_truncateContainer__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_truncateContainer__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlManager_truncateContainer__SWIG_1(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_truncateContainer__SWIG_4(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_truncateContainer'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_reindexContainer__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_reindexContainer self name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_reindexContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_reindexContainer" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      XmlManager_reindexContainer__SWIG_2(arg1,(std::string const &)*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_reindexContainer__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_reindexContainer self name uc ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_reindexContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      XmlManager_reindexContainer__SWIG_2(arg1,(std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_reindexContainer__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  u_int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_reindexContainer self txn name uc flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_reindexContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_reindexContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_reindexContainer" "', argument " "5"" of type '" "u_int32_t""'");
  } 
  arg5 = static_cast< u_int32_t >(val5);
  {
    try {
      XmlManager_reindexContainer__SWIG_4(arg1,*arg2,(std::string const &)*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_reindexContainer__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_reindexContainer self txn name uc ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_reindexContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_reindexContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_reindexContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      XmlManager_reindexContainer__SWIG_4(arg1,*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_reindexContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_reindexContainer__SWIG_3(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_reindexContainer__SWIG_5(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_reindexContainer__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_reindexContainer__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlManager_reindexContainer__SWIG_1(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_reindexContainer__SWIG_4(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_reindexContainer'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createStdInInputStream(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlInputStream *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_createStdInInputStream self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createStdInInputStream" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = (XmlInputStream *)XmlManager_createStdInInputStream((XmlManager const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlInputStream,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createLocalFileInputStream(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  XmlInputStream *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_createLocalFileInputStream self filename ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createLocalFileInputStream" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createLocalFileInputStream" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createLocalFileInputStream" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (XmlInputStream *)XmlManager_createLocalFileInputStream((XmlManager const *)arg1,(std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlInputStream,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createMemBufInputStream__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  XmlInputStream *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_createMemBufInputStream self bytes count id adopt ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createMemBufInputStream" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createMemBufInputStream" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlManager_createMemBufInputStream" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_createMemBufInputStream" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  ecode5 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_createMemBufInputStream" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = (XmlInputStream *)XmlManager_createMemBufInputStream__SWIG_0((XmlManager const *)arg1,(char const *)arg2,arg3,(char const *)arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlInputStream,0));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createMemBufInputStream__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  XmlInputStream *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_createMemBufInputStream self bytes count id ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createMemBufInputStream" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createMemBufInputStream" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlManager_createMemBufInputStream" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_createMemBufInputStream" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  {
    try {
      result = (XmlInputStream *)XmlManager_createMemBufInputStream__SWIG_0((XmlManager const *)arg1,(char const *)arg2,arg3,(char const *)arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlInputStream,0));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createMemBufInputStream__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  XmlInputStream *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_createMemBufInputStream self bytes count copyBuffer ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createMemBufInputStream" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createMemBufInputStream" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlManager_createMemBufInputStream" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_createMemBufInputStream" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = (XmlInputStream *)XmlManager_createMemBufInputStream__SWIG_2((XmlManager const *)arg1,(char const *)arg2,arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlInputStream,0));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createMemBufInputStream(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_createMemBufInputStream__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_createMemBufInputStream__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_createMemBufInputStream__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_createMemBufInputStream'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createURLInputStream__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  XmlInputStream *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_createURLInputStream self baseId systemId publicId ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createURLInputStream" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createURLInputStream" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createURLInputStream" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createURLInputStream" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createURLInputStream" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_createURLInputStream" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createURLInputStream" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      result = (XmlInputStream *)XmlManager_createURLInputStream__SWIG_0((XmlManager const *)arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlInputStream,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createURLInputStream__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  XmlInputStream *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_createURLInputStream self baseId systemId ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createURLInputStream" "', argument " "1"" of type '" "XmlManager const *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createURLInputStream" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createURLInputStream" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createURLInputStream" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createURLInputStream" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      result = (XmlInputStream *)XmlManager_createURLInputStream__SWIG_1((XmlManager const *)arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlInputStream,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createURLInputStream(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_createURLInputStream__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_createURLInputStream__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_createURLInputStream'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_createContainer self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_0(arg1,(std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_createContainer self txn name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_1(arg1,*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_openContainer self txn name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_0(arg1,*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_openContainer self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_1(arg1,(std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlContainerConfig arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_createContainer self name config ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "XmlContainerConfig""'");
    } else {
      arg3 = *(reinterpret_cast< XmlContainerConfig * >(argp3));
    }
  }
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_2(arg1,(std::string const &)*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlContainerConfig arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 ;
  int res4 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_createContainer self txn name config ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "XmlContainerConfig""'");
    } else {
      arg4 = *(reinterpret_cast< XmlContainerConfig * >(argp4));
    }
  }
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_3(arg1,*arg2,(std::string const &)*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlContainerConfig arg3 ;
  enum XmlContainer::ContainerType arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_createContainer self name flags type mode ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "XmlContainerConfig""'");
    } else {
      arg3 = *(reinterpret_cast< XmlContainerConfig * >(argp3));
    }
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg4 = static_cast< enum XmlContainer::ContainerType >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_createContainer" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_4(arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlContainerConfig arg3 ;
  enum XmlContainer::ContainerType arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_createContainer self name flags type ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "XmlContainerConfig""'");
    } else {
      arg3 = *(reinterpret_cast< XmlContainerConfig * >(argp3));
    }
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg4 = static_cast< enum XmlContainer::ContainerType >(val4);
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_4(arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_6(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlContainerConfig arg4 ;
  enum XmlContainer::ContainerType arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlManager_createContainer self txn name flags type mode ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "XmlContainerConfig""'");
    } else {
      arg4 = *(reinterpret_cast< XmlContainerConfig * >(argp4));
    }
  }
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_createContainer" "', argument " "5"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg5 = static_cast< enum XmlContainer::ContainerType >(val5);
  ecode6 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "XmlManager_createContainer" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_6(arg1,*arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_7(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlContainerConfig arg4 ;
  enum XmlContainer::ContainerType arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_createContainer self txn name flags type ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "XmlContainerConfig""'");
    } else {
      arg4 = *(reinterpret_cast< XmlContainerConfig * >(argp4));
    }
  }
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_createContainer" "', argument " "5"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg5 = static_cast< enum XmlContainer::ContainerType >(val5);
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_6(arg1,*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlContainerConfig arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_openContainer self name flags ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "XmlContainerConfig""'");
    } else {
      arg3 = *(reinterpret_cast< XmlContainerConfig * >(argp3));
    }
  }
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_2(arg1,(std::string const &)*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlContainerConfig arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 ;
  int res4 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_openContainer self txn name flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "XmlContainerConfig""'");
    } else {
      arg4 = *(reinterpret_cast< XmlContainerConfig * >(argp4));
    }
  }
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_3(arg1,*arg2,(std::string const &)*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlContainerConfig arg3 ;
  enum XmlContainer::ContainerType arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_openContainer self name flags type mode ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "XmlContainerConfig""'");
    } else {
      arg3 = *(reinterpret_cast< XmlContainerConfig * >(argp3));
    }
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg4 = static_cast< enum XmlContainer::ContainerType >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_openContainer" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_4(arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlContainerConfig arg3 ;
  enum XmlContainer::ContainerType arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_openContainer self name flags type ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "XmlContainerConfig""'");
    } else {
      arg3 = *(reinterpret_cast< XmlContainerConfig * >(argp3));
    }
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg4 = static_cast< enum XmlContainer::ContainerType >(val4);
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_4(arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_6(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlContainerConfig arg4 ;
  enum XmlContainer::ContainerType arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlManager_openContainer self txn name flags type mode ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "XmlContainerConfig""'");
    } else {
      arg4 = *(reinterpret_cast< XmlContainerConfig * >(argp4));
    }
  }
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_openContainer" "', argument " "5"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg5 = static_cast< enum XmlContainer::ContainerType >(val5);
  ecode6 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "XmlManager_openContainer" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_6(arg1,*arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_7(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlContainerConfig arg4 ;
  enum XmlContainer::ContainerType arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_openContainer self txn name flags type ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlContainerConfig,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "XmlContainerConfig""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "XmlContainerConfig""'");
    } else {
      arg4 = *(reinterpret_cast< XmlContainerConfig * >(argp4));
    }
  }
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_openContainer" "', argument " "5"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg5 = static_cast< enum XmlContainer::ContainerType >(val5);
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_6(arg1,*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_8(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  u_int32_t arg3 ;
  enum XmlContainer::ContainerType arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_createContainer self name flags type mode ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg4 = static_cast< enum XmlContainer::ContainerType >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_createContainer" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_8(arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_9(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  u_int32_t arg3 ;
  enum XmlContainer::ContainerType arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_createContainer self name flags type ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg4 = static_cast< enum XmlContainer::ContainerType >(val4);
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_8(arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_10(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  u_int32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_createContainer self name flags ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_8(arg1,(std::string const &)*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_11(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  u_int32_t arg4 ;
  enum XmlContainer::ContainerType arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlManager_createContainer self txn name flags type mode ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_createContainer" "', argument " "5"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg5 = static_cast< enum XmlContainer::ContainerType >(val5);
  ecode6 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "XmlManager_createContainer" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_11(arg1,*arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_12(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  u_int32_t arg4 ;
  enum XmlContainer::ContainerType arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_createContainer self txn name flags type ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_createContainer" "', argument " "5"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg5 = static_cast< enum XmlContainer::ContainerType >(val5);
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_11(arg1,*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer__SWIG_13(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_createContainer self txn name flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_createContainer" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      result = (XmlContainer *)XmlManager_createContainer__SWIG_11(arg1,*arg2,(std::string const &)*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlManager_createContainer__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_createContainer__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_createContainer__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlManager_createContainer__SWIG_10(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_createContainer__SWIG_3(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_createContainer__SWIG_13(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_createContainer__SWIG_5(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_createContainer__SWIG_9(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_createContainer__SWIG_7(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_createContainer__SWIG_12(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_createContainer__SWIG_4(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_createContainer__SWIG_8(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_XmlManager_createContainer__SWIG_6(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_XmlManager_createContainer__SWIG_11(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_createContainer'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_8(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  u_int32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_openContainer self name flags ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_8(arg1,(std::string const &)*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_9(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_openContainer self txn name flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_9(arg1,*arg2,(std::string const &)*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_10(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  u_int32_t arg3 ;
  enum XmlContainer::ContainerType arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_openContainer self name flags type mode ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg4 = static_cast< enum XmlContainer::ContainerType >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_openContainer" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_10(arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_11(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  u_int32_t arg3 ;
  enum XmlContainer::ContainerType arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_openContainer self name flags type ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg4 = static_cast< enum XmlContainer::ContainerType >(val4);
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_10(arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_12(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  u_int32_t arg4 ;
  enum XmlContainer::ContainerType arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlManager_openContainer self txn name flags type mode ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_openContainer" "', argument " "5"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg5 = static_cast< enum XmlContainer::ContainerType >(val5);
  ecode6 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "XmlManager_openContainer" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_12(arg1,*arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer__SWIG_13(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  u_int32_t arg4 ;
  enum XmlContainer::ContainerType arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_openContainer self txn name flags type ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_openContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_openContainer" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_openContainer" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_openContainer" "', argument " "5"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg5 = static_cast< enum XmlContainer::ContainerType >(val5);
  {
    try {
      result = (XmlContainer *)XmlManager_openContainer__SWIG_12(arg1,*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_openContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlManager_openContainer__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_openContainer__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_openContainer__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlManager_openContainer__SWIG_8(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_openContainer__SWIG_3(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_openContainer__SWIG_9(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_openContainer__SWIG_5(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_openContainer__SWIG_11(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_openContainer__SWIG_7(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_openContainer__SWIG_13(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_openContainer__SWIG_4(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_openContainer__SWIG_10(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_XmlManager_openContainer__SWIG_6(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_XmlManager_openContainer__SWIG_12(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_openContainer'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_dumpContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_dumpContainer self name filename ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_dumpContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_dumpContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_dumpContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_dumpContainer" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      XmlManager_dumpContainer(arg1,(std::string const &)*arg2,(char const *)arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_loadContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_loadContainer self name filename uc ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_loadContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_loadContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_loadContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_loadContainer" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_loadContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_loadContainer" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      XmlManager_loadContainer(arg1,(std::string const &)*arg2,(char const *)arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_verifyContainer__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_verifyContainer self name filename flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_verifyContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_verifyContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_verifyContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_verifyContainer" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_verifyContainer" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      XmlManager_verifyContainer__SWIG_0(arg1,(std::string const &)*arg2,(char const *)arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_verifyContainer__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_verifyContainer self name filename ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_verifyContainer" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_verifyContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_verifyContainer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_verifyContainer" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      XmlManager_verifyContainer__SWIG_0(arg1,(std::string const &)*arg2,(char const *)arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_verifyContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_verifyContainer__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_verifyContainer__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_verifyContainer'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createDocument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlDocument *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_createDocument self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createDocument" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = (XmlDocument *)XmlManager_createDocument(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlDocument,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createQueryContext__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  enum XmlQueryContext::ReturnType arg2 ;
  enum XmlQueryContext::EvaluationType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  XmlQueryContext *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_createQueryContext self rt et ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createQueryContext" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlManager_createQueryContext" "', argument " "2"" of type '" "enum XmlQueryContext::ReturnType""'");
  } 
  arg2 = static_cast< enum XmlQueryContext::ReturnType >(val2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlManager_createQueryContext" "', argument " "3"" of type '" "enum XmlQueryContext::EvaluationType""'");
  } 
  arg3 = static_cast< enum XmlQueryContext::EvaluationType >(val3);
  {
    try {
      result = (XmlQueryContext *)XmlManager_createQueryContext__SWIG_0(arg1,arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlQueryContext,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createQueryContext__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlQueryContext *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_createQueryContext self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createQueryContext" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = (XmlQueryContext *)XmlManager_createQueryContext__SWIG_1(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlQueryContext,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createQueryContext__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  enum XmlQueryContext::ReturnType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  XmlQueryContext *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_createQueryContext self rt ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createQueryContext" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlManager_createQueryContext" "', argument " "2"" of type '" "enum XmlQueryContext::ReturnType""'");
  } 
  arg2 = static_cast< enum XmlQueryContext::ReturnType >(val2);
  {
    try {
      result = (XmlQueryContext *)XmlManager_createQueryContext__SWIG_2(arg1,arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlQueryContext,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createQueryContext(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_XmlManager_createQueryContext__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_XmlManager_createQueryContext__SWIG_2(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlManager_createQueryContext__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_createQueryContext'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createUpdateContext(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlUpdateContext *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_createUpdateContext self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createUpdateContext" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = (XmlUpdateContext *)XmlManager_createUpdateContext(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlUpdateContext,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_prepare__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  XmlQueryExpression *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_prepare self query context ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_prepare" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_prepare" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_prepare" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_prepare" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_prepare" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    try {
      result = (XmlQueryExpression *)XmlManager_prepare__SWIG_0(arg1,(std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlQueryExpression,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_prepare__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlQueryContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  XmlQueryExpression *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_prepare self txn query context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_prepare" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_prepare" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_prepare" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_prepare" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_prepare" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_prepare" "', argument " "4"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_prepare" "', argument " "4"" of type '" "XmlQueryContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlQueryContext * >(argp4);
  {
    try {
      result = (XmlQueryExpression *)XmlManager_prepare__SWIG_1(arg1,*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlQueryExpression,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_prepare(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_prepare__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_prepare__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_prepare'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_query__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_query self query context flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_query" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_query" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_query" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_query" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_query" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlManager_query" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      result = (XmlResults *)XmlManager_query__SWIG_0(arg1,(std::string const &)*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_query__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlQueryContext *arg4 = 0 ;
  u_int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_query self txn query context flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_query" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_query" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_query" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_query" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_query" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_query" "', argument " "4"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_query" "', argument " "4"" of type '" "XmlQueryContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlQueryContext * >(argp4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlManager_query" "', argument " "5"" of type '" "u_int32_t""'");
  } 
  arg5 = static_cast< u_int32_t >(val5);
  {
    try {
      result = (XmlResults *)XmlManager_query__SWIG_1(arg1,*arg2,(std::string const &)*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_query__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  std::string *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlManager_query self query context ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_query" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_query" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_query" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_query" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_query" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    try {
      result = (XmlResults *)XmlManager_query__SWIG_2(arg1,(std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_query__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlQueryContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlManager_query self txn query context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_query" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_query" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_query" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_query" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_query" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_query" "', argument " "4"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_query" "', argument " "4"" of type '" "XmlQueryContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlQueryContext * >(argp4);
  {
    try {
      result = (XmlResults *)XmlManager_query__SWIG_3(arg1,*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_query(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlManager_query__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlManager_query__SWIG_3(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlManager_query__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlManager_query__SWIG_1(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_query'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createResults(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_createResults self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createResults" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = (XmlResults *)XmlManager_createResults(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createTransaction__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  DB_TXN *arg2 = (DB_TXN *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlTransaction *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_createTransaction self toAdopt ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createTransaction" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    char *arg = Tcl_GetStringFromObj(objv[2], NULL);
    DB_TXN *txnp = NAME_TO_TXN(arg);
    arg2 = txnp;
  }
  {
    try {
      result = (XmlTransaction *)XmlManager_createTransaction__SWIG_0(arg1,arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlTransaction,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createTransaction__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  u_int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  XmlTransaction *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlManager_createTransaction self flags ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createTransaction" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlManager_createTransaction" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      result = (XmlTransaction *)XmlManager_createTransaction__SWIG_1(arg1,arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlTransaction,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createTransaction__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlTransaction *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlManager_createTransaction self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createTransaction" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  {
    try {
      result = (XmlTransaction *)XmlManager_createTransaction__SWIG_2(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlTransaction,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createTransaction(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_XmlManager_createTransaction__SWIG_2(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_XmlManager_createTransaction__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        /* This would be a typecheck for a DB_TXN *; just succeed */
        _v = 1; 
      }
      if (_v) {
        return _wrap_XmlManager_createTransaction__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_createTransaction'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createIndexLookup__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlContainer *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  XmlValue *arg6 = 0 ;
  enum XmlIndexLookup::Operation arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  void *argp6 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  XmlIndexLookup *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:XmlManager_createIndexLookup self cont uri name index value op ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createIndexLookup" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlContainer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createIndexLookup" "', argument " "2"" of type '" "XmlContainer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "2"" of type '" "XmlContainer &""'"); 
  }
  arg2 = reinterpret_cast< XmlContainer * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createIndexLookup" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_createIndexLookup" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlManager_createIndexLookup" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlManager_createIndexLookup" "', argument " "6"" of type '" "XmlValue const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "6"" of type '" "XmlValue const &""'"); 
  }
  arg6 = reinterpret_cast< XmlValue * >(argp6);
  ecode7 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[7], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "XmlManager_createIndexLookup" "', argument " "7"" of type '" "enum XmlIndexLookup::Operation""'");
  } 
  arg7 = static_cast< enum XmlIndexLookup::Operation >(val7);
  {
    try {
      result = (XmlIndexLookup *)XmlManager_createIndexLookup__SWIG_0(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(XmlValue const &)*arg6,arg7);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexLookup,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createIndexLookup__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlContainer *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  XmlValue *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  void *argp6 ;
  int res6 = 0 ;
  XmlIndexLookup *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlManager_createIndexLookup self cont uri name index value ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createIndexLookup" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlContainer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createIndexLookup" "', argument " "2"" of type '" "XmlContainer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "2"" of type '" "XmlContainer &""'"); 
  }
  arg2 = reinterpret_cast< XmlContainer * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createIndexLookup" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_createIndexLookup" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlManager_createIndexLookup" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlManager_createIndexLookup" "', argument " "6"" of type '" "XmlValue const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "6"" of type '" "XmlValue const &""'"); 
  }
  arg6 = reinterpret_cast< XmlValue * >(argp6);
  {
    try {
      result = (XmlIndexLookup *)XmlManager_createIndexLookup__SWIG_0(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(XmlValue const &)*arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexLookup,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createIndexLookup__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlManager *arg1 = (XmlManager *) 0 ;
  XmlContainer *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  XmlIndexLookup *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlManager_createIndexLookup self cont uri name index ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlManager_createIndexLookup" "', argument " "1"" of type '" "XmlManager *""'"); 
  }
  arg1 = reinterpret_cast< XmlManager * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlContainer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlManager_createIndexLookup" "', argument " "2"" of type '" "XmlContainer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "2"" of type '" "XmlContainer &""'"); 
  }
  arg2 = reinterpret_cast< XmlContainer * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlManager_createIndexLookup" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlManager_createIndexLookup" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlManager_createIndexLookup" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlManager_createIndexLookup" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    try {
      result = (XmlIndexLookup *)XmlManager_createIndexLookup__SWIG_0(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexLookup,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlManager_createIndexLookup(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlContainer, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlManager_createIndexLookup__SWIG_2(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlContainer, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_XmlValue, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_XmlManager_createIndexLookup__SWIG_1(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlContainer, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_XmlValue, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_XmlManager_createIndexLookup__SWIG_0(clientData, interp, objc, argv - 1);
                }
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlManager_createIndexLookup'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlManager(void *obj) {
XmlManager *arg1 = (XmlManager *) obj;
delete arg1;
}
static swig_method swig_XmlManager_methods[] = {
    {"getFlags", _wrap_XmlManager_getFlags}, 
    {"getDefaultContainerConfig", _wrap_XmlManager_getDefaultContainerConfig}, 
    {"setDefaultContainerConfig", _wrap_XmlManager_setDefaultContainerConfig}, 
    {"setDefaultContainerType", _wrap_XmlManager_setDefaultContainerType}, 
    {"getDefaultContainerType", _wrap_XmlManager_getDefaultContainerType}, 
    {"setDefaultPageSize", _wrap_XmlManager_setDefaultPageSize}, 
    {"getDefaultPageSize", _wrap_XmlManager_getDefaultPageSize}, 
    {"setDefaultSequenceIncrement", _wrap_XmlManager_setDefaultSequenceIncrement}, 
    {"getDefaultSequenceIncrement", _wrap_XmlManager_getDefaultSequenceIncrement}, 
    {"getHome", _wrap_XmlManager_getHome}, 
    {"getImplicitTimezone", _wrap_XmlManager_getImplicitTimezone}, 
    {"setImplicitTimezone", _wrap_XmlManager_setImplicitTimezone}, 
    {"existsContainer", _wrap_XmlManager_existsContainer}, 
    {"removeContainer", _wrap_XmlManager_removeContainer}, 
    {"renameContainer", _wrap_XmlManager_renameContainer}, 
    {"upgradeContainer", _wrap_XmlManager_upgradeContainer}, 
    {"setDefaultContainerFlags", _wrap_XmlManager_setDefaultContainerFlags}, 
    {"getDefaultContainerFlags", _wrap_XmlManager_getDefaultContainerFlags}, 
    {"compactContainer", _wrap_XmlManager_compactContainer}, 
    {"truncateContainer", _wrap_XmlManager_truncateContainer}, 
    {"reindexContainer", _wrap_XmlManager_reindexContainer}, 
    {"createStdInInputStream", _wrap_XmlManager_createStdInInputStream}, 
    {"createLocalFileInputStream", _wrap_XmlManager_createLocalFileInputStream}, 
    {"createMemBufInputStream", _wrap_XmlManager_createMemBufInputStream}, 
    {"createURLInputStream", _wrap_XmlManager_createURLInputStream}, 
    {"createContainer", _wrap_XmlManager_createContainer}, 
    {"openContainer", _wrap_XmlManager_openContainer}, 
    {"dumpContainer", _wrap_XmlManager_dumpContainer}, 
    {"loadContainer", _wrap_XmlManager_loadContainer}, 
    {"verifyContainer", _wrap_XmlManager_verifyContainer}, 
    {"createDocument", _wrap_XmlManager_createDocument}, 
    {"createQueryContext", _wrap_XmlManager_createQueryContext}, 
    {"createUpdateContext", _wrap_XmlManager_createUpdateContext}, 
    {"prepare", _wrap_XmlManager_prepare}, 
    {"query", _wrap_XmlManager_query}, 
    {"createResults", _wrap_XmlManager_createResults}, 
    {"createTransaction", _wrap_XmlManager_createTransaction}, 
    {"createIndexLookup", _wrap_XmlManager_createIndexLookup}, 
    {0,0}
};
static swig_attribute swig_XmlManager_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlManager_bases[] = {0};
static const char * swig_XmlManager_base_names[] = {0};
static swig_class _wrap_class_XmlManager = { "XmlManager", &SWIGTYPE_p_XmlManager,_wrap_new_XmlManager, swig_delete_XmlManager, swig_XmlManager_methods, swig_XmlManager_attributes, swig_XmlManager_bases,swig_XmlManager_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlIndexLookup__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlIndexLookup ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlIndexLookup *)new XmlIndexLookup();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexLookup,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlIndexLookup__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlIndexLookup *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlIndexLookup o ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlIndexLookup,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlIndexLookup" "', argument " "1"" of type '" "XmlIndexLookup const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlIndexLookup" "', argument " "1"" of type '" "XmlIndexLookup const &""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (XmlIndexLookup *)new XmlIndexLookup((XmlIndexLookup const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexLookup,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlIndexLookup(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlIndexLookup__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexLookup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlIndexLookup__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlIndexLookup'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlIndexLookup(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlIndexLookup self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlIndexLookup" "', argument " "1"" of type '" "XmlIndexLookup *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_isNull(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_isNull self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_isNull" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (bool)((XmlIndexLookup const *)arg1)->isNull();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_getIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_getIndex self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_getIndex" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (std::string *) &((XmlIndexLookup const *)arg1)->getIndex();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_setIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlIndexLookup_setIndex self index ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_setIndex" "', argument " "1"" of type '" "XmlIndexLookup *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexLookup_setIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_setIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setIndex((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_getNodeURI(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_getNodeURI self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_getNodeURI" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (std::string *) &((XmlIndexLookup const *)arg1)->getNodeURI();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_getNodeName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_getNodeName self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_getNodeName" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (std::string *) &((XmlIndexLookup const *)arg1)->getNodeName();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_setNode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlIndexLookup_setNode self uri name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_setNode" "', argument " "1"" of type '" "XmlIndexLookup *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexLookup_setNode" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_setNode" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexLookup_setNode" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_setNode" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      (arg1)->setNode((std::string const &)*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_getParentURI(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_getParentURI self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_getParentURI" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (std::string *) &((XmlIndexLookup const *)arg1)->getParentURI();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_getParentName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_getParentName self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_getParentName" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (std::string *) &((XmlIndexLookup const *)arg1)->getParentName();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_setParent(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlIndexLookup_setParent self uri name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_setParent" "', argument " "1"" of type '" "XmlIndexLookup *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexLookup_setParent" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_setParent" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexLookup_setParent" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_setParent" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      (arg1)->setParent((std::string const &)*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_getLowBoundValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_getLowBoundValue self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_getLowBoundValue" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (XmlValue *) &((XmlIndexLookup const *)arg1)->getLowBoundValue();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_getLowBoundOperation(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlIndexLookup::Operation result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_getLowBoundOperation self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_getLowBoundOperation" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (enum XmlIndexLookup::Operation)((XmlIndexLookup const *)arg1)->getLowBoundOperation();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_setLowBound(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  XmlValue *arg2 = 0 ;
  enum XmlIndexLookup::Operation arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlIndexLookup_setLowBound self value op ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_setLowBound" "', argument " "1"" of type '" "XmlIndexLookup *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexLookup_setLowBound" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_setLowBound" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  arg2 = reinterpret_cast< XmlValue * >(argp2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlIndexLookup_setLowBound" "', argument " "3"" of type '" "enum XmlIndexLookup::Operation""'");
  } 
  arg3 = static_cast< enum XmlIndexLookup::Operation >(val3);
  {
    try {
      (arg1)->setLowBound((XmlValue const &)*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_getHighBoundValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_getHighBoundValue self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_getHighBoundValue" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (XmlValue *) &((XmlIndexLookup const *)arg1)->getHighBoundValue();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_getHighBoundOperation(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlIndexLookup::Operation result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_getHighBoundOperation self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_getHighBoundOperation" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (enum XmlIndexLookup::Operation)((XmlIndexLookup const *)arg1)->getHighBoundOperation();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_setHighBound(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  XmlValue *arg2 = 0 ;
  enum XmlIndexLookup::Operation arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlIndexLookup_setHighBound self value op ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_setHighBound" "', argument " "1"" of type '" "XmlIndexLookup *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexLookup_setHighBound" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_setHighBound" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  arg2 = reinterpret_cast< XmlValue * >(argp2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlIndexLookup_setHighBound" "', argument " "3"" of type '" "enum XmlIndexLookup::Operation""'");
  } 
  arg3 = static_cast< enum XmlIndexLookup::Operation >(val3);
  {
    try {
      (arg1)->setHighBound((XmlValue const &)*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_getContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexLookup_getContainer self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_getContainer" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  {
    try {
      result = (XmlContainer *) &((XmlIndexLookup const *)arg1)->getContainer();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_setContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  XmlContainer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlIndexLookup_setContainer self container ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_setContainer" "', argument " "1"" of type '" "XmlIndexLookup *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlContainer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexLookup_setContainer" "', argument " "2"" of type '" "XmlContainer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_setContainer" "', argument " "2"" of type '" "XmlContainer &""'"); 
  }
  arg2 = reinterpret_cast< XmlContainer * >(argp2);
  {
    try {
      (arg1)->setContainer(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_execute__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  XmlQueryContext *arg2 = 0 ;
  u_int32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlIndexLookup_execute self context flags ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_execute" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexLookup_execute" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_execute" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  arg2 = reinterpret_cast< XmlQueryContext * >(argp2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlIndexLookup_execute" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  {
    try {
      result = (XmlResults *)XmlIndexLookup_execute__SWIG_0((XmlIndexLookup const *)arg1,*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_execute__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  XmlQueryContext *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlIndexLookup_execute self context ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_execute" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexLookup_execute" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_execute" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  arg2 = reinterpret_cast< XmlQueryContext * >(argp2);
  {
    try {
      result = (XmlResults *)XmlIndexLookup_execute__SWIG_0((XmlIndexLookup const *)arg1,*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_execute__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlIndexLookup_execute self txn context flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_execute" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexLookup_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexLookup_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlIndexLookup_execute" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      result = (XmlResults *)XmlIndexLookup_execute__SWIG_2((XmlIndexLookup const *)arg1,*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_execute__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexLookup *arg1 = (XmlIndexLookup *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlIndexLookup_execute self txn context ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexLookup, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexLookup_execute" "', argument " "1"" of type '" "XmlIndexLookup const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexLookup * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexLookup_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexLookup_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexLookup_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    try {
      result = (XmlResults *)XmlIndexLookup_execute__SWIG_2((XmlIndexLookup const *)arg1,*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexLookup_execute(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexLookup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlIndexLookup_execute__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexLookup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlIndexLookup_execute__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexLookup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlIndexLookup_execute__SWIG_3(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexLookup, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlIndexLookup_execute__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlIndexLookup_execute'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlIndexLookup(void *obj) {
XmlIndexLookup *arg1 = (XmlIndexLookup *) obj;
delete arg1;
}
static swig_method swig_XmlIndexLookup_methods[] = {
    {"isNull", _wrap_XmlIndexLookup_isNull}, 
    {"getIndex", _wrap_XmlIndexLookup_getIndex}, 
    {"setIndex", _wrap_XmlIndexLookup_setIndex}, 
    {"getNodeURI", _wrap_XmlIndexLookup_getNodeURI}, 
    {"getNodeName", _wrap_XmlIndexLookup_getNodeName}, 
    {"setNode", _wrap_XmlIndexLookup_setNode}, 
    {"getParentURI", _wrap_XmlIndexLookup_getParentURI}, 
    {"getParentName", _wrap_XmlIndexLookup_getParentName}, 
    {"setParent", _wrap_XmlIndexLookup_setParent}, 
    {"getLowBoundValue", _wrap_XmlIndexLookup_getLowBoundValue}, 
    {"getLowBoundOperation", _wrap_XmlIndexLookup_getLowBoundOperation}, 
    {"setLowBound", _wrap_XmlIndexLookup_setLowBound}, 
    {"getHighBoundValue", _wrap_XmlIndexLookup_getHighBoundValue}, 
    {"getHighBoundOperation", _wrap_XmlIndexLookup_getHighBoundOperation}, 
    {"setHighBound", _wrap_XmlIndexLookup_setHighBound}, 
    {"getContainer", _wrap_XmlIndexLookup_getContainer}, 
    {"setContainer", _wrap_XmlIndexLookup_setContainer}, 
    {"execute", _wrap_XmlIndexLookup_execute}, 
    {0,0}
};
static swig_attribute swig_XmlIndexLookup_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlIndexLookup_bases[] = {0};
static const char * swig_XmlIndexLookup_base_names[] = {0};
static swig_class _wrap_class_XmlIndexLookup = { "XmlIndexLookup", &SWIGTYPE_p_XmlIndexLookup,_wrap_new_XmlIndexLookup, swig_delete_XmlIndexLookup, swig_XmlIndexLookup_methods, swig_XmlIndexLookup_attributes, swig_XmlIndexLookup_bases,swig_XmlIndexLookup_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlContainer__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlContainer ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlContainer *)new XmlContainer();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlContainer__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlContainer *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlContainer o ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlContainer,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlContainer" "', argument " "1"" of type '" "XmlContainer const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlContainer" "', argument " "1"" of type '" "XmlContainer const &""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = (XmlContainer *)new XmlContainer((XmlContainer const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainer,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlContainer__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlContainer__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlContainer'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlContainer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlContainer self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlContainer" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_sync(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_sync self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_sync" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      (arg1)->sync();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_close(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_close self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_close" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      (arg1)->close();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getFlags(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  u_int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_getFlags self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getFlags" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = ((XmlContainer const *)arg1)->getFlags();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_addAlias(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainer_addAlias self alias ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_addAlias" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_addAlias" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addAlias" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (bool)(arg1)->addAlias((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_removeAlias(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainer_removeAlias self alias ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_removeAlias" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_removeAlias" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_removeAlias" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (bool)(arg1)->removeAlias((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getManager(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlManager *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_getManager self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getManager" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = (XmlManager *) &(arg1)->getManager();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlManager,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_getName self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getName" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = (std::string *) &((XmlContainer const *)arg1)->getName();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getContainerType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlContainer::ContainerType result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_getContainerType self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getContainerType" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = (enum XmlContainer::ContainerType)((XmlContainer const *)arg1)->getContainerType();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getIndexNodes(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_getIndexNodes self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getIndexNodes" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = (bool)((XmlContainer const *)arg1)->getIndexNodes();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getPageSize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  u_int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_getPageSize self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getPageSize" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = ((XmlContainer const *)arg1)->getPageSize();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getAutoIndexing__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_getAutoIndexing self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getAutoIndexing" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = (bool)((XmlContainer const *)arg1)->getAutoIndexing();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getAutoIndexing__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainer_getAutoIndexing self txn ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getAutoIndexing" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getAutoIndexing" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getAutoIndexing" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    try {
      result = (bool)((XmlContainer const *)arg1)->getAutoIndexing(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getAutoIndexing(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_XmlContainer_getAutoIndexing__SWIG_0(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlContainer_getAutoIndexing__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_getAutoIndexing'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getContainerConfig(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlContainerConfig result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_getContainerConfig self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getContainerConfig" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = ((XmlContainer const *)arg1)->getContainerConfig();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new XmlContainerConfig(static_cast< const XmlContainerConfig& >(result))), SWIGTYPE_p_XmlContainerConfig, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_setAutoIndexing__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  bool arg2 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_setAutoIndexing self value uc ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_setAutoIndexing" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainer_setAutoIndexing" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_setAutoIndexing" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_setAutoIndexing" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      (arg1)->setAutoIndexing(arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_setIndexSpecification__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlIndexSpecification *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_setIndexSpecification self index uc ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_setIndexSpecification" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlIndexSpecification,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_setIndexSpecification" "', argument " "2"" of type '" "XmlIndexSpecification const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_setIndexSpecification" "', argument " "2"" of type '" "XmlIndexSpecification const &""'"); 
  }
  arg2 = reinterpret_cast< XmlIndexSpecification * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_setIndexSpecification" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_setIndexSpecification" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      (arg1)->setIndexSpecification((XmlIndexSpecification const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_addIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  XmlUpdateContext *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_addIndex self uri name index uc ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_addIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_addIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_addIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_addIndex" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  arg5 = reinterpret_cast< XmlUpdateContext * >(argp5);
  {
    try {
      (arg1)->addIndex((std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,*arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_addIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  enum XmlIndexSpecification::Type arg4 ;
  enum XmlValue::Type arg5 ;
  XmlUpdateContext *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_addIndex self uri name indexType syntaxType uc ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_addIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_addIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlContainer_addIndex" "', argument " "4"" of type '" "enum XmlIndexSpecification::Type""'");
  } 
  arg4 = static_cast< enum XmlIndexSpecification::Type >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlContainer_addIndex" "', argument " "5"" of type '" "enum XmlValue::Type""'");
  } 
  arg5 = static_cast< enum XmlValue::Type >(val5);
  res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_addIndex" "', argument " "6"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "6"" of type '" "XmlUpdateContext &""'"); 
  }
  arg6 = reinterpret_cast< XmlUpdateContext * >(argp6);
  {
    try {
      (arg1)->addIndex((std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,*arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  XmlUpdateContext *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_deleteIndex self uri name index uc ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_deleteIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_deleteIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_deleteIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_deleteIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_deleteIndex" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteIndex" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  arg5 = reinterpret_cast< XmlUpdateContext * >(argp5);
  {
    try {
      (arg1)->deleteIndex((std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,*arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_replaceIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  XmlUpdateContext *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_replaceIndex self uri name index uc ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_replaceIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_replaceIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_replaceIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_replaceIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_replaceIndex" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceIndex" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  arg5 = reinterpret_cast< XmlUpdateContext * >(argp5);
  {
    try {
      (arg1)->replaceIndex((std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,*arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_addDefaultIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_addDefaultIndex self index uc ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_addDefaultIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_addDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_addDefaultIndex" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addDefaultIndex" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      (arg1)->addDefaultIndex((std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteDefaultIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_deleteDefaultIndex self index uc ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      (arg1)->deleteDefaultIndex((std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_replaceDefaultIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_replaceDefaultIndex self index uc ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      (arg1)->replaceDefaultIndex((std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_setAutoIndexing__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  bool arg3 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_setAutoIndexing self txn value uc ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_setAutoIndexing" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_setAutoIndexing" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_setAutoIndexing" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  ecode3 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlContainer_setAutoIndexing" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_setAutoIndexing" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_setAutoIndexing" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      (arg1)->setAutoIndexing(*arg2,arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_setAutoIndexing(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_setAutoIndexing__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_setAutoIndexing__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_setAutoIndexing'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_setIndexSpecification__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlIndexSpecification *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_setIndexSpecification self txn index uc ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_setIndexSpecification" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_setIndexSpecification" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_setIndexSpecification" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlIndexSpecification,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_setIndexSpecification" "', argument " "3"" of type '" "XmlIndexSpecification const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_setIndexSpecification" "', argument " "3"" of type '" "XmlIndexSpecification const &""'"); 
  }
  arg3 = reinterpret_cast< XmlIndexSpecification * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_setIndexSpecification" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_setIndexSpecification" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      (arg1)->setIndexSpecification(*arg2,(XmlIndexSpecification const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_setIndexSpecification(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_setIndexSpecification__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_setIndexSpecification__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_setIndexSpecification'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_addIndex__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  XmlUpdateContext *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_addIndex self txn uri name index uc ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_addIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_addIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_addIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_addIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_addIndex" "', argument " "6"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "6"" of type '" "XmlUpdateContext &""'"); 
  }
  arg6 = reinterpret_cast< XmlUpdateContext * >(argp6);
  {
    try {
      (arg1)->addIndex(*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,*arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_addIndex__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  enum XmlIndexSpecification::Type arg5 ;
  enum XmlValue::Type arg6 ;
  XmlUpdateContext *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:XmlContainer_addIndex self txn uri name indexType syntaxType uc ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_addIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_addIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_addIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlContainer_addIndex" "', argument " "5"" of type '" "enum XmlIndexSpecification::Type""'");
  } 
  arg5 = static_cast< enum XmlIndexSpecification::Type >(val5);
  ecode6 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "XmlContainer_addIndex" "', argument " "6"" of type '" "enum XmlValue::Type""'");
  } 
  arg6 = static_cast< enum XmlValue::Type >(val6);
  res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_addIndex" "', argument " "7"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addIndex" "', argument " "7"" of type '" "XmlUpdateContext &""'"); 
  }
  arg7 = reinterpret_cast< XmlUpdateContext * >(argp7);
  {
    try {
      (arg1)->addIndex(*arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5,arg6,*arg7);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_addIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlContainer_addIndex__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_XmlContainer_addIndex__SWIG_2(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_XmlContainer_addIndex__SWIG_1(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_XmlContainer_addIndex__SWIG_3(clientData, interp, objc, argv - 1);
                }
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_addIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  XmlUpdateContext *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_deleteIndex self txn uri name index uc ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_deleteIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_deleteIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_deleteIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_deleteIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_deleteIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_deleteIndex" "', argument " "6"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteIndex" "', argument " "6"" of type '" "XmlUpdateContext &""'"); 
  }
  arg6 = reinterpret_cast< XmlUpdateContext * >(argp6);
  {
    try {
      (arg1)->deleteIndex(*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,*arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlContainer_deleteIndex__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_XmlContainer_deleteIndex__SWIG_1(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_deleteIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_replaceIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  XmlUpdateContext *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_replaceIndex self txn uri name index uc ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_replaceIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_replaceIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_replaceIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_replaceIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_replaceIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_replaceIndex" "', argument " "6"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceIndex" "', argument " "6"" of type '" "XmlUpdateContext &""'"); 
  }
  arg6 = reinterpret_cast< XmlUpdateContext * >(argp6);
  {
    try {
      (arg1)->replaceIndex(*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,*arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_replaceIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlContainer_replaceIndex__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_XmlContainer_replaceIndex__SWIG_1(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_replaceIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_addDefaultIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_addDefaultIndex self txn index uc ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_addDefaultIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_addDefaultIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addDefaultIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_addDefaultIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addDefaultIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_addDefaultIndex" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_addDefaultIndex" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      (arg1)->addDefaultIndex(*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_addDefaultIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_addDefaultIndex__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_addDefaultIndex__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_addDefaultIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteDefaultIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_deleteDefaultIndex self txn index uc ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDefaultIndex" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      (arg1)->deleteDefaultIndex(*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteDefaultIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_deleteDefaultIndex__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_deleteDefaultIndex__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_deleteDefaultIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_replaceDefaultIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_replaceDefaultIndex self txn index uc ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_replaceDefaultIndex" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      (arg1)->replaceDefaultIndex(*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_replaceDefaultIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_replaceDefaultIndex__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_replaceDefaultIndex__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_replaceDefaultIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlDocument *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_putDocument self document context flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  arg2 = reinterpret_cast< XmlDocument * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      (arg1)->putDocument(*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlDocument *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_putDocument self document context ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  arg2 = reinterpret_cast< XmlDocument * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      (arg1)->putDocument(*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  u_int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_putDocument self name contents context flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "u_int32_t""'");
  } 
  arg5 = static_cast< u_int32_t >(val5);
  {
    try {
      result = (arg1)->putDocument((std::string const &)*arg2,(std::string const &)*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_putDocument self name contents context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      result = (arg1)->putDocument((std::string const &)*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  XmlEventReader *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  u_int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_putDocument self name reader context flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlEventReader,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlEventReader &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlEventReader &""'"); 
  }
  arg3 = reinterpret_cast< XmlEventReader * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "u_int32_t""'");
  } 
  arg5 = static_cast< u_int32_t >(val5);
  {
    try {
      result = (arg1)->putDocument((std::string const &)*arg2,*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  XmlEventReader *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_putDocument self name reader context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlEventReader,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlEventReader &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlEventReader &""'"); 
  }
  arg3 = reinterpret_cast< XmlEventReader * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      result = (arg1)->putDocument((std::string const &)*arg2,*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocumentAsEventWriter__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlDocument *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  XmlEventWriter *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_putDocumentAsEventWriter self document context flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  arg2 = reinterpret_cast< XmlDocument * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      result = (XmlEventWriter *) &(arg1)->putDocumentAsEventWriter(*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlEventWriter,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocumentAsEventWriter__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlDocument *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  XmlEventWriter *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_putDocumentAsEventWriter self document context ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  arg2 = reinterpret_cast< XmlDocument * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      result = (XmlEventWriter *) &(arg1)->putDocumentAsEventWriter(*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlEventWriter,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteDocument__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlDocument *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_deleteDocument self document context ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_deleteDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_deleteDocument" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDocument" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  arg2 = reinterpret_cast< XmlDocument * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_deleteDocument" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDocument" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      (arg1)->deleteDocument(*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteDocument__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_deleteDocument self name context ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_deleteDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_deleteDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_deleteDocument" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDocument" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      (arg1)->deleteDocument((std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_updateDocument__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlDocument *arg2 = 0 ;
  XmlUpdateContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_updateDocument self document context ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_updateDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_updateDocument" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_updateDocument" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  arg2 = reinterpret_cast< XmlDocument * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_updateDocument" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_updateDocument" "', argument " "3"" of type '" "XmlUpdateContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlUpdateContext * >(argp3);
  {
    try {
      (arg1)->updateDocument(*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_6(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  XmlInputStream *arg3 = (XmlInputStream *) 0 ;
  XmlUpdateContext *arg4 = 0 ;
  u_int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_putDocument self name input context flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_XmlInputStream, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlInputStream *""'"); 
  }
  arg3 = reinterpret_cast< XmlInputStream * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "u_int32_t""'");
  } 
  arg5 = static_cast< u_int32_t >(val5);
  {
    try {
      result = (arg1)->putDocument((std::string const &)*arg2,arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_7(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  XmlInputStream *arg3 = (XmlInputStream *) 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_putDocument self name input context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_XmlInputStream, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlInputStream *""'"); 
  }
  arg3 = reinterpret_cast< XmlInputStream * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      result = (arg1)->putDocument((std::string const &)*arg2,arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_8(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlInputStream *arg4 = (XmlInputStream *) 0 ;
  XmlUpdateContext *arg5 = 0 ;
  u_int32_t arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_putDocument self txn name input context flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_XmlInputStream, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlInputStream *""'"); 
  }
  arg4 = reinterpret_cast< XmlInputStream * >(argp4);
  res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  arg5 = reinterpret_cast< XmlUpdateContext * >(argp5);
  ecode6 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "XmlContainer_putDocument" "', argument " "6"" of type '" "u_int32_t""'");
  } 
  arg6 = static_cast< u_int32_t >(val6);
  {
    try {
      result = (arg1)->putDocument(*arg2,(std::string const &)*arg3,arg4,*arg5,arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_9(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlInputStream *arg4 = (XmlInputStream *) 0 ;
  XmlUpdateContext *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_putDocument self txn name input context ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_XmlInputStream, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlInputStream *""'"); 
  }
  arg4 = reinterpret_cast< XmlInputStream * >(argp4);
  res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  arg5 = reinterpret_cast< XmlUpdateContext * >(argp5);
  {
    try {
      result = (arg1)->putDocument(*arg2,(std::string const &)*arg3,arg4,*arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_10(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlDocument *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  u_int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_putDocument self txn document context flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  arg3 = reinterpret_cast< XmlDocument * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "u_int32_t""'");
  } 
  arg5 = static_cast< u_int32_t >(val5);
  {
    try {
      (arg1)->putDocument(*arg2,*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_11(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlDocument *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_putDocument self txn document context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  arg3 = reinterpret_cast< XmlDocument * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      (arg1)->putDocument(*arg2,*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_12(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  XmlUpdateContext *arg5 = 0 ;
  u_int32_t arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_putDocument self txn name contents context flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  arg5 = reinterpret_cast< XmlUpdateContext * >(argp5);
  ecode6 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "XmlContainer_putDocument" "', argument " "6"" of type '" "u_int32_t""'");
  } 
  arg6 = static_cast< u_int32_t >(val6);
  {
    try {
      result = (arg1)->putDocument(*arg2,(std::string const &)*arg3,(std::string const &)*arg4,*arg5,arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_13(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  XmlUpdateContext *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_putDocument self txn name contents context ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  arg5 = reinterpret_cast< XmlUpdateContext * >(argp5);
  {
    try {
      result = (arg1)->putDocument(*arg2,(std::string const &)*arg3,(std::string const &)*arg4,*arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_14(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlEventReader *arg4 = 0 ;
  XmlUpdateContext *arg5 = 0 ;
  u_int32_t arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_putDocument self txn name reader context flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlEventReader,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlEventReader &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlEventReader &""'"); 
  }
  arg4 = reinterpret_cast< XmlEventReader * >(argp4);
  res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  arg5 = reinterpret_cast< XmlUpdateContext * >(argp5);
  ecode6 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "XmlContainer_putDocument" "', argument " "6"" of type '" "u_int32_t""'");
  } 
  arg6 = static_cast< u_int32_t >(val6);
  {
    try {
      result = (arg1)->putDocument(*arg2,(std::string const &)*arg3,*arg4,*arg5,arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument__SWIG_15(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlEventReader *arg4 = 0 ;
  XmlUpdateContext *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_putDocument self txn name reader context ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlEventReader,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlEventReader &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "4"" of type '" "XmlEventReader &""'"); 
  }
  arg4 = reinterpret_cast< XmlEventReader * >(argp4);
  res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocument" "', argument " "5"" of type '" "XmlUpdateContext &""'"); 
  }
  arg5 = reinterpret_cast< XmlUpdateContext * >(argp5);
  {
    try {
      result = (arg1)->putDocument(*arg2,(std::string const &)*arg3,*arg4,*arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_putDocument__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlContainer_putDocument__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlDocument, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_putDocument__SWIG_11(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlInputStream, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_putDocument__SWIG_7(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlEventReader, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_putDocument__SWIG_5(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_putDocument__SWIG_3(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlDocument, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlContainer_putDocument__SWIG_10(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlInputStream, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlContainer_putDocument__SWIG_9(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlEventReader, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlContainer_putDocument__SWIG_15(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlContainer_putDocument__SWIG_13(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlInputStream, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlContainer_putDocument__SWIG_6(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlEventReader, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlContainer_putDocument__SWIG_4(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlContainer_putDocument__SWIG_2(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlInputStream, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_XmlContainer_putDocument__SWIG_8(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlEventReader, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_XmlContainer_putDocument__SWIG_14(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_XmlContainer_putDocument__SWIG_12(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_putDocument'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocumentAsEventWriter__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlDocument *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  u_int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlEventWriter *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_putDocumentAsEventWriter self txn document context flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  arg3 = reinterpret_cast< XmlDocument * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "5"" of type '" "u_int32_t""'");
  } 
  arg5 = static_cast< u_int32_t >(val5);
  {
    try {
      result = (XmlEventWriter *) &(arg1)->putDocumentAsEventWriter(*arg2,*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlEventWriter,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocumentAsEventWriter__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlDocument *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  XmlEventWriter *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_putDocumentAsEventWriter self txn document context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  arg3 = reinterpret_cast< XmlDocument * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_putDocumentAsEventWriter" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      result = (XmlEventWriter *) &(arg1)->putDocumentAsEventWriter(*arg2,*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlEventWriter,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_putDocumentAsEventWriter(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_putDocumentAsEventWriter__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlContainer_putDocumentAsEventWriter__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlDocument, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_putDocumentAsEventWriter__SWIG_3(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlDocument, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlContainer_putDocumentAsEventWriter__SWIG_2(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_putDocumentAsEventWriter'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteDocument__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlDocument *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_deleteDocument self txn document context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_deleteDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_deleteDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_deleteDocument" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDocument" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  arg3 = reinterpret_cast< XmlDocument * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_deleteDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      (arg1)->deleteDocument(*arg2,*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteDocument__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_deleteDocument self txn name context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_deleteDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_deleteDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_deleteDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_deleteDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_deleteDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      (arg1)->deleteDocument(*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_deleteDocument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_deleteDocument__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_deleteDocument__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlDocument, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_deleteDocument__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_deleteDocument__SWIG_3(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_deleteDocument'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_updateDocument__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlDocument *arg3 = 0 ;
  XmlUpdateContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_updateDocument self txn document context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_updateDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_updateDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_updateDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_updateDocument" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_updateDocument" "', argument " "3"" of type '" "XmlDocument &""'"); 
  }
  arg3 = reinterpret_cast< XmlDocument * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_updateDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_updateDocument" "', argument " "4"" of type '" "XmlUpdateContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlUpdateContext * >(argp4);
  {
    try {
      (arg1)->updateDocument(*arg2,*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_updateDocument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_updateDocument__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlDocument, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_updateDocument__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_updateDocument'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getNumDocuments__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_getNumDocuments self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getNumDocuments" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = (arg1)->getNumDocuments();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getNumDocuments__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainer_getNumDocuments self txn ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getNumDocuments" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getNumDocuments" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getNumDocuments" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    try {
      result = (arg1)->getNumDocuments(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getNumDocuments(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_XmlContainer_getNumDocuments__SWIG_0(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlContainer_getNumDocuments__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_getNumDocuments'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getIndexSpecification__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlIndexSpecification *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainer_getIndexSpecification self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getIndexSpecification" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    try {
      result = (XmlIndexSpecification *)XmlContainer_getIndexSpecification__SWIG_0((XmlContainer const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexSpecification,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getIndexSpecification__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  XmlIndexSpecification *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainer_getIndexSpecification self txn ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getIndexSpecification" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getIndexSpecification" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getIndexSpecification" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    try {
      result = (XmlIndexSpecification *)XmlContainer_getIndexSpecification__SWIG_1((XmlContainer const *)arg1,*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexSpecification,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getIndexSpecification__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  u_int32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  XmlIndexSpecification *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_getIndexSpecification self txn flags ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getIndexSpecification" "', argument " "1"" of type '" "XmlContainer const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getIndexSpecification" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getIndexSpecification" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlContainer_getIndexSpecification" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  {
    try {
      result = (XmlIndexSpecification *)XmlContainer_getIndexSpecification__SWIG_2((XmlContainer const *)arg1,*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexSpecification,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getIndexSpecification(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_XmlContainer_getIndexSpecification__SWIG_0(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlContainer_getIndexSpecification__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlContainer_getIndexSpecification__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_getIndexSpecification'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getDocument__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  XmlDocument *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainer_getDocument self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (XmlDocument *)XmlContainer_getDocument__SWIG_0(arg1,(std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlDocument,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getDocument__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  XmlDocument *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_getDocument self txn name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_getDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      result = (XmlDocument *)XmlContainer_getDocument__SWIG_1(arg1,*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlDocument,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getNode__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainer_getNode self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getNode" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getNode" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getNode" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (XmlValue *)XmlContainer_getNode__SWIG_0(arg1,(std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getNode__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_getNode self txn name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getNode" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getNode" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getNode" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_getNode" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getNode" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      result = (XmlValue *)XmlContainer_getNode__SWIG_1(arg1,*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getNode__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  u_int32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_getNode self name flags ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getNode" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getNode" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getNode" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlContainer_getNode" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  {
    try {
      result = (XmlValue *)XmlContainer_getNode__SWIG_2(arg1,(std::string const &)*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getNode__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_getNode self txn name flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getNode" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getNode" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getNode" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_getNode" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getNode" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlContainer_getNode" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      result = (XmlValue *)XmlContainer_getNode__SWIG_3(arg1,*arg2,(std::string const &)*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getNode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlContainer_getNode__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_getNode__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlContainer_getNode__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlContainer_getNode__SWIG_3(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_getNode'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getDocument__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  u_int32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  XmlDocument *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_getDocument self name flags ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getDocument" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlContainer_getDocument" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  {
    try {
      result = (XmlDocument *)XmlContainer_getDocument__SWIG_2(arg1,(std::string const &)*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlDocument,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getDocument__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  XmlDocument *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_getDocument self txn name flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getDocument" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getDocument" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_getDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getDocument" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlContainer_getDocument" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      result = (XmlDocument *)XmlContainer_getDocument__SWIG_3(arg1,*arg2,(std::string const &)*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlDocument,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getDocument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlContainer_getDocument__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlContainer_getDocument__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlContainer_getDocument__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlContainer_getDocument__SWIG_3(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_getDocument'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getAllDocuments__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  u_int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainer_getAllDocuments self flags ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getAllDocuments" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainer_getAllDocuments" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      result = (XmlResults *)XmlContainer_getAllDocuments__SWIG_0(arg1,arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getAllDocuments__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  u_int32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlContainer_getAllDocuments self txn flags ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_getAllDocuments" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_getAllDocuments" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_getAllDocuments" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlContainer_getAllDocuments" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  {
    try {
      result = (XmlResults *)XmlContainer_getAllDocuments__SWIG_1(arg1,*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_getAllDocuments(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_XmlContainer_getAllDocuments__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlContainer_getAllDocuments__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_getAllDocuments'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlQueryContext *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  XmlValue *arg6 = 0 ;
  u_int32_t arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  void *argp6 ;
  int res6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:XmlContainer_lookupIndex self context uri name index value flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  arg2 = reinterpret_cast< XmlQueryContext * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "XmlValue const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "XmlValue const &""'"); 
  }
  arg6 = reinterpret_cast< XmlValue * >(argp6);
  ecode7 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[7], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "u_int32_t""'");
  } 
  arg7 = static_cast< u_int32_t >(val7);
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_0(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(XmlValue const &)*arg6,arg7);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlQueryContext *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  XmlValue *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  void *argp6 ;
  int res6 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_lookupIndex self context uri name index value ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  arg2 = reinterpret_cast< XmlQueryContext * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "XmlValue const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "XmlValue const &""'"); 
  }
  arg6 = reinterpret_cast< XmlValue * >(argp6);
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_0(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(XmlValue const &)*arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlQueryContext *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_lookupIndex self context uri name index ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  arg2 = reinterpret_cast< XmlQueryContext * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_0(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlQueryContext *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  XmlValue *arg8 = 0 ;
  u_int32_t arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  int res7 = SWIG_OLDOBJ ;
  void *argp8 ;
  int res8 = 0 ;
  int val9 ;
  int ecode9 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooo:XmlContainer_lookupIndex self context uri name parent_uri parent_name index value flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  arg2 = reinterpret_cast< XmlQueryContext * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res7 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[7], &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    arg7 = ptr;
  }
  res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "XmlValue const &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "XmlValue const &""'"); 
  }
  arg8 = reinterpret_cast< XmlValue * >(argp8);
  ecode9 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[9], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "XmlContainer_lookupIndex" "', argument " "9"" of type '" "u_int32_t""'");
  } 
  arg9 = static_cast< u_int32_t >(val9);
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_3(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(XmlValue const &)*arg8,arg9);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlQueryContext *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  XmlValue *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  int res7 = SWIG_OLDOBJ ;
  void *argp8 ;
  int res8 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooooo:XmlContainer_lookupIndex self context uri name parent_uri parent_name index value ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  arg2 = reinterpret_cast< XmlQueryContext * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res7 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[7], &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    arg7 = ptr;
  }
  res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "XmlValue const &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "XmlValue const &""'"); 
  }
  arg8 = reinterpret_cast< XmlValue * >(argp8);
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_3(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(XmlValue const &)*arg8);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlQueryContext *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  int res7 = SWIG_OLDOBJ ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:XmlContainer_lookupIndex self context uri name parent_uri parent_name index ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  arg2 = reinterpret_cast< XmlQueryContext * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res7 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[7], &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    arg7 = ptr;
  }
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_3(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_6(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  XmlValue *arg7 = 0 ;
  u_int32_t arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  void *argp7 ;
  int res7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooooo:XmlContainer_lookupIndex self txn context uri name index value flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "XmlValue const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "XmlValue const &""'"); 
  }
  arg7 = reinterpret_cast< XmlValue * >(argp7);
  ecode8 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[8], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "u_int32_t""'");
  } 
  arg8 = static_cast< u_int32_t >(val8);
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_6(arg1,*arg2,*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(XmlValue const &)*arg7,arg8);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_7(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  XmlValue *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  void *argp7 ;
  int res7 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:XmlContainer_lookupIndex self txn context uri name index value ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "XmlValue const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "XmlValue const &""'"); 
  }
  arg7 = reinterpret_cast< XmlValue * >(argp7);
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_6(arg1,*arg2,*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(XmlValue const &)*arg7);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_8(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_lookupIndex self txn context uri name index ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_6(arg1,*arg2,*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_9(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  XmlValue *arg9 = 0 ;
  u_int32_t arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  int res7 = SWIG_OLDOBJ ;
  int res8 = SWIG_OLDOBJ ;
  void *argp9 ;
  int res9 = 0 ;
  int val10 ;
  int ecode10 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooooooo:XmlContainer_lookupIndex self txn context uri name parent_uri parent_name index value flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res7 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[7], &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    arg7 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res8 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[8], &ptr);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    arg8 = ptr;
  }
  res9 = SWIG_ConvertPtr(objv[9], &argp9, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "XmlContainer_lookupIndex" "', argument " "9"" of type '" "XmlValue const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "9"" of type '" "XmlValue const &""'"); 
  }
  arg9 = reinterpret_cast< XmlValue * >(argp9);
  ecode10 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[10], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "XmlContainer_lookupIndex" "', argument " "10"" of type '" "u_int32_t""'");
  } 
  arg10 = static_cast< u_int32_t >(val10);
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_9(arg1,*arg2,*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(XmlValue const &)*arg9,arg10);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  if (SWIG_IsNewObj(res8)) delete arg8;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  if (SWIG_IsNewObj(res8)) delete arg8;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_10(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  XmlValue *arg9 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  int res7 = SWIG_OLDOBJ ;
  int res8 = SWIG_OLDOBJ ;
  void *argp9 ;
  int res9 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooo:XmlContainer_lookupIndex self txn context uri name parent_uri parent_name index value ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res7 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[7], &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    arg7 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res8 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[8], &ptr);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    arg8 = ptr;
  }
  res9 = SWIG_ConvertPtr(objv[9], &argp9, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "XmlContainer_lookupIndex" "', argument " "9"" of type '" "XmlValue const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "9"" of type '" "XmlValue const &""'"); 
  }
  arg9 = reinterpret_cast< XmlValue * >(argp9);
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_9(arg1,*arg2,*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(XmlValue const &)*arg9);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  if (SWIG_IsNewObj(res8)) delete arg8;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  if (SWIG_IsNewObj(res8)) delete arg8;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex__SWIG_11(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  int res7 = SWIG_OLDOBJ ;
  int res8 = SWIG_OLDOBJ ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooooo:XmlContainer_lookupIndex self txn context uri name parent_uri parent_name index ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupIndex" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res7 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[7], &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    arg7 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res8 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[8], &ptr);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupIndex" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    arg8 = ptr;
  }
  {
    try {
      result = (XmlResults *)XmlContainer_lookupIndex__SWIG_9(arg1,*arg2,*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  if (SWIG_IsNewObj(res8)) delete arg8;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  if (SWIG_IsNewObj(res8)) delete arg8;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlContainer_lookupIndex__SWIG_2(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_XmlValue, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_XmlContainer_lookupIndex__SWIG_1(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_XmlContainer_lookupIndex__SWIG_8(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_XmlValue, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_XmlContainer_lookupIndex__SWIG_0(clientData, interp, objc, argv - 1);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_XmlValue, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_XmlContainer_lookupIndex__SWIG_7(clientData, interp, objc, argv - 1);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[6], (std::string**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_XmlContainer_lookupIndex__SWIG_5(clientData, interp, objc, argv - 1);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[6], (std::string**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_XmlValue, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_XmlContainer_lookupIndex__SWIG_4(clientData, interp, objc, argv - 1);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_XmlValue, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_XmlContainer_lookupIndex__SWIG_6(clientData, interp, objc, argv - 1);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[6], (std::string**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[7], (std::string**)(0));
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_XmlContainer_lookupIndex__SWIG_11(clientData, interp, objc, argv - 1);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[6], (std::string**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[7], (std::string**)(0));
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_XmlValue, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_XmlContainer_lookupIndex__SWIG_10(clientData, interp, objc, argv - 1);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[6], (std::string**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_XmlValue, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    {
                      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_XmlContainer_lookupIndex__SWIG_3(clientData, interp, objc, argv - 1);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[6], (std::string**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[7], (std::string**)(0));
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    void *vptr = 0;
                    int res = SWIG_ConvertPtr(argv[8], &vptr, SWIGTYPE_p_XmlValue, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_XmlContainer_lookupIndex__SWIG_9(clientData, interp, objc, argv - 1);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_lookupIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupStatistics__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  XmlValue *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  void *argp5 ;
  int res5 = 0 ;
  XmlStatistics *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_lookupStatistics self uri name index value ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupStatistics" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "XmlValue const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "XmlValue const &""'"); 
  }
  arg5 = reinterpret_cast< XmlValue * >(argp5);
  {
    try {
      result = (XmlStatistics *)XmlContainer_lookupStatistics__SWIG_0(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(XmlValue const &)*arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlStatistics,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupStatistics__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  XmlStatistics *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlContainer_lookupStatistics self uri name index ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupStatistics" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      result = (XmlStatistics *)XmlContainer_lookupStatistics__SWIG_0(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlStatistics,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupStatistics__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  XmlValue *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  void *argp7 ;
  int res7 = 0 ;
  XmlStatistics *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:XmlContainer_lookupStatistics self uri name parent_uri parent_name index value ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupStatistics" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupStatistics" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupStatistics" "', argument " "7"" of type '" "XmlValue const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "7"" of type '" "XmlValue const &""'"); 
  }
  arg7 = reinterpret_cast< XmlValue * >(argp7);
  {
    try {
      result = (XmlStatistics *)XmlContainer_lookupStatistics__SWIG_2(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(XmlValue const &)*arg7);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlStatistics,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupStatistics__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  XmlStatistics *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_lookupStatistics self uri name parent_uri parent_name index ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupStatistics" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupStatistics" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  {
    try {
      result = (XmlStatistics *)XmlContainer_lookupStatistics__SWIG_2(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlStatistics,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupStatistics__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  XmlValue *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  void *argp6 ;
  int res6 = 0 ;
  XmlStatistics *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlContainer_lookupStatistics self txn uri name index value ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupStatistics" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupStatistics" "', argument " "6"" of type '" "XmlValue const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "6"" of type '" "XmlValue const &""'"); 
  }
  arg6 = reinterpret_cast< XmlValue * >(argp6);
  {
    try {
      result = (XmlStatistics *)XmlContainer_lookupStatistics__SWIG_4(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(XmlValue const &)*arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlStatistics,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupStatistics__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  XmlStatistics *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlContainer_lookupStatistics self txn uri name index ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupStatistics" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    try {
      result = (XmlStatistics *)XmlContainer_lookupStatistics__SWIG_4(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlStatistics,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupStatistics__SWIG_6(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  XmlValue *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  int res7 = SWIG_OLDOBJ ;
  void *argp8 ;
  int res8 = 0 ;
  XmlStatistics *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooooo:XmlContainer_lookupStatistics self txn uri name parent_uri parent_name index value ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupStatistics" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupStatistics" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res7 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[7], &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupStatistics" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    arg7 = ptr;
  }
  res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "XmlContainer_lookupStatistics" "', argument " "8"" of type '" "XmlValue const &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "8"" of type '" "XmlValue const &""'"); 
  }
  arg8 = reinterpret_cast< XmlValue * >(argp8);
  {
    try {
      result = (XmlStatistics *)XmlContainer_lookupStatistics__SWIG_6(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(XmlValue const &)*arg8);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlStatistics,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupStatistics__SWIG_7(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainer *arg1 = (XmlContainer *) 0 ;
  XmlTransaction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  int res6 = SWIG_OLDOBJ ;
  int res7 = SWIG_OLDOBJ ;
  XmlStatistics *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:XmlContainer_lookupStatistics self txn uri name parent_uri parent_name index ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainer_lookupStatistics" "', argument " "1"" of type '" "XmlContainer *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainer * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "XmlContainer_lookupStatistics" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res7 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[7], &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "XmlContainer_lookupStatistics" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlContainer_lookupStatistics" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    arg7 = ptr;
  }
  {
    try {
      result = (XmlStatistics *)XmlContainer_lookupStatistics__SWIG_6(arg1,*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlStatistics,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res6)) delete arg6;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainer_lookupStatistics(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlContainer_lookupStatistics__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlContainer_lookupStatistics__SWIG_5(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_XmlValue, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_XmlContainer_lookupStatistics__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_XmlValue, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_XmlContainer_lookupStatistics__SWIG_4(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_XmlContainer_lookupStatistics__SWIG_3(clientData, interp, objc, argv - 1);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[6], (std::string**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_XmlContainer_lookupStatistics__SWIG_7(clientData, interp, objc, argv - 1);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_XmlValue, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_XmlContainer_lookupStatistics__SWIG_2(clientData, interp, objc, argv - 1);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[5], (std::string**)(0));
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[6], (std::string**)(0));
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_XmlValue, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_XmlContainer_lookupStatistics__SWIG_6(clientData, interp, objc, argv - 1);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlContainer_lookupStatistics'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlContainer(void *obj) {
XmlContainer *arg1 = (XmlContainer *) obj;
delete arg1;
}
static swig_method swig_XmlContainer_methods[] = {
    {"sync", _wrap_XmlContainer_sync}, 
    {"close", _wrap_XmlContainer_close}, 
    {"getFlags", _wrap_XmlContainer_getFlags}, 
    {"addAlias", _wrap_XmlContainer_addAlias}, 
    {"removeAlias", _wrap_XmlContainer_removeAlias}, 
    {"getManager", _wrap_XmlContainer_getManager}, 
    {"getName", _wrap_XmlContainer_getName}, 
    {"getContainerType", _wrap_XmlContainer_getContainerType}, 
    {"getIndexNodes", _wrap_XmlContainer_getIndexNodes}, 
    {"getPageSize", _wrap_XmlContainer_getPageSize}, 
    {"getAutoIndexing", _wrap_XmlContainer_getAutoIndexing}, 
    {"getContainerConfig", _wrap_XmlContainer_getContainerConfig}, 
    {"setAutoIndexing", _wrap_XmlContainer_setAutoIndexing}, 
    {"setIndexSpecification", _wrap_XmlContainer_setIndexSpecification}, 
    {"addIndex", _wrap_XmlContainer_addIndex}, 
    {"deleteIndex", _wrap_XmlContainer_deleteIndex}, 
    {"replaceIndex", _wrap_XmlContainer_replaceIndex}, 
    {"addDefaultIndex", _wrap_XmlContainer_addDefaultIndex}, 
    {"deleteDefaultIndex", _wrap_XmlContainer_deleteDefaultIndex}, 
    {"replaceDefaultIndex", _wrap_XmlContainer_replaceDefaultIndex}, 
    {"putDocument", _wrap_XmlContainer_putDocument}, 
    {"putDocumentAsEventWriter", _wrap_XmlContainer_putDocumentAsEventWriter}, 
    {"deleteDocument", _wrap_XmlContainer_deleteDocument}, 
    {"updateDocument", _wrap_XmlContainer_updateDocument}, 
    {"getNumDocuments", _wrap_XmlContainer_getNumDocuments}, 
    {"getIndexSpecification", _wrap_XmlContainer_getIndexSpecification}, 
    {"getNode", _wrap_XmlContainer_getNode}, 
    {"getDocument", _wrap_XmlContainer_getDocument}, 
    {"getAllDocuments", _wrap_XmlContainer_getAllDocuments}, 
    {"lookupIndex", _wrap_XmlContainer_lookupIndex}, 
    {"lookupStatistics", _wrap_XmlContainer_lookupStatistics}, 
    {0,0}
};
static swig_attribute swig_XmlContainer_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlContainer_bases[] = {0};
static const char * swig_XmlContainer_base_names[] = {0};
static swig_class _wrap_class_XmlContainer = { "XmlContainer", &SWIGTYPE_p_XmlContainer,_wrap_new_XmlContainer, swig_delete_XmlContainer, swig_XmlContainer_methods, swig_XmlContainer_attributes, swig_XmlContainer_bases,swig_XmlContainer_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlDocument__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlDocument ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlDocument *)new XmlDocument();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlDocument,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlDocument__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlDocument *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlDocument o ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlDocument" "', argument " "1"" of type '" "XmlDocument const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlDocument" "', argument " "1"" of type '" "XmlDocument const &""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    try {
      result = (XmlDocument *)new XmlDocument((XmlDocument const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlDocument,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlDocument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlDocument__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlDocument__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlDocument'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlDocument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlDocument self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlDocument" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_setName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlDocument_setName self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_setName" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_setName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_setName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setName((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlDocument_getName self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_getName" "', argument " "1"" of type '" "XmlDocument const *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    try {
      result = ((XmlDocument const *)arg1)->getName();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_setContent(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  XmlData *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlData xml_data2 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlDocument_setContent self content ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_setContent" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    int len;
    char *data = (char *)Tcl_GetByteArrayFromObj(objv[2], &len);
    xml_data2.set(data, len);
    arg2 = &xml_data2;
  }
  {
    try {
      (arg1)->setContent((XmlData const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getContentAsXmlInputStream(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlInputStream *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlDocument_getContentAsXmlInputStream self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_getContentAsXmlInputStream" "', argument " "1"" of type '" "XmlDocument const *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    try {
      result = (XmlInputStream *)((XmlDocument const *)arg1)->getContentAsXmlInputStream();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlInputStream,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_setContentAsXmlInputStream(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  XmlInputStream *arg2 = (XmlInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlDocument_setContentAsXmlInputStream self adopted ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_setContentAsXmlInputStream" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_XmlInputStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_setContentAsXmlInputStream" "', argument " "2"" of type '" "XmlInputStream *""'"); 
  }
  arg2 = reinterpret_cast< XmlInputStream * >(argp2);
  {
    try {
      (arg1)->setContentAsXmlInputStream(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getContentAsEventReader(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlEventReader *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlDocument_getContentAsEventReader self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_getContentAsEventReader" "', argument " "1"" of type '" "XmlDocument const *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    try {
      result = (XmlEventReader *) &((XmlDocument const *)arg1)->getContentAsEventReader();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlEventReader,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_setContentAsEventReader(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  XmlEventReader *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlDocument_setContentAsEventReader self reader ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_setContentAsEventReader" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlEventReader,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_setContentAsEventReader" "', argument " "2"" of type '" "XmlEventReader &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_setContentAsEventReader" "', argument " "2"" of type '" "XmlEventReader &""'"); 
  }
  arg2 = reinterpret_cast< XmlEventReader * >(argp2);
  {
    try {
      (arg1)->setContentAsEventReader(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getContentAsEventWriter(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  XmlEventWriter *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlDocument_getContentAsEventWriter self writer ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_getContentAsEventWriter" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlEventWriter,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_getContentAsEventWriter" "', argument " "2"" of type '" "XmlEventWriter &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_getContentAsEventWriter" "', argument " "2"" of type '" "XmlEventWriter &""'"); 
  }
  arg2 = reinterpret_cast< XmlEventWriter * >(argp2);
  {
    try {
      (arg1)->getContentAsEventWriter(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_fetchAllData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlDocument_fetchAllData self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_fetchAllData" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    try {
      (arg1)->fetchAllData();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_setMetaData__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlValue *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 ;
  int res4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlDocument_setMetaData self uri name value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_setMetaData" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_setMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_setMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlDocument_setMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_setMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlDocument_setMetaData" "', argument " "4"" of type '" "XmlValue const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_setMetaData" "', argument " "4"" of type '" "XmlValue const &""'"); 
  }
  arg4 = reinterpret_cast< XmlValue * >(argp4);
  {
    try {
      (arg1)->setMetaData((std::string const &)*arg2,(std::string const &)*arg3,(XmlValue const &)*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getMetaData__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlValue *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlDocument_getMetaData self uri name value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_getMetaData" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_getMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_getMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlDocument_getMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_getMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlDocument_getMetaData" "', argument " "4"" of type '" "XmlValue &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_getMetaData" "', argument " "4"" of type '" "XmlValue &""'"); 
  }
  arg4 = reinterpret_cast< XmlValue * >(argp4);
  {
    try {
      result = (bool)(arg1)->getMetaData((std::string const &)*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_removeMetaData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlDocument_removeMetaData self uri name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_removeMetaData" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_removeMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_removeMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlDocument_removeMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_removeMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      (arg1)->removeMetaData((std::string const &)*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_setMetaData__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlData *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  XmlData xml_data4 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlDocument_setMetaData self uri name value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_setMetaData" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_setMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_setMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlDocument_setMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_setMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    int len;
    char *data = (char *)Tcl_GetByteArrayFromObj(objv[4], &len);
    xml_data4.set(data, len);
    arg4 = &xml_data4;
  }
  {
    try {
      (arg1)->setMetaData((std::string const &)*arg2,(std::string const &)*arg3,(XmlData const &)*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_setMetaData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlValue, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlDocument_setMetaData__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlData, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlDocument_setMetaData__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlDocument_setMetaData'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getMetaData__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  XmlData *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  XmlData xml_data4 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlDocument_getMetaData self uri name value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_getMetaData" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_getMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_getMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlDocument_getMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_getMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    int len;
    char *data = (char *)Tcl_GetByteArrayFromObj(objv[4], &len);
    xml_data4.set(data, len);
    arg4 = &xml_data4;
  }
  {
    try {
      result = (bool)(arg1)->getMetaData((std::string const &)*arg2,(std::string const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getContentAsString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlDocument_getContentAsString self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_getContentAsString" "', argument " "1"" of type '" "XmlDocument const *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    try {
      result = XmlDocument_getContentAsString((XmlDocument const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getContent(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlDocument_getContent self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_getContent" "', argument " "1"" of type '" "XmlDocument const *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    try {
      result = (XmlData *)XmlDocument_getContent((XmlDocument const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  {
    if (result) {
      Tcl_SetObjResult(interp, Tcl_NewByteArrayObj((unsigned char *)result->get_data(), result->get_size()));
      delete result; // done with new XmlData object
    } else
    Tcl_SetResult(interp, (char *) "", TCL_STATIC);
  }
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getMetaData__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  XmlData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlDocument_getMetaData self uri name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_getMetaData" "', argument " "1"" of type '" "XmlDocument *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_getMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_getMetaData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlDocument_getMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_getMetaData" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      result = (XmlData *)XmlDocument_getMetaData__SWIG_2(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  {
    if (result) {
      Tcl_SetObjResult(interp, Tcl_NewByteArrayObj((unsigned char *)result->get_data(), result->get_size()));
      delete result; // done with new XmlData object
    } else
    Tcl_SetResult(interp, (char *) "", TCL_STATIC);
  }
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getMetaData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlDocument_getMetaData__SWIG_2(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlData, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlDocument_getMetaData__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlValue, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlDocument_getMetaData__SWIG_0(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlDocument_getMetaData'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_getMetaDataIterator(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlMetaDataIterator *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlDocument_getMetaDataIterator self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_getMetaDataIterator" "', argument " "1"" of type '" "XmlDocument const *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    try {
      result = (XmlMetaDataIterator *)XmlDocument_getMetaDataIterator((XmlDocument const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlMetaDataIterator,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlDocument_equals(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = (XmlDocument *) 0 ;
  XmlDocument *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlDocument_equals self other ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlDocument_equals" "', argument " "1"" of type '" "XmlDocument const *""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlDocument_equals" "', argument " "2"" of type '" "XmlDocument const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlDocument_equals" "', argument " "2"" of type '" "XmlDocument const &""'"); 
  }
  arg2 = reinterpret_cast< XmlDocument * >(argp2);
  {
    try {
      result = (bool)XmlDocument_equals((XmlDocument const *)arg1,(XmlDocument const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlDocument(void *obj) {
XmlDocument *arg1 = (XmlDocument *) obj;
delete arg1;
}
static swig_method swig_XmlDocument_methods[] = {
    {"setName", _wrap_XmlDocument_setName}, 
    {"getName", _wrap_XmlDocument_getName}, 
    {"setContent", _wrap_XmlDocument_setContent}, 
    {"getContentAsXmlInputStream", _wrap_XmlDocument_getContentAsXmlInputStream}, 
    {"setContentAsXmlInputStream", _wrap_XmlDocument_setContentAsXmlInputStream}, 
    {"getContentAsEventReader", _wrap_XmlDocument_getContentAsEventReader}, 
    {"setContentAsEventReader", _wrap_XmlDocument_setContentAsEventReader}, 
    {"getContentAsEventWriter", _wrap_XmlDocument_getContentAsEventWriter}, 
    {"fetchAllData", _wrap_XmlDocument_fetchAllData}, 
    {"removeMetaData", _wrap_XmlDocument_removeMetaData}, 
    {"setMetaData", _wrap_XmlDocument_setMetaData}, 
    {"getContentAsString", _wrap_XmlDocument_getContentAsString}, 
    {"getContent", _wrap_XmlDocument_getContent}, 
    {"getMetaData", _wrap_XmlDocument_getMetaData}, 
    {"getMetaDataIterator", _wrap_XmlDocument_getMetaDataIterator}, 
    {"equals", _wrap_XmlDocument_equals}, 
    {0,0}
};
static swig_attribute swig_XmlDocument_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlDocument_bases[] = {0};
static const char * swig_XmlDocument_base_names[] = {0};
static swig_class _wrap_class_XmlDocument = { "XmlDocument", &SWIGTYPE_p_XmlDocument,_wrap_new_XmlDocument, swig_delete_XmlDocument, swig_XmlDocument_methods, swig_XmlDocument_attributes, swig_XmlDocument_bases,swig_XmlDocument_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlMetaDataIterator(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlMetaDataIterator *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlMetaDataIterator *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlMetaDataIterator o ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlMetaDataIterator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlMetaDataIterator" "', argument " "1"" of type '" "XmlMetaDataIterator const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlMetaDataIterator" "', argument " "1"" of type '" "XmlMetaDataIterator const &""'"); 
  }
  arg1 = reinterpret_cast< XmlMetaDataIterator * >(argp1);
  {
    try {
      result = (XmlMetaDataIterator *)new XmlMetaDataIterator((XmlMetaDataIterator const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlMetaDataIterator,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlMetaDataIterator(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlMetaDataIterator *arg1 = (XmlMetaDataIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlMetaDataIterator self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlMetaDataIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlMetaDataIterator" "', argument " "1"" of type '" "XmlMetaDataIterator *""'"); 
  }
  arg1 = reinterpret_cast< XmlMetaDataIterator * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlMetaDataIterator_reset(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlMetaDataIterator *arg1 = (XmlMetaDataIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlMetaDataIterator_reset self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlMetaDataIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlMetaDataIterator_reset" "', argument " "1"" of type '" "XmlMetaDataIterator *""'"); 
  }
  arg1 = reinterpret_cast< XmlMetaDataIterator * >(argp1);
  {
    try {
      (arg1)->reset();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlMetaDataIterator_next(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlMetaDataIterator *arg1 = (XmlMetaDataIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlMetaData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlMetaDataIterator_next self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlMetaDataIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlMetaDataIterator_next" "', argument " "1"" of type '" "XmlMetaDataIterator *""'"); 
  }
  arg1 = reinterpret_cast< XmlMetaDataIterator * >(argp1);
  {
    try {
      result = (XmlMetaData *)XmlMetaDataIterator_next(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlMetaData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlMetaDataIterator(void *obj) {
XmlMetaDataIterator *arg1 = (XmlMetaDataIterator *) obj;
delete arg1;
}
static swig_method swig_XmlMetaDataIterator_methods[] = {
    {"reset", _wrap_XmlMetaDataIterator_reset}, 
    {"next", _wrap_XmlMetaDataIterator_next}, 
    {0,0}
};
static swig_attribute swig_XmlMetaDataIterator_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlMetaDataIterator_bases[] = {0};
static const char * swig_XmlMetaDataIterator_base_names[] = {0};
static swig_class _wrap_class_XmlMetaDataIterator = { "XmlMetaDataIterator", &SWIGTYPE_p_XmlMetaDataIterator,_wrap_new_XmlMetaDataIterator, swig_delete_XmlMetaDataIterator, swig_XmlMetaDataIterator_methods, swig_XmlMetaDataIterator_attributes, swig_XmlMetaDataIterator_bases,swig_XmlMetaDataIterator_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_XmlMetaData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlMetaData *arg1 = (XmlMetaData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlMetaData self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlMetaData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlMetaData" "', argument " "1"" of type '" "XmlMetaData *""'"); 
  }
  arg1 = reinterpret_cast< XmlMetaData * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlMetaData_get_uri(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlMetaData *arg1 = (XmlMetaData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlMetaData_get_uri self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlMetaData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlMetaData_get_uri" "', argument " "1"" of type '" "XmlMetaData const *""'"); 
  }
  arg1 = reinterpret_cast< XmlMetaData * >(argp1);
  {
    try {
      result = (std::string *) &((XmlMetaData const *)arg1)->get_uri();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlMetaData_get_name(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlMetaData *arg1 = (XmlMetaData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlMetaData_get_name self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlMetaData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlMetaData_get_name" "', argument " "1"" of type '" "XmlMetaData const *""'"); 
  }
  arg1 = reinterpret_cast< XmlMetaData * >(argp1);
  {
    try {
      result = (std::string *) &((XmlMetaData const *)arg1)->get_name();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlMetaData_get_value(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlMetaData *arg1 = (XmlMetaData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlMetaData_get_value self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlMetaData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlMetaData_get_value" "', argument " "1"" of type '" "XmlMetaData const *""'"); 
  }
  arg1 = reinterpret_cast< XmlMetaData * >(argp1);
  {
    try {
      result = (XmlValue *) &((XmlMetaData const *)arg1)->get_value();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlMetaData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlMetaData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlMetaData ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlMetaData *)new XmlMetaData();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlMetaData,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlMetaData(void *obj) {
XmlMetaData *arg1 = (XmlMetaData *) obj;
delete arg1;
}
static swig_method swig_XmlMetaData_methods[] = {
    {"get_uri", _wrap_XmlMetaData_get_uri}, 
    {"get_name", _wrap_XmlMetaData_get_name}, 
    {"get_value", _wrap_XmlMetaData_get_value}, 
    {0,0}
};
static swig_attribute swig_XmlMetaData_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlMetaData_bases[] = {0};
static const char * swig_XmlMetaData_base_names[] = {0};
static swig_class _wrap_class_XmlMetaData = { "XmlMetaData", &SWIGTYPE_p_XmlMetaData,_wrap_new_XmlMetaData, swig_delete_XmlMetaData, swig_XmlMetaData_methods, swig_XmlMetaData_attributes, swig_XmlMetaData_bases,swig_XmlMetaData_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlQueryContext__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlQueryContext ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlQueryContext *)new XmlQueryContext();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlQueryContext,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlQueryContext__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlQueryContext *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlQueryContext o ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlQueryContext" "', argument " "1"" of type '" "XmlQueryContext const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlQueryContext" "', argument " "1"" of type '" "XmlQueryContext const &""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    try {
      result = (XmlQueryContext *)new XmlQueryContext((XmlQueryContext const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlQueryContext,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlQueryContext(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlQueryContext__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlQueryContext__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlQueryContext'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlQueryContext(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlQueryContext self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlQueryContext" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_setNamespace(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlQueryContext_setNamespace self prefix uri ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_setNamespace" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_setNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_setNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlQueryContext_setNamespace" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_setNamespace" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      (arg1)->setNamespace((std::string const &)*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_getNamespace(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_getNamespace self prefix ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_getNamespace" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_getNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_getNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (arg1)->getNamespace((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_removeNamespace(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_removeNamespace self prefix ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_removeNamespace" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_removeNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_removeNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->removeNamespace((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_clearNamespaces(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlQueryContext_clearNamespaces self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_clearNamespaces" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    try {
      (arg1)->clearNamespaces();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_setVariableValue__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  XmlValue *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlQueryContext_setVariableValue self name value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_setVariableValue" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_setVariableValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_setVariableValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlQueryContext_setVariableValue" "', argument " "3"" of type '" "XmlValue const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_setVariableValue" "', argument " "3"" of type '" "XmlValue const &""'"); 
  }
  arg3 = reinterpret_cast< XmlValue * >(argp3);
  {
    try {
      (arg1)->setVariableValue((std::string const &)*arg2,(XmlValue const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_setVariableValue__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  XmlResults *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlQueryContext_setVariableValue self name value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_setVariableValue" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_setVariableValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_setVariableValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlResults,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlQueryContext_setVariableValue" "', argument " "3"" of type '" "XmlResults &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_setVariableValue" "', argument " "3"" of type '" "XmlResults &""'"); 
  }
  arg3 = reinterpret_cast< XmlResults * >(argp3);
  {
    try {
      (arg1)->setVariableValue((std::string const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_setVariableValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlValue, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlQueryContext_setVariableValue__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlResults, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlQueryContext_setVariableValue__SWIG_1(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlQueryContext_setVariableValue'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_setBaseURI(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_setBaseURI self baseURI ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_setBaseURI" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_setBaseURI" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_setBaseURI" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setBaseURI((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_getBaseURI(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlQueryContext_getBaseURI self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_getBaseURI" "', argument " "1"" of type '" "XmlQueryContext const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    try {
      result = ((XmlQueryContext const *)arg1)->getBaseURI();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_setReturnType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  enum XmlQueryContext::ReturnType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_setReturnType self type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_setReturnType" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlQueryContext_setReturnType" "', argument " "2"" of type '" "enum XmlQueryContext::ReturnType""'");
  } 
  arg2 = static_cast< enum XmlQueryContext::ReturnType >(val2);
  {
    try {
      (arg1)->setReturnType(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_getReturnType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlQueryContext::ReturnType result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlQueryContext_getReturnType self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_getReturnType" "', argument " "1"" of type '" "XmlQueryContext const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    try {
      result = (enum XmlQueryContext::ReturnType)((XmlQueryContext const *)arg1)->getReturnType();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_setEvaluationType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  enum XmlQueryContext::EvaluationType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_setEvaluationType self type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_setEvaluationType" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlQueryContext_setEvaluationType" "', argument " "2"" of type '" "enum XmlQueryContext::EvaluationType""'");
  } 
  arg2 = static_cast< enum XmlQueryContext::EvaluationType >(val2);
  {
    try {
      (arg1)->setEvaluationType(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_getEvaluationType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlQueryContext::EvaluationType result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlQueryContext_getEvaluationType self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_getEvaluationType" "', argument " "1"" of type '" "XmlQueryContext const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    try {
      result = (enum XmlQueryContext::EvaluationType)((XmlQueryContext const *)arg1)->getEvaluationType();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_setDefaultCollection(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_setDefaultCollection self uri ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_setDefaultCollection" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_setDefaultCollection" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_setDefaultCollection" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->setDefaultCollection((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_getDefaultCollection(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlQueryContext_getDefaultCollection self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_getDefaultCollection" "', argument " "1"" of type '" "XmlQueryContext const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    try {
      result = ((XmlQueryContext const *)arg1)->getDefaultCollection();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_interruptQuery(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlQueryContext_interruptQuery self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_interruptQuery" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    try {
      (arg1)->interruptQuery();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_setQueryTimeoutSeconds(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  u_int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_setQueryTimeoutSeconds self secs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_setQueryTimeoutSeconds" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlQueryContext_setQueryTimeoutSeconds" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      (arg1)->setQueryTimeoutSeconds(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_getQueryTimeoutSeconds(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  u_int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlQueryContext_getQueryTimeoutSeconds self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_getQueryTimeoutSeconds" "', argument " "1"" of type '" "XmlQueryContext const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    try {
      result = ((XmlQueryContext const *)arg1)->getQueryTimeoutSeconds();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_getVariableValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_getVariableValue self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_getVariableValue" "', argument " "1"" of type '" "XmlQueryContext const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_getVariableValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_getVariableValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (XmlValue *)XmlQueryContext_getVariableValue((XmlQueryContext const *)arg1,(std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_getVariableValues(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_getVariableValues self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_getVariableValues" "', argument " "1"" of type '" "XmlQueryContext const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_getVariableValues" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_getVariableValues" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (XmlResults *)XmlQueryContext_getVariableValues((XmlQueryContext const *)arg1,(std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_get self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_get" "', argument " "1"" of type '" "XmlQueryContext const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_get" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = XmlQueryContext_get((XmlQueryContext const *)arg1,(char const *)arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlQueryContext_set self name value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_set" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlQueryContext_set" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_set" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      XmlQueryContext_set(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryContext_setDebugVariable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryContext *arg1 = (XmlQueryContext *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryContext_setDebugVariable self var ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryContext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryContext_setDebugVariable" "', argument " "1"" of type '" "XmlQueryContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryContext * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryContext_setDebugVariable" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryContext_setDebugVariable" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      XmlQueryContext_setDebugVariable(arg1,(std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlQueryContext(void *obj) {
XmlQueryContext *arg1 = (XmlQueryContext *) obj;
delete arg1;
}
static swig_method swig_XmlQueryContext_methods[] = {
    {"setNamespace", _wrap_XmlQueryContext_setNamespace}, 
    {"getNamespace", _wrap_XmlQueryContext_getNamespace}, 
    {"removeNamespace", _wrap_XmlQueryContext_removeNamespace}, 
    {"clearNamespaces", _wrap_XmlQueryContext_clearNamespaces}, 
    {"setVariableValue", _wrap_XmlQueryContext_setVariableValue}, 
    {"setBaseURI", _wrap_XmlQueryContext_setBaseURI}, 
    {"getBaseURI", _wrap_XmlQueryContext_getBaseURI}, 
    {"setReturnType", _wrap_XmlQueryContext_setReturnType}, 
    {"getReturnType", _wrap_XmlQueryContext_getReturnType}, 
    {"setEvaluationType", _wrap_XmlQueryContext_setEvaluationType}, 
    {"getEvaluationType", _wrap_XmlQueryContext_getEvaluationType}, 
    {"setDefaultCollection", _wrap_XmlQueryContext_setDefaultCollection}, 
    {"getDefaultCollection", _wrap_XmlQueryContext_getDefaultCollection}, 
    {"interruptQuery", _wrap_XmlQueryContext_interruptQuery}, 
    {"setQueryTimeoutSeconds", _wrap_XmlQueryContext_setQueryTimeoutSeconds}, 
    {"getQueryTimeoutSeconds", _wrap_XmlQueryContext_getQueryTimeoutSeconds}, 
    {"getVariableValue", _wrap_XmlQueryContext_getVariableValue}, 
    {"getVariableValues", _wrap_XmlQueryContext_getVariableValues}, 
    {"get", _wrap_XmlQueryContext_get}, 
    {"set", _wrap_XmlQueryContext_set}, 
    {"setDebugVariable", _wrap_XmlQueryContext_setDebugVariable}, 
    {0,0}
};
static swig_attribute swig_XmlQueryContext_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlQueryContext_bases[] = {0};
static const char * swig_XmlQueryContext_base_names[] = {0};
static swig_class _wrap_class_XmlQueryContext = { "XmlQueryContext", &SWIGTYPE_p_XmlQueryContext,_wrap_new_XmlQueryContext, swig_delete_XmlQueryContext, swig_XmlQueryContext_methods, swig_XmlQueryContext_attributes, swig_XmlQueryContext_bases,swig_XmlQueryContext_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlResults__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlResults ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlResults *)new XmlResults();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlResults(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlResults self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlResults" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlResults__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlResults results ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlResults,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlResults" "', argument " "1"" of type '" "XmlResults const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlResults" "', argument " "1"" of type '" "XmlResults const &""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  {
    try {
      result = (XmlResults *)new XmlResults((XmlResults const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlResults(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlResults__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlResults, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlResults__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlResults'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_hasNext(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlResults_hasNext self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_hasNext" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  {
    try {
      result = (bool)(arg1)->hasNext();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_hasPrevious(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlResults_hasPrevious self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_hasPrevious" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  {
    try {
      result = (bool)(arg1)->hasPrevious();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_isNull(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlResults_isNull self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_isNull" "', argument " "1"" of type '" "XmlResults const *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  {
    try {
      result = (bool)((XmlResults const *)arg1)->isNull();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_next__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  XmlValue *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlResults_next self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_next" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlResults_next" "', argument " "2"" of type '" "XmlValue &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlResults_next" "', argument " "2"" of type '" "XmlValue &""'"); 
  }
  arg2 = reinterpret_cast< XmlValue * >(argp2);
  {
    try {
      result = (bool)(arg1)->next(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_previous__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  XmlValue *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlResults_previous self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_previous" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlResults_previous" "', argument " "2"" of type '" "XmlValue &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlResults_previous" "', argument " "2"" of type '" "XmlValue &""'"); 
  }
  arg2 = reinterpret_cast< XmlValue * >(argp2);
  {
    try {
      result = (bool)(arg1)->previous(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_peek__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  XmlValue *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlResults_peek self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_peek" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlResults_peek" "', argument " "2"" of type '" "XmlValue &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlResults_peek" "', argument " "2"" of type '" "XmlValue &""'"); 
  }
  arg2 = reinterpret_cast< XmlValue * >(argp2);
  {
    try {
      result = (bool)(arg1)->peek(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_getEvaluationType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlQueryContext::EvaluationType result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlResults_getEvaluationType self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_getEvaluationType" "', argument " "1"" of type '" "XmlResults const *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  {
    try {
      result = (enum XmlQueryContext::EvaluationType)((XmlResults const *)arg1)->getEvaluationType();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_next__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  XmlDocument *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlResults_next self document ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_next" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlResults_next" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlResults_next" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  arg2 = reinterpret_cast< XmlDocument * >(argp2);
  {
    try {
      result = (bool)(arg1)->next(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_next(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlResults, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlValue, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlResults_next__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlResults, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlResults_next__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlResults_next'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_previous__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  XmlDocument *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlResults_previous self document ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_previous" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlResults_previous" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlResults_previous" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  arg2 = reinterpret_cast< XmlDocument * >(argp2);
  {
    try {
      result = (bool)(arg1)->previous(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_previous(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlResults, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlValue, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlResults_previous__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlResults, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlResults_previous__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlResults_previous'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_peek__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  XmlDocument *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlResults_peek self document ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_peek" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlResults_peek" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlResults_peek" "', argument " "2"" of type '" "XmlDocument &""'"); 
  }
  arg2 = reinterpret_cast< XmlDocument * >(argp2);
  {
    try {
      result = (bool)(arg1)->peek(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_peek(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlResults, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlValue, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlResults_peek__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlResults, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlDocument, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlResults_peek__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlResults_peek'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_reset(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlResults_reset self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_reset" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  {
    try {
      (arg1)->reset();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_size(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlResults_size self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_size" "', argument " "1"" of type '" "XmlResults const *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  {
    try {
      result = ((XmlResults const *)arg1)->size();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_add(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  XmlValue *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlResults_add self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_add" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlResults_add" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlResults_add" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  arg2 = reinterpret_cast< XmlValue * >(argp2);
  {
    try {
      (arg1)->add((XmlValue const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_asEventWriter(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlEventWriter *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlResults_asEventWriter self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_asEventWriter" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  {
    try {
      result = (XmlEventWriter *) &(arg1)->asEventWriter();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlEventWriter,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_copyResults(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlResults result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlResults_copyResults self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_copyResults" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  {
    try {
      result = (arg1)->copyResults();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new XmlResults(static_cast< const XmlResults& >(result))), SWIGTYPE_p_XmlResults, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlResults_concatResults(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlResults *arg1 = (XmlResults *) 0 ;
  XmlResults *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlResults_concatResults self from ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlResults, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlResults_concatResults" "', argument " "1"" of type '" "XmlResults *""'"); 
  }
  arg1 = reinterpret_cast< XmlResults * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlResults,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlResults_concatResults" "', argument " "2"" of type '" "XmlResults &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlResults_concatResults" "', argument " "2"" of type '" "XmlResults &""'"); 
  }
  arg2 = reinterpret_cast< XmlResults * >(argp2);
  {
    try {
      (arg1)->concatResults(*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlResults(void *obj) {
XmlResults *arg1 = (XmlResults *) obj;
delete arg1;
}
static swig_method swig_XmlResults_methods[] = {
    {"hasNext", _wrap_XmlResults_hasNext}, 
    {"hasPrevious", _wrap_XmlResults_hasPrevious}, 
    {"isNull", _wrap_XmlResults_isNull}, 
    {"getEvaluationType", _wrap_XmlResults_getEvaluationType}, 
    {"next", _wrap_XmlResults_next}, 
    {"previous", _wrap_XmlResults_previous}, 
    {"peek", _wrap_XmlResults_peek}, 
    {"reset", _wrap_XmlResults_reset}, 
    {"size", _wrap_XmlResults_size}, 
    {"add", _wrap_XmlResults_add}, 
    {"asEventWriter", _wrap_XmlResults_asEventWriter}, 
    {"copyResults", _wrap_XmlResults_copyResults}, 
    {"concatResults", _wrap_XmlResults_concatResults}, 
    {0,0}
};
static swig_attribute swig_XmlResults_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlResults_bases[] = {0};
static const char * swig_XmlResults_base_names[] = {0};
static swig_class _wrap_class_XmlResults = { "XmlResults", &SWIGTYPE_p_XmlResults,_wrap_new_XmlResults, swig_delete_XmlResults, swig_XmlResults_methods, swig_XmlResults_attributes, swig_XmlResults_bases,swig_XmlResults_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlUpdateContext__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlUpdateContext *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlUpdateContext ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlUpdateContext *)new XmlUpdateContext();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlUpdateContext,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlUpdateContext__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlUpdateContext *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlUpdateContext *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlUpdateContext o ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlUpdateContext,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlUpdateContext" "', argument " "1"" of type '" "XmlUpdateContext const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlUpdateContext" "', argument " "1"" of type '" "XmlUpdateContext const &""'"); 
  }
  arg1 = reinterpret_cast< XmlUpdateContext * >(argp1);
  {
    try {
      result = (XmlUpdateContext *)new XmlUpdateContext((XmlUpdateContext const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlUpdateContext,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlUpdateContext(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlUpdateContext__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlUpdateContext, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlUpdateContext__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlUpdateContext'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlUpdateContext(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlUpdateContext *arg1 = (XmlUpdateContext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlUpdateContext self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlUpdateContext, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlUpdateContext" "', argument " "1"" of type '" "XmlUpdateContext *""'"); 
  }
  arg1 = reinterpret_cast< XmlUpdateContext * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlUpdateContext(void *obj) {
XmlUpdateContext *arg1 = (XmlUpdateContext *) obj;
delete arg1;
}
static swig_method swig_XmlUpdateContext_methods[] = {
    {0,0}
};
static swig_attribute swig_XmlUpdateContext_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlUpdateContext_bases[] = {0};
static const char * swig_XmlUpdateContext_base_names[] = {0};
static swig_class _wrap_class_XmlUpdateContext = { "XmlUpdateContext", &SWIGTYPE_p_XmlUpdateContext,_wrap_new_XmlUpdateContext, swig_delete_XmlUpdateContext, swig_XmlUpdateContext_methods, swig_XmlUpdateContext_attributes, swig_XmlUpdateContext_bases,swig_XmlUpdateContext_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlValue__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlValue ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlValue *)new XmlValue();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlValue__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlValue other ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlValue" "', argument " "1"" of type '" "XmlValue const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlValue" "', argument " "1"" of type '" "XmlValue const &""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlValue *)new XmlValue((XmlValue const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlValue__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlValue v ",(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlValue" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlValue" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (XmlValue *)new XmlValue((std::string const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlValue__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlValue v ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_XmlValue" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  {
    try {
      result = (XmlValue *)new XmlValue(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlValue__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlDocument *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlValue document ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlDocument,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlValue" "', argument " "1"" of type '" "XmlDocument const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlValue" "', argument " "1"" of type '" "XmlDocument const &""'"); 
  }
  arg1 = reinterpret_cast< XmlDocument * >(argp1);
  {
    try {
      result = (XmlValue *)new XmlValue((XmlDocument const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlValue__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  enum XmlValue::Type arg1 ;
  std::string *arg2 = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:new_XmlValue type v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_XmlValue" "', argument " "1"" of type '" "enum XmlValue::Type""'");
  } 
  arg1 = static_cast< enum XmlValue::Type >(val1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XmlValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (XmlValue *)new XmlValue(arg1,(std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlValue__SWIG_6(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:new_XmlValue typeURI typeName v ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlValue" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlValue" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XmlValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlValue" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XmlValue" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlValue" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      result = (XmlValue *)new XmlValue((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlValue__SWIG_7(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  enum XmlValue::Type arg1 ;
  XmlData *arg2 = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  XmlData xml_data2 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:new_XmlValue type dbt ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_XmlValue" "', argument " "1"" of type '" "enum XmlValue::Type""'");
  } 
  arg1 = static_cast< enum XmlValue::Type >(val1);
  {
    int len;
    char *data = (char *)Tcl_GetByteArrayFromObj(objv[2], &len);
    xml_data2.set(data, len);
    arg2 = &xml_data2;
  }
  {
    try {
      result = (XmlValue *)new XmlValue(arg1,(XmlData const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlValue__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlValue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlValue__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlValue__SWIG_4(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_XmlValue__SWIG_3(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlValue__SWIG_2(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlData, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_XmlValue__SWIG_7(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_XmlValue__SWIG_5(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_XmlValue__SWIG_6(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlValue'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlValue self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlValue" "', argument " "1"" of type '" "XmlValue *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlValue::Type result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getType self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getType" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (enum XmlValue::Type)((XmlValue const *)arg1)->getType();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getTypeURI(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getTypeURI self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getTypeURI" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = ((XmlValue const *)arg1)->getTypeURI();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getTypeName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getTypeName self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getTypeName" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = ((XmlValue const *)arg1)->getTypeName();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_isNull(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_isNull self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_isNull" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (bool)((XmlValue const *)arg1)->isNull();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_isType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  enum XmlValue::Type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlValue_isType self type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_isType" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlValue_isType" "', argument " "2"" of type '" "enum XmlValue::Type""'");
  } 
  arg2 = static_cast< enum XmlValue::Type >(val2);
  {
    try {
      result = (bool)((XmlValue const *)arg1)->isType(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_isNumber(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_isNumber self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_isNumber" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (bool)((XmlValue const *)arg1)->isNumber();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_isString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_isString self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_isString" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (bool)((XmlValue const *)arg1)->isString();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_isBoolean(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_isBoolean self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_isBoolean" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (bool)((XmlValue const *)arg1)->isBoolean();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_isBinary(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_isBinary self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_isBinary" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (bool)((XmlValue const *)arg1)->isBinary();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_isNode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_isNode self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_isNode" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (bool)((XmlValue const *)arg1)->isNode();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_asNumber(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_asNumber self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_asNumber" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (double)((XmlValue const *)arg1)->asNumber();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_double(static_cast< double >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_asString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_asString self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_asString" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = ((XmlValue const *)arg1)->asString();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_asBoolean(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_asBoolean self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_asBoolean" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (bool)((XmlValue const *)arg1)->asBoolean();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_asBinary(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlData *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_asBinary self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_asBinary" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlData *)XmlValue_asBinary((XmlValue const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  {
    if (result) {
      Tcl_SetObjResult(interp, Tcl_NewByteArrayObj((unsigned char *)result->get_data(), result->get_size()));
      delete result; // done with new XmlData object
    } else
    Tcl_SetResult(interp, (char *) "", TCL_STATIC);
  }
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_asDocument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlDocument *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_asDocument self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_asDocument" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlDocument *)XmlValue_asDocument((XmlValue const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlDocument,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_asEventReader(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlEventReader *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_asEventReader self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_asEventReader" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlEventReader *) &((XmlValue const *)arg1)->asEventReader();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlEventReader,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getNodeHandle(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getNodeHandle self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getNodeHandle" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = ((XmlValue const *)arg1)->getNodeHandle();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_equals(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  XmlValue *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlValue_equals self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_equals" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlValue_equals" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlValue_equals" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  arg2 = reinterpret_cast< XmlValue * >(argp2);
  {
    try {
      result = (bool)((XmlValue const *)arg1)->equals((XmlValue const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getNodeName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getNodeName self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getNodeName" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = ((XmlValue const *)arg1)->getNodeName();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getNodeValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getNodeValue self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getNodeValue" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = ((XmlValue const *)arg1)->getNodeValue();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getNamespaceURI(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getNamespaceURI self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getNamespaceURI" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = ((XmlValue const *)arg1)->getNamespaceURI();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getPrefix(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getPrefix self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getPrefix" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = ((XmlValue const *)arg1)->getPrefix();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getLocalName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getLocalName self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getLocalName" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = ((XmlValue const *)arg1)->getLocalName();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getNodeType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getNodeType self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getNodeType" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (short)((XmlValue const *)arg1)->getNodeType();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_short(static_cast< short >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getParentNode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getParentNode self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getParentNode" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlValue *)XmlValue_getParentNode((XmlValue const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getFirstChild(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getFirstChild self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getFirstChild" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlValue *)XmlValue_getFirstChild((XmlValue const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getLastChild(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getLastChild self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getLastChild" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlValue *)XmlValue_getLastChild((XmlValue const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getPreviousSibling(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getPreviousSibling self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getPreviousSibling" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlValue *)XmlValue_getPreviousSibling((XmlValue const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getNextSibling(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getNextSibling self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getNextSibling" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlValue *)XmlValue_getNextSibling((XmlValue const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getAttributes(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getAttributes self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getAttributes" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlResults *)XmlValue_getAttributes((XmlValue const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_getOwnerElement(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = (XmlValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlValue *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlValue_getOwnerElement self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_getOwnerElement" "', argument " "1"" of type '" "XmlValue const *""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  {
    try {
      result = (XmlValue *)XmlValue_getOwnerElement((XmlValue const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlValue,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlValue_setValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlValue *arg1 = 0 ;
  XmlValue *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlValue_setValue to from ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlValue_setValue" "', argument " "1"" of type '" "XmlValue &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlValue_setValue" "', argument " "1"" of type '" "XmlValue &""'"); 
  }
  arg1 = reinterpret_cast< XmlValue * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlValue_setValue" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlValue_setValue" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  arg2 = reinterpret_cast< XmlValue * >(argp2);
  {
    try {
      XmlValue_setValue(*arg1,(XmlValue const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlValue(void *obj) {
XmlValue *arg1 = (XmlValue *) obj;
delete arg1;
}
static swig_method swig_XmlValue_methods[] = {
    {"getType", _wrap_XmlValue_getType}, 
    {"getTypeURI", _wrap_XmlValue_getTypeURI}, 
    {"getTypeName", _wrap_XmlValue_getTypeName}, 
    {"isNull", _wrap_XmlValue_isNull}, 
    {"isType", _wrap_XmlValue_isType}, 
    {"isNumber", _wrap_XmlValue_isNumber}, 
    {"isString", _wrap_XmlValue_isString}, 
    {"isBoolean", _wrap_XmlValue_isBoolean}, 
    {"isBinary", _wrap_XmlValue_isBinary}, 
    {"isNode", _wrap_XmlValue_isNode}, 
    {"asNumber", _wrap_XmlValue_asNumber}, 
    {"asString", _wrap_XmlValue_asString}, 
    {"asBoolean", _wrap_XmlValue_asBoolean}, 
    {"asBinary", _wrap_XmlValue_asBinary}, 
    {"asDocument", _wrap_XmlValue_asDocument}, 
    {"asEventReader", _wrap_XmlValue_asEventReader}, 
    {"getNodeHandle", _wrap_XmlValue_getNodeHandle}, 
    {"equals", _wrap_XmlValue_equals}, 
    {"getNodeName", _wrap_XmlValue_getNodeName}, 
    {"getNodeValue", _wrap_XmlValue_getNodeValue}, 
    {"getNamespaceURI", _wrap_XmlValue_getNamespaceURI}, 
    {"getPrefix", _wrap_XmlValue_getPrefix}, 
    {"getLocalName", _wrap_XmlValue_getLocalName}, 
    {"getNodeType", _wrap_XmlValue_getNodeType}, 
    {"getParentNode", _wrap_XmlValue_getParentNode}, 
    {"getFirstChild", _wrap_XmlValue_getFirstChild}, 
    {"getLastChild", _wrap_XmlValue_getLastChild}, 
    {"getPreviousSibling", _wrap_XmlValue_getPreviousSibling}, 
    {"getNextSibling", _wrap_XmlValue_getNextSibling}, 
    {"getAttributes", _wrap_XmlValue_getAttributes}, 
    {"getOwnerElement", _wrap_XmlValue_getOwnerElement}, 
    {0,0}
};
static swig_attribute swig_XmlValue_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlValue_bases[] = {0};
static const char * swig_XmlValue_base_names[] = {0};
static swig_class _wrap_class_XmlValue = { "XmlValue", &SWIGTYPE_p_XmlValue,_wrap_new_XmlValue, swig_delete_XmlValue, swig_XmlValue_methods, swig_XmlValue_attributes, swig_XmlValue_bases,swig_XmlValue_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlIndexSpecification(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlIndexSpecification ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlIndexSpecification *)new XmlIndexSpecification();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexSpecification,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlIndexSpecification(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlIndexSpecification self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlIndexSpecification" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_addIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  enum XmlIndexSpecification::Type arg4 ;
  enum XmlValue::Type arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlIndexSpecification_addIndex self uri name type syntax ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_addIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexSpecification_addIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_addIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexSpecification_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlIndexSpecification_addIndex" "', argument " "4"" of type '" "enum XmlIndexSpecification::Type""'");
  } 
  arg4 = static_cast< enum XmlIndexSpecification::Type >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlIndexSpecification_addIndex" "', argument " "5"" of type '" "enum XmlValue::Type""'");
  } 
  arg5 = static_cast< enum XmlValue::Type >(val5);
  {
    try {
      (arg1)->addIndex((std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_addIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlIndexSpecification_addIndex self uri name index ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_addIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexSpecification_addIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_addIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexSpecification_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_addIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlIndexSpecification_addIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_addIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      (arg1)->addIndex((std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_addIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlIndexSpecification_addIndex__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlIndexSpecification_addIndex__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlIndexSpecification_addIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_deleteIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  enum XmlIndexSpecification::Type arg4 ;
  enum XmlValue::Type arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlIndexSpecification_deleteIndex self uri name type syntax ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "4"" of type '" "enum XmlIndexSpecification::Type""'");
  } 
  arg4 = static_cast< enum XmlIndexSpecification::Type >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "5"" of type '" "enum XmlValue::Type""'");
  } 
  arg5 = static_cast< enum XmlValue::Type >(val5);
  {
    try {
      (arg1)->deleteIndex((std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_deleteIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlIndexSpecification_deleteIndex self uri name index ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_deleteIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      (arg1)->deleteIndex((std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_deleteIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlIndexSpecification_deleteIndex__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlIndexSpecification_deleteIndex__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlIndexSpecification_deleteIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_replaceIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  enum XmlIndexSpecification::Type arg4 ;
  enum XmlValue::Type arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlIndexSpecification_replaceIndex self uri name type syntax ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "4"" of type '" "enum XmlIndexSpecification::Type""'");
  } 
  arg4 = static_cast< enum XmlIndexSpecification::Type >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "5"" of type '" "enum XmlValue::Type""'");
  } 
  arg5 = static_cast< enum XmlValue::Type >(val5);
  {
    try {
      (arg1)->replaceIndex((std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_replaceIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlIndexSpecification_replaceIndex self uri name index ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_replaceIndex" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    try {
      (arg1)->replaceIndex((std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_replaceIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlIndexSpecification_replaceIndex__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlIndexSpecification_replaceIndex__SWIG_0(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlIndexSpecification_replaceIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_addDefaultIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  enum XmlIndexSpecification::Type arg2 ;
  enum XmlValue::Type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlIndexSpecification_addDefaultIndex self type syntax ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_addDefaultIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlIndexSpecification_addDefaultIndex" "', argument " "2"" of type '" "enum XmlIndexSpecification::Type""'");
  } 
  arg2 = static_cast< enum XmlIndexSpecification::Type >(val2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlIndexSpecification_addDefaultIndex" "', argument " "3"" of type '" "enum XmlValue::Type""'");
  } 
  arg3 = static_cast< enum XmlValue::Type >(val3);
  {
    try {
      (arg1)->addDefaultIndex(arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_addDefaultIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlIndexSpecification_addDefaultIndex self index ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_addDefaultIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexSpecification_addDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_addDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->addDefaultIndex((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_addDefaultIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlIndexSpecification_addDefaultIndex__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlIndexSpecification_addDefaultIndex__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlIndexSpecification_addDefaultIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_deleteDefaultIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  enum XmlIndexSpecification::Type arg2 ;
  enum XmlValue::Type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlIndexSpecification_deleteDefaultIndex self type syntax ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_deleteDefaultIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlIndexSpecification_deleteDefaultIndex" "', argument " "2"" of type '" "enum XmlIndexSpecification::Type""'");
  } 
  arg2 = static_cast< enum XmlIndexSpecification::Type >(val2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlIndexSpecification_deleteDefaultIndex" "', argument " "3"" of type '" "enum XmlValue::Type""'");
  } 
  arg3 = static_cast< enum XmlValue::Type >(val3);
  {
    try {
      (arg1)->deleteDefaultIndex(arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_deleteDefaultIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlIndexSpecification_deleteDefaultIndex self index ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_deleteDefaultIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexSpecification_deleteDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_deleteDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->deleteDefaultIndex((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_deleteDefaultIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlIndexSpecification_deleteDefaultIndex__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlIndexSpecification_deleteDefaultIndex__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlIndexSpecification_deleteDefaultIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_replaceDefaultIndex__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  enum XmlIndexSpecification::Type arg2 ;
  enum XmlValue::Type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlIndexSpecification_replaceDefaultIndex self type syntax ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_replaceDefaultIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlIndexSpecification_replaceDefaultIndex" "', argument " "2"" of type '" "enum XmlIndexSpecification::Type""'");
  } 
  arg2 = static_cast< enum XmlIndexSpecification::Type >(val2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlIndexSpecification_replaceDefaultIndex" "', argument " "3"" of type '" "enum XmlValue::Type""'");
  } 
  arg3 = static_cast< enum XmlValue::Type >(val3);
  {
    try {
      (arg1)->replaceDefaultIndex(arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_replaceDefaultIndex__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlIndexSpecification_replaceDefaultIndex self index ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_replaceDefaultIndex" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexSpecification_replaceDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_replaceDefaultIndex" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->replaceDefaultIndex((std::string const &)*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_replaceDefaultIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlIndexSpecification_replaceDefaultIndex__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlIndexSpecification, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlIndexSpecification_replaceDefaultIndex__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlIndexSpecification_replaceDefaultIndex'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_reset(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexSpecification_reset self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_reset" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    try {
      (arg1)->reset();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_getAutoIndexing(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexSpecification_getAutoIndexing self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_getAutoIndexing" "', argument " "1"" of type '" "XmlIndexSpecification const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    try {
      result = (bool)((XmlIndexSpecification const *)arg1)->getAutoIndexing();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_setAutoIndexing(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlIndexSpecification_setAutoIndexing self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_setAutoIndexing" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlIndexSpecification_setAutoIndexing" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setAutoIndexing(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_find(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  XmlIndexDeclaration *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlIndexSpecification_find self uri name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_find" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlIndexSpecification_find" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_find" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlIndexSpecification_find" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_find" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    try {
      result = (XmlIndexDeclaration *)XmlIndexSpecification_find(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexDeclaration,0));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_next(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlIndexDeclaration *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexSpecification_next self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_next" "', argument " "1"" of type '" "XmlIndexSpecification *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    try {
      result = (XmlIndexDeclaration *)XmlIndexSpecification_next(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexDeclaration,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_getDefaultIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexSpecification *arg1 = (XmlIndexSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexSpecification_getDefaultIndex self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_getDefaultIndex" "', argument " "1"" of type '" "XmlIndexSpecification const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexSpecification * >(argp1);
  {
    try {
      result = ((XmlIndexSpecification const *)arg1)->getDefaultIndex();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexSpecification_getValueType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  enum XmlValue::Type result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexSpecification_getValueType index ",(void *)0) == TCL_ERROR) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[1], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexSpecification_getValueType" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlIndexSpecification_getValueType" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = (enum XmlValue::Type)XmlIndexSpecification::getValueType((std::string const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlIndexSpecification(void *obj) {
XmlIndexSpecification *arg1 = (XmlIndexSpecification *) obj;
delete arg1;
}
static swig_method swig_XmlIndexSpecification_methods[] = {
    {"addIndex", _wrap_XmlIndexSpecification_addIndex}, 
    {"deleteIndex", _wrap_XmlIndexSpecification_deleteIndex}, 
    {"replaceIndex", _wrap_XmlIndexSpecification_replaceIndex}, 
    {"addDefaultIndex", _wrap_XmlIndexSpecification_addDefaultIndex}, 
    {"deleteDefaultIndex", _wrap_XmlIndexSpecification_deleteDefaultIndex}, 
    {"replaceDefaultIndex", _wrap_XmlIndexSpecification_replaceDefaultIndex}, 
    {"reset", _wrap_XmlIndexSpecification_reset}, 
    {"getAutoIndexing", _wrap_XmlIndexSpecification_getAutoIndexing}, 
    {"setAutoIndexing", _wrap_XmlIndexSpecification_setAutoIndexing}, 
    {"find", _wrap_XmlIndexSpecification_find}, 
    {"next", _wrap_XmlIndexSpecification_next}, 
    {"getDefaultIndex", _wrap_XmlIndexSpecification_getDefaultIndex}, 
    {0,0}
};
static swig_attribute swig_XmlIndexSpecification_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlIndexSpecification_bases[] = {0};
static const char * swig_XmlIndexSpecification_base_names[] = {0};
static swig_class _wrap_class_XmlIndexSpecification = { "XmlIndexSpecification", &SWIGTYPE_p_XmlIndexSpecification,_wrap_new_XmlIndexSpecification, swig_delete_XmlIndexSpecification, swig_XmlIndexSpecification_methods, swig_XmlIndexSpecification_attributes, swig_XmlIndexSpecification_bases,swig_XmlIndexSpecification_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_XmlIndexDeclaration(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexDeclaration *arg1 = (XmlIndexDeclaration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlIndexDeclaration self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexDeclaration, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlIndexDeclaration" "', argument " "1"" of type '" "XmlIndexDeclaration *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexDeclaration * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexDeclaration_get_uri(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexDeclaration *arg1 = (XmlIndexDeclaration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexDeclaration_get_uri self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexDeclaration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexDeclaration_get_uri" "', argument " "1"" of type '" "XmlIndexDeclaration const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexDeclaration * >(argp1);
  {
    try {
      result = (std::string *) &((XmlIndexDeclaration const *)arg1)->get_uri();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexDeclaration_get_name(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexDeclaration *arg1 = (XmlIndexDeclaration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexDeclaration_get_name self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexDeclaration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexDeclaration_get_name" "', argument " "1"" of type '" "XmlIndexDeclaration const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexDeclaration * >(argp1);
  {
    try {
      result = (std::string *) &((XmlIndexDeclaration const *)arg1)->get_name();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlIndexDeclaration_get_index(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexDeclaration *arg1 = (XmlIndexDeclaration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlIndexDeclaration_get_index self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlIndexDeclaration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlIndexDeclaration_get_index" "', argument " "1"" of type '" "XmlIndexDeclaration const *""'"); 
  }
  arg1 = reinterpret_cast< XmlIndexDeclaration * >(argp1);
  {
    try {
      result = (std::string *) &((XmlIndexDeclaration const *)arg1)->get_index();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlIndexDeclaration(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlIndexDeclaration *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlIndexDeclaration ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlIndexDeclaration *)new XmlIndexDeclaration();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlIndexDeclaration,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlIndexDeclaration(void *obj) {
XmlIndexDeclaration *arg1 = (XmlIndexDeclaration *) obj;
delete arg1;
}
static swig_method swig_XmlIndexDeclaration_methods[] = {
    {"get_uri", _wrap_XmlIndexDeclaration_get_uri}, 
    {"get_name", _wrap_XmlIndexDeclaration_get_name}, 
    {"get_index", _wrap_XmlIndexDeclaration_get_index}, 
    {0,0}
};
static swig_attribute swig_XmlIndexDeclaration_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlIndexDeclaration_bases[] = {0};
static const char * swig_XmlIndexDeclaration_base_names[] = {0};
static swig_class _wrap_class_XmlIndexDeclaration = { "XmlIndexDeclaration", &SWIGTYPE_p_XmlIndexDeclaration,_wrap_new_XmlIndexDeclaration, swig_delete_XmlIndexDeclaration, swig_XmlIndexDeclaration_methods, swig_XmlIndexDeclaration_attributes, swig_XmlIndexDeclaration_bases,swig_XmlIndexDeclaration_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlQueryExpression__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlQueryExpression ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlQueryExpression *)new XmlQueryExpression();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlQueryExpression,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlQueryExpression__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlQueryExpression *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlQueryExpression queryExpression ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlQueryExpression,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlQueryExpression" "', argument " "1"" of type '" "XmlQueryExpression const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlQueryExpression" "', argument " "1"" of type '" "XmlQueryExpression const &""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  {
    try {
      result = (XmlQueryExpression *)new XmlQueryExpression((XmlQueryExpression const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlQueryExpression,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlQueryExpression(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlQueryExpression__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryExpression, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlQueryExpression__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlQueryExpression'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlQueryExpression(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlQueryExpression self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlQueryExpression" "', argument " "1"" of type '" "XmlQueryExpression *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_getQuery(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlQueryExpression_getQuery self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_getQuery" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  {
    try {
      result = (std::string *) &((XmlQueryExpression const *)arg1)->getQuery();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_getQueryPlan(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::string result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlQueryExpression_getQueryPlan self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_getQueryPlan" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  {
    try {
      result = ((XmlQueryExpression const *)arg1)->getQueryPlan();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_isUpdateExpression(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlQueryExpression_isUpdateExpression self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_isUpdateExpression" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  {
    try {
      result = (bool)((XmlQueryExpression const *)arg1)->isUpdateExpression();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_execute__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  XmlQueryContext *arg2 = 0 ;
  u_int32_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlQueryExpression_execute self context flags ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_execute" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  arg2 = reinterpret_cast< XmlQueryContext * >(argp2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "u_int32_t""'");
  } 
  arg3 = static_cast< u_int32_t >(val3);
  {
    try {
      result = (XmlResults *)XmlQueryExpression_execute__SWIG_0((XmlQueryExpression const *)arg1,*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_execute__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  XmlQueryContext *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlQueryExpression_execute self context ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_execute" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlQueryContext &""'"); 
  }
  arg2 = reinterpret_cast< XmlQueryContext * >(argp2);
  {
    try {
      result = (XmlResults *)XmlQueryExpression_execute__SWIG_0((XmlQueryExpression const *)arg1,*arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_execute__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  XmlValue *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlQueryExpression_execute self contextItem context flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_execute" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  arg2 = reinterpret_cast< XmlValue * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlQueryExpression_execute" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      result = (XmlResults *)XmlQueryExpression_execute__SWIG_2((XmlQueryExpression const *)arg1,(XmlValue const &)*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_execute__SWIG_3(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  XmlValue *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlQueryExpression_execute self contextItem context ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_execute" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlValue const &""'"); 
  }
  arg2 = reinterpret_cast< XmlValue * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    try {
      result = (XmlResults *)XmlQueryExpression_execute__SWIG_2((XmlQueryExpression const *)arg1,(XmlValue const &)*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_execute__SWIG_4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  u_int32_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlQueryExpression_execute self txn context flags ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_execute" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlQueryExpression_execute" "', argument " "4"" of type '" "u_int32_t""'");
  } 
  arg4 = static_cast< u_int32_t >(val4);
  {
    try {
      result = (XmlResults *)XmlQueryExpression_execute__SWIG_4((XmlQueryExpression const *)arg1,*arg2,*arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_execute__SWIG_5(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlQueryContext *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlQueryExpression_execute self txn context ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_execute" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlQueryContext &""'"); 
  }
  arg3 = reinterpret_cast< XmlQueryContext * >(argp3);
  {
    try {
      result = (XmlResults *)XmlQueryExpression_execute__SWIG_4((XmlQueryExpression const *)arg1,*arg2,*arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_execute__SWIG_6(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlValue *arg3 = 0 ;
  XmlQueryContext *arg4 = 0 ;
  u_int32_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:XmlQueryExpression_execute self txn contextItem context flags ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_execute" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlValue const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlValue const &""'"); 
  }
  arg3 = reinterpret_cast< XmlValue * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlQueryExpression_execute" "', argument " "4"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "4"" of type '" "XmlQueryContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlQueryContext * >(argp4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlQueryExpression_execute" "', argument " "5"" of type '" "u_int32_t""'");
  } 
  arg5 = static_cast< u_int32_t >(val5);
  {
    try {
      result = (XmlResults *)XmlQueryExpression_execute__SWIG_6((XmlQueryExpression const *)arg1,*arg2,(XmlValue const &)*arg3,*arg4,arg5);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_execute__SWIG_7(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlQueryExpression *arg1 = (XmlQueryExpression *) 0 ;
  XmlTransaction *arg2 = 0 ;
  XmlValue *arg3 = 0 ;
  XmlQueryContext *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  XmlResults *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlQueryExpression_execute self txn contextItem context ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlQueryExpression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlQueryExpression_execute" "', argument " "1"" of type '" "XmlQueryExpression const *""'"); 
  }
  arg1 = reinterpret_cast< XmlQueryExpression * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "2"" of type '" "XmlTransaction &""'"); 
  }
  arg2 = reinterpret_cast< XmlTransaction * >(argp2);
  res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_XmlValue,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlValue const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "3"" of type '" "XmlValue const &""'"); 
  }
  arg3 = reinterpret_cast< XmlValue * >(argp3);
  res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_XmlQueryContext,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "XmlQueryExpression_execute" "', argument " "4"" of type '" "XmlQueryContext &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "XmlQueryExpression_execute" "', argument " "4"" of type '" "XmlQueryContext &""'"); 
  }
  arg4 = reinterpret_cast< XmlQueryContext * >(argp4);
  {
    try {
      result = (XmlResults *)XmlQueryExpression_execute__SWIG_6((XmlQueryExpression const *)arg1,*arg2,(XmlValue const &)*arg3,*arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlResults,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlQueryExpression_execute(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryExpression, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_XmlQueryExpression_execute__SWIG_1(clientData, interp, objc, argv - 1);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryExpression, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_XmlQueryExpression_execute__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryExpression, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlValue, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlQueryExpression_execute__SWIG_3(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryExpression, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_XmlQueryExpression_execute__SWIG_5(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryExpression, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlQueryExpression_execute__SWIG_4(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryExpression, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlValue, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_XmlQueryExpression_execute__SWIG_2(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryExpression, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlValue, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_XmlQueryExpression_execute__SWIG_7(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlQueryExpression, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlTransaction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_XmlValue, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_XmlQueryContext, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_XmlQueryExpression_execute__SWIG_6(clientData, interp, objc, argv - 1);
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlQueryExpression_execute'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlQueryExpression(void *obj) {
XmlQueryExpression *arg1 = (XmlQueryExpression *) obj;
delete arg1;
}
static swig_method swig_XmlQueryExpression_methods[] = {
    {"getQuery", _wrap_XmlQueryExpression_getQuery}, 
    {"getQueryPlan", _wrap_XmlQueryExpression_getQueryPlan}, 
    {"isUpdateExpression", _wrap_XmlQueryExpression_isUpdateExpression}, 
    {"execute", _wrap_XmlQueryExpression_execute}, 
    {0,0}
};
static swig_attribute swig_XmlQueryExpression_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlQueryExpression_bases[] = {0};
static const char * swig_XmlQueryExpression_base_names[] = {0};
static swig_class _wrap_class_XmlQueryExpression = { "XmlQueryExpression", &SWIGTYPE_p_XmlQueryExpression,_wrap_new_XmlQueryExpression, swig_delete_XmlQueryExpression, swig_XmlQueryExpression_methods, swig_XmlQueryExpression_attributes, swig_XmlQueryExpression_bases,swig_XmlQueryExpression_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_XmlInputStream(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlInputStream *arg1 = (XmlInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlInputStream self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlInputStream, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlInputStream" "', argument " "1"" of type '" "XmlInputStream *""'"); 
  }
  arg1 = reinterpret_cast< XmlInputStream * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlInputStream_curPos(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlInputStream *arg1 = (XmlInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlInputStream_curPos self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlInputStream, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlInputStream_curPos" "', argument " "1"" of type '" "XmlInputStream const *""'"); 
  }
  arg1 = reinterpret_cast< XmlInputStream * >(argp1);
  {
    try {
      result = (unsigned int)((XmlInputStream const *)arg1)->curPos();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlInputStream_readBytes(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlInputStream *arg1 = (XmlInputStream *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlInputStream_readBytes self toFill maxToRead ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlInputStream, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlInputStream_readBytes" "', argument " "1"" of type '" "XmlInputStream *""'"); 
  }
  arg1 = reinterpret_cast< XmlInputStream * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XmlInputStream_readBytes" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlInputStream_readBytes" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      result = (unsigned int)(arg1)->readBytes(arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlInputStream_freeMemory(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlInputStream *arg1 = (XmlInputStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlInputStream_freeMemory self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlInputStream, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlInputStream_freeMemory" "', argument " "1"" of type '" "XmlInputStream *""'"); 
  }
  arg1 = reinterpret_cast< XmlInputStream * >(argp1);
  {
    try {
      XmlInputStream_freeMemory(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlInputStream(void *obj) {
XmlInputStream *arg1 = (XmlInputStream *) obj;
delete arg1;
}
static swig_method swig_XmlInputStream_methods[] = {
    {"curPos", _wrap_XmlInputStream_curPos}, 
    {"readBytes", _wrap_XmlInputStream_readBytes}, 
    {"freeMemory", _wrap_XmlInputStream_freeMemory}, 
    {0,0}
};
static swig_attribute swig_XmlInputStream_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlInputStream_bases[] = {0};
static const char * swig_XmlInputStream_base_names[] = {0};
static swig_class _wrap_class_XmlInputStream = { "XmlInputStream", &SWIGTYPE_p_XmlInputStream,0, swig_delete_XmlInputStream, swig_XmlInputStream_methods, swig_XmlInputStream_attributes, swig_XmlInputStream_bases,swig_XmlInputStream_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlContainerConfig__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlContainerConfig ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlContainerConfig *)new XmlContainerConfig();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainerConfig,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlContainerConfig__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  u_int32_t arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  XmlContainerConfig *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlContainerConfig flags ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_XmlContainerConfig" "', argument " "1"" of type '" "u_int32_t""'");
  } 
  arg1 = static_cast< u_int32_t >(val1);
  {
    try {
      result = (XmlContainerConfig *)new XmlContainerConfig(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainerConfig,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlContainerConfig(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlContainerConfig self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlContainerConfig" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlContainerConfig__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlContainerConfig *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlContainerConfig o ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlContainerConfig,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlContainerConfig" "', argument " "1"" of type '" "XmlContainerConfig const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlContainerConfig" "', argument " "1"" of type '" "XmlContainerConfig const &""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (XmlContainerConfig *)new XmlContainerConfig((XmlContainerConfig const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlContainerConfig,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlContainerConfig(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlContainerConfig__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlContainerConfig, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlContainerConfig__SWIG_2(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_XmlContainerConfig__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlContainerConfig'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getMode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getMode self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getMode" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (int)((XmlContainerConfig const *)arg1)->getMode();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setMode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setMode self mode ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setMode" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setMode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->setMode(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getContainerType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlContainer::ContainerType result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getContainerType self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getContainerType" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (enum XmlContainer::ContainerType)((XmlContainerConfig const *)arg1)->getContainerType();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setContainerType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  enum XmlContainer::ContainerType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setContainerType self type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setContainerType" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setContainerType" "', argument " "2"" of type '" "enum XmlContainer::ContainerType""'");
  } 
  arg2 = static_cast< enum XmlContainer::ContainerType >(val2);
  {
    try {
      (arg1)->setContainerType(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getPageSize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  u_int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getPageSize self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getPageSize" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = ((XmlContainerConfig const *)arg1)->getPageSize();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setPageSize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  u_int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setPageSize self pageSize ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setPageSize" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setPageSize" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      (arg1)->setPageSize(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getSequenceIncrement(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  u_int32_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getSequenceIncrement self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getSequenceIncrement" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = ((XmlContainerConfig const *)arg1)->getSequenceIncrement();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setSequenceIncrement(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  u_int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setSequenceIncrement self incr ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setSequenceIncrement" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setSequenceIncrement" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      (arg1)->setSequenceIncrement(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setIndexNodes(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  enum XmlContainerConfig::ConfigState arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setIndexNodes self state ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setIndexNodes" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setIndexNodes" "', argument " "2"" of type '" "enum XmlContainerConfig::ConfigState""'");
  } 
  arg2 = static_cast< enum XmlContainerConfig::ConfigState >(val2);
  {
    try {
      (arg1)->setIndexNodes(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getIndexNodes(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlContainerConfig::ConfigState result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getIndexNodes self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getIndexNodes" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (enum XmlContainerConfig::ConfigState)((XmlContainerConfig const *)arg1)->getIndexNodes();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setChecksum(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setChecksum self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setChecksum" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setChecksum" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setChecksum(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getChecksum(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getChecksum self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getChecksum" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getChecksum();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setEncrypted(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setEncrypted self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setEncrypted" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setEncrypted" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setEncrypted(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getEncrypted(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getEncrypted self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getEncrypted" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getEncrypted();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setAllowValidation(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setAllowValidation self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setAllowValidation" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setAllowValidation" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setAllowValidation(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getAllowValidation(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getAllowValidation self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getAllowValidation" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getAllowValidation();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setStatistics(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  enum XmlContainerConfig::ConfigState arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setStatistics self state ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setStatistics" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setStatistics" "', argument " "2"" of type '" "enum XmlContainerConfig::ConfigState""'");
  } 
  arg2 = static_cast< enum XmlContainerConfig::ConfigState >(val2);
  {
    try {
      (arg1)->setStatistics(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getStatistics(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlContainerConfig::ConfigState result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getStatistics self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getStatistics" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (enum XmlContainerConfig::ConfigState)((XmlContainerConfig const *)arg1)->getStatistics();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setTransactional(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setTransactional self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setTransactional" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setTransactional" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setTransactional(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getTransactional(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getTransactional self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getTransactional" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getTransactional();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setAllowCreate(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setAllowCreate self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setAllowCreate" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setAllowCreate" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setAllowCreate(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getAllowCreate(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getAllowCreate self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getAllowCreate" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getAllowCreate();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setExclusiveCreate(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setExclusiveCreate self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setExclusiveCreate" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setExclusiveCreate" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setExclusiveCreate(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getExclusiveCreate(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getExclusiveCreate self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getExclusiveCreate" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getExclusiveCreate();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setNoMMap(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setNoMMap self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setNoMMap" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setNoMMap" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setNoMMap(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getNoMMap(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getNoMMap self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getNoMMap" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getNoMMap();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setReadOnly(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setReadOnly self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setReadOnly" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setReadOnly" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setReadOnly(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getReadOnly(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getReadOnly self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getReadOnly" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getReadOnly();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setMultiversion(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setMultiversion self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setMultiversion" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setMultiversion" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setMultiversion(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getMultiversion(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getMultiversion self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getMultiversion" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getMultiversion();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setReadUncommitted(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setReadUncommitted self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setReadUncommitted" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setReadUncommitted" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setReadUncommitted(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getReadUncommitted(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getReadUncommitted self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getReadUncommitted" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getReadUncommitted();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setThreaded(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setThreaded self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setThreaded" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setThreaded" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setThreaded(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getThreaded(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getThreaded self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getThreaded" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getThreaded();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_setTransactionNotDurable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlContainerConfig_setTransactionNotDurable self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_setTransactionNotDurable" "', argument " "1"" of type '" "XmlContainerConfig *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlContainerConfig_setTransactionNotDurable" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setTransactionNotDurable(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlContainerConfig_getTransactionNotDurable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlContainerConfig *arg1 = (XmlContainerConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlContainerConfig_getTransactionNotDurable self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlContainerConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlContainerConfig_getTransactionNotDurable" "', argument " "1"" of type '" "XmlContainerConfig const *""'"); 
  }
  arg1 = reinterpret_cast< XmlContainerConfig * >(argp1);
  {
    try {
      result = (bool)((XmlContainerConfig const *)arg1)->getTransactionNotDurable();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlContainerConfig(void *obj) {
XmlContainerConfig *arg1 = (XmlContainerConfig *) obj;
delete arg1;
}
static swig_method swig_XmlContainerConfig_methods[] = {
    {"getMode", _wrap_XmlContainerConfig_getMode}, 
    {"setMode", _wrap_XmlContainerConfig_setMode}, 
    {"getContainerType", _wrap_XmlContainerConfig_getContainerType}, 
    {"setContainerType", _wrap_XmlContainerConfig_setContainerType}, 
    {"getPageSize", _wrap_XmlContainerConfig_getPageSize}, 
    {"setPageSize", _wrap_XmlContainerConfig_setPageSize}, 
    {"getSequenceIncrement", _wrap_XmlContainerConfig_getSequenceIncrement}, 
    {"setSequenceIncrement", _wrap_XmlContainerConfig_setSequenceIncrement}, 
    {"setIndexNodes", _wrap_XmlContainerConfig_setIndexNodes}, 
    {"getIndexNodes", _wrap_XmlContainerConfig_getIndexNodes}, 
    {"setChecksum", _wrap_XmlContainerConfig_setChecksum}, 
    {"getChecksum", _wrap_XmlContainerConfig_getChecksum}, 
    {"setEncrypted", _wrap_XmlContainerConfig_setEncrypted}, 
    {"getEncrypted", _wrap_XmlContainerConfig_getEncrypted}, 
    {"setAllowValidation", _wrap_XmlContainerConfig_setAllowValidation}, 
    {"getAllowValidation", _wrap_XmlContainerConfig_getAllowValidation}, 
    {"setStatistics", _wrap_XmlContainerConfig_setStatistics}, 
    {"getStatistics", _wrap_XmlContainerConfig_getStatistics}, 
    {"setTransactional", _wrap_XmlContainerConfig_setTransactional}, 
    {"getTransactional", _wrap_XmlContainerConfig_getTransactional}, 
    {"setAllowCreate", _wrap_XmlContainerConfig_setAllowCreate}, 
    {"getAllowCreate", _wrap_XmlContainerConfig_getAllowCreate}, 
    {"setExclusiveCreate", _wrap_XmlContainerConfig_setExclusiveCreate}, 
    {"getExclusiveCreate", _wrap_XmlContainerConfig_getExclusiveCreate}, 
    {"setNoMMap", _wrap_XmlContainerConfig_setNoMMap}, 
    {"getNoMMap", _wrap_XmlContainerConfig_getNoMMap}, 
    {"setReadOnly", _wrap_XmlContainerConfig_setReadOnly}, 
    {"getReadOnly", _wrap_XmlContainerConfig_getReadOnly}, 
    {"setMultiversion", _wrap_XmlContainerConfig_setMultiversion}, 
    {"getMultiversion", _wrap_XmlContainerConfig_getMultiversion}, 
    {"setReadUncommitted", _wrap_XmlContainerConfig_setReadUncommitted}, 
    {"getReadUncommitted", _wrap_XmlContainerConfig_getReadUncommitted}, 
    {"setThreaded", _wrap_XmlContainerConfig_setThreaded}, 
    {"getThreaded", _wrap_XmlContainerConfig_getThreaded}, 
    {"setTransactionNotDurable", _wrap_XmlContainerConfig_setTransactionNotDurable}, 
    {"getTransactionNotDurable", _wrap_XmlContainerConfig_getTransactionNotDurable}, 
    {0,0}
};
static swig_attribute swig_XmlContainerConfig_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlContainerConfig_bases[] = {0};
static const char * swig_XmlContainerConfig_base_names[] = {0};
static swig_class _wrap_class_XmlContainerConfig = { "XmlContainerConfig", &SWIGTYPE_p_XmlContainerConfig,_wrap_new_XmlContainerConfig, swig_delete_XmlContainerConfig, swig_XmlContainerConfig_methods, swig_XmlContainerConfig_attributes, swig_XmlContainerConfig_bases,swig_XmlContainerConfig_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_XmlTransaction(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlTransaction *arg1 = (XmlTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlTransaction self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlTransaction, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlTransaction" "', argument " "1"" of type '" "XmlTransaction *""'"); 
  }
  arg1 = reinterpret_cast< XmlTransaction * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlTransaction__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlTransaction *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_XmlTransaction ") == TCL_ERROR) SWIG_fail;
  {
    try {
      result = (XmlTransaction *)new XmlTransaction();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlTransaction,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlTransaction__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlTransaction *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlTransaction *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlTransaction XmlTransaction const & ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlTransaction,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlTransaction" "', argument " "1"" of type '" "XmlTransaction const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlTransaction" "', argument " "1"" of type '" "XmlTransaction const &""'"); 
  }
  arg1 = reinterpret_cast< XmlTransaction * >(argp1);
  {
    try {
      result = (XmlTransaction *)new XmlTransaction((XmlTransaction const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlTransaction,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlTransaction(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 0) {
    return _wrap_new_XmlTransaction__SWIG_0(clientData, interp, objc, argv - 1);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlTransaction, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_XmlTransaction__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlTransaction'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlTransaction_abort(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlTransaction *arg1 = (XmlTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlTransaction_abort self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlTransaction_abort" "', argument " "1"" of type '" "XmlTransaction *""'"); 
  }
  arg1 = reinterpret_cast< XmlTransaction * >(argp1);
  {
    try {
      (arg1)->abort();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlTransaction_commit__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlTransaction *arg1 = (XmlTransaction *) 0 ;
  u_int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlTransaction_commit self flags ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlTransaction_commit" "', argument " "1"" of type '" "XmlTransaction *""'"); 
  }
  arg1 = reinterpret_cast< XmlTransaction * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlTransaction_commit" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      (arg1)->commit(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlTransaction_createChild__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlTransaction *arg1 = (XmlTransaction *) 0 ;
  u_int32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  XmlTransaction *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlTransaction_createChild self flags ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlTransaction_createChild" "', argument " "1"" of type '" "XmlTransaction *""'"); 
  }
  arg1 = reinterpret_cast< XmlTransaction * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlTransaction_createChild" "', argument " "2"" of type '" "u_int32_t""'");
  } 
  arg2 = static_cast< u_int32_t >(val2);
  {
    try {
      result = (XmlTransaction *)XmlTransaction_createChild__SWIG_0(arg1,arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlTransaction,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlTransaction_createChild__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlTransaction *arg1 = (XmlTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  XmlTransaction *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlTransaction_createChild self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlTransaction_createChild" "', argument " "1"" of type '" "XmlTransaction *""'"); 
  }
  arg1 = reinterpret_cast< XmlTransaction * >(argp1);
  {
    try {
      result = (XmlTransaction *)XmlTransaction_createChild__SWIG_0(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlTransaction,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlTransaction_createChild(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlTransaction, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_XmlTransaction_createChild__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlTransaction, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_XmlTransaction_createChild__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlTransaction_createChild'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlTransaction_commit__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlTransaction *arg1 = (XmlTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlTransaction_commit self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlTransaction_commit" "', argument " "1"" of type '" "XmlTransaction *""'"); 
  }
  arg1 = reinterpret_cast< XmlTransaction * >(argp1);
  {
    try {
      XmlTransaction_commit__SWIG_1(arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlTransaction_commit(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlTransaction, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_XmlTransaction_commit__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlTransaction, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_XmlTransaction_commit__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlTransaction_commit'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlTransaction_getDB_TXN(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlTransaction *arg1 = (XmlTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  DB_TXN *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlTransaction_getDB_TXN self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlTransaction_getDB_TXN" "', argument " "1"" of type '" "XmlTransaction *""'"); 
  }
  arg1 = reinterpret_cast< XmlTransaction * >(argp1);
  {
    try {
      result = (DB_TXN *)(arg1)->getDB_TXN();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_DB_TXN,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlTransaction(void *obj) {
XmlTransaction *arg1 = (XmlTransaction *) obj;
delete arg1;
}
static swig_method swig_XmlTransaction_methods[] = {
    {"abort", _wrap_XmlTransaction_abort}, 
    {"createChild", _wrap_XmlTransaction_createChild}, 
    {"commit", _wrap_XmlTransaction_commit}, 
    {"getDB_TXN", _wrap_XmlTransaction_getDB_TXN}, 
    {0,0}
};
static swig_attribute swig_XmlTransaction_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlTransaction_bases[] = {0};
static const char * swig_XmlTransaction_base_names[] = {0};
static swig_class _wrap_class_XmlTransaction = { "XmlTransaction", &SWIGTYPE_p_XmlTransaction,_wrap_new_XmlTransaction, swig_delete_XmlTransaction, swig_XmlTransaction_methods, swig_XmlTransaction_attributes, swig_XmlTransaction_bases,swig_XmlTransaction_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlStatistics(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlStatistics *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  XmlStatistics *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:new_XmlStatistics XmlStatistics const & ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlStatistics,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlStatistics" "', argument " "1"" of type '" "XmlStatistics const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlStatistics" "', argument " "1"" of type '" "XmlStatistics const &""'"); 
  }
  arg1 = reinterpret_cast< XmlStatistics * >(argp1);
  {
    try {
      result = (XmlStatistics *)new XmlStatistics((XmlStatistics const &)*arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlStatistics,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlStatistics(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlStatistics *arg1 = (XmlStatistics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlStatistics self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlStatistics, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlStatistics" "', argument " "1"" of type '" "XmlStatistics *""'"); 
  }
  arg1 = reinterpret_cast< XmlStatistics * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlStatistics_getNumberOfIndexedKeys(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlStatistics *arg1 = (XmlStatistics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlStatistics_getNumberOfIndexedKeys self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlStatistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlStatistics_getNumberOfIndexedKeys" "', argument " "1"" of type '" "XmlStatistics const *""'"); 
  }
  arg1 = reinterpret_cast< XmlStatistics * >(argp1);
  {
    try {
      result = (double)((XmlStatistics const *)arg1)->getNumberOfIndexedKeys();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_double(static_cast< double >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlStatistics_getNumberOfUniqueKeys(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlStatistics *arg1 = (XmlStatistics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlStatistics_getNumberOfUniqueKeys self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlStatistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlStatistics_getNumberOfUniqueKeys" "', argument " "1"" of type '" "XmlStatistics const *""'"); 
  }
  arg1 = reinterpret_cast< XmlStatistics * >(argp1);
  {
    try {
      result = (double)((XmlStatistics const *)arg1)->getNumberOfUniqueKeys();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_double(static_cast< double >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlStatistics_getSumKeyValueSize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlStatistics *arg1 = (XmlStatistics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlStatistics_getSumKeyValueSize self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlStatistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlStatistics_getSumKeyValueSize" "', argument " "1"" of type '" "XmlStatistics const *""'"); 
  }
  arg1 = reinterpret_cast< XmlStatistics * >(argp1);
  {
    try {
      result = (double)((XmlStatistics const *)arg1)->getSumKeyValueSize();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_double(static_cast< double >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlStatistics(void *obj) {
XmlStatistics *arg1 = (XmlStatistics *) obj;
delete arg1;
}
static swig_method swig_XmlStatistics_methods[] = {
    {"getNumberOfIndexedKeys", _wrap_XmlStatistics_getNumberOfIndexedKeys}, 
    {"getNumberOfUniqueKeys", _wrap_XmlStatistics_getNumberOfUniqueKeys}, 
    {"getSumKeyValueSize", _wrap_XmlStatistics_getSumKeyValueSize}, 
    {0,0}
};
static swig_attribute swig_XmlStatistics_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlStatistics_bases[] = {0};
static const char * swig_XmlStatistics_base_names[] = {0};
static swig_class _wrap_class_XmlStatistics = { "XmlStatistics", &SWIGTYPE_p_XmlStatistics,_wrap_new_XmlStatistics, swig_delete_XmlStatistics, swig_XmlStatistics_methods, swig_XmlStatistics_attributes, swig_XmlStatistics_bases,swig_XmlStatistics_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_XmlEventReader(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlEventReader self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlEventReader" "', argument " "1"" of type '" "XmlEventReader *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_close(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_close self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_close" "', argument " "1"" of type '" "XmlEventReader *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      (arg1)->close();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_setReportEntityInfo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlEventReader_setReportEntityInfo self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_setReportEntityInfo" "', argument " "1"" of type '" "XmlEventReader *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlEventReader_setReportEntityInfo" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setReportEntityInfo(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getReportEntityInfo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getReportEntityInfo self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getReportEntityInfo" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->getReportEntityInfo();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_setExpandEntities(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlEventReader_setExpandEntities self value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_setExpandEntities" "', argument " "1"" of type '" "XmlEventReader *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  ecode2 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlEventReader_setExpandEntities" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setExpandEntities(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getExpandEntities(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getExpandEntities self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getExpandEntities" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->getExpandEntities();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_next(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlEventReader::XmlEventType result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_next self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_next" "', argument " "1"" of type '" "XmlEventReader *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (enum XmlEventReader::XmlEventType)(arg1)->next();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_nextTag(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlEventReader::XmlEventType result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_nextTag self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_nextTag" "', argument " "1"" of type '" "XmlEventReader *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (enum XmlEventReader::XmlEventType)(arg1)->nextTag();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_hasNext(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_hasNext self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_hasNext" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->hasNext();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getEventType(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum XmlEventReader::XmlEventType result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getEventType self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getEventType" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (enum XmlEventReader::XmlEventType)((XmlEventReader const *)arg1)->getEventType();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getNamespaceURI(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getNamespaceURI self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getNamespaceURI" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (unsigned char *)((XmlEventReader const *)arg1)->getNamespaceURI();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getLocalName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getLocalName self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getLocalName" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (unsigned char *)((XmlEventReader const *)arg1)->getLocalName();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getPrefix(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getPrefix self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getPrefix" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (unsigned char *)((XmlEventReader const *)arg1)->getPrefix();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getValue self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getValue" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (unsigned char *)XmlEventReader_getValue((XmlEventReader const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getValueLength(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getValueLength self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getValueLength" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = XmlEventReader_getValueLength((XmlEventReader const *)arg1);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_size_t(static_cast< size_t >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getAttributeCount(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getAttributeCount self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getAttributeCount" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (int)((XmlEventReader const *)arg1)->getAttributeCount();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_isAttributeSpecified(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlEventReader_isAttributeSpecified self index ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_isAttributeSpecified" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlEventReader_isAttributeSpecified" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->isAttributeSpecified(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getAttributeLocalName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlEventReader_getAttributeLocalName self index ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getAttributeLocalName" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlEventReader_getAttributeLocalName" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (unsigned char *)((XmlEventReader const *)arg1)->getAttributeLocalName(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getAttributeNamespaceURI(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlEventReader_getAttributeNamespaceURI self index ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getAttributeNamespaceURI" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlEventReader_getAttributeNamespaceURI" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (unsigned char *)((XmlEventReader const *)arg1)->getAttributeNamespaceURI(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getAttributePrefix(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlEventReader_getAttributePrefix self index ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getAttributePrefix" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlEventReader_getAttributePrefix" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (unsigned char *)((XmlEventReader const *)arg1)->getAttributePrefix(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getAttributeValue(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlEventReader_getAttributeValue self index ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getAttributeValue" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlEventReader_getAttributeValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (unsigned char *)((XmlEventReader const *)arg1)->getAttributeValue(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getEncoding(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getEncoding self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getEncoding" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (unsigned char *)((XmlEventReader const *)arg1)->getEncoding();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getVersion(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getVersion self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getVersion" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (unsigned char *)((XmlEventReader const *)arg1)->getVersion();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_getSystemId(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_getSystemId self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_getSystemId" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (unsigned char *)((XmlEventReader const *)arg1)->getSystemId();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_isStandalone(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_isStandalone self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_isStandalone" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->isStandalone();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_standaloneSet(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_standaloneSet self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_standaloneSet" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->standaloneSet();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_encodingSet(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_encodingSet self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_encodingSet" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->encodingSet();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_hasEntityEscapeInfo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_hasEntityEscapeInfo self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_hasEntityEscapeInfo" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->hasEntityEscapeInfo();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_needsEntityEscape__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlEventReader_needsEntityEscape self index ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_needsEntityEscape" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlEventReader_needsEntityEscape" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->needsEntityEscape(arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_needsEntityEscape__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_needsEntityEscape self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_needsEntityEscape" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->needsEntityEscape();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_needsEntityEscape(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlEventReader, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_XmlEventReader_needsEntityEscape__SWIG_1(clientData, interp, objc, argv - 1);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlEventReader, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_XmlEventReader_needsEntityEscape__SWIG_0(clientData, interp, objc, argv - 1);
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'XmlEventReader_needsEntityEscape'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_hasEmptyElementInfo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_hasEmptyElementInfo self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_hasEmptyElementInfo" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->hasEmptyElementInfo();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_isEmptyElement(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_isEmptyElement self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_isEmptyElement" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->isEmptyElement();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReader_isWhiteSpace(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = (XmlEventReader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReader_isWhiteSpace self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReader_isWhiteSpace" "', argument " "1"" of type '" "XmlEventReader const *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  {
    try {
      result = (bool)((XmlEventReader const *)arg1)->isWhiteSpace();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp,SWIG_From_bool(static_cast< bool >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlEventReader(void *obj) {
XmlEventReader *arg1 = (XmlEventReader *) obj;
delete arg1;
}
static swig_method swig_XmlEventReader_methods[] = {
    {"close", _wrap_XmlEventReader_close}, 
    {"setReportEntityInfo", _wrap_XmlEventReader_setReportEntityInfo}, 
    {"getReportEntityInfo", _wrap_XmlEventReader_getReportEntityInfo}, 
    {"setExpandEntities", _wrap_XmlEventReader_setExpandEntities}, 
    {"getExpandEntities", _wrap_XmlEventReader_getExpandEntities}, 
    {"next", _wrap_XmlEventReader_next}, 
    {"nextTag", _wrap_XmlEventReader_nextTag}, 
    {"hasNext", _wrap_XmlEventReader_hasNext}, 
    {"getEventType", _wrap_XmlEventReader_getEventType}, 
    {"getNamespaceURI", _wrap_XmlEventReader_getNamespaceURI}, 
    {"getLocalName", _wrap_XmlEventReader_getLocalName}, 
    {"getPrefix", _wrap_XmlEventReader_getPrefix}, 
    {"getValue", _wrap_XmlEventReader_getValue}, 
    {"getValueLength", _wrap_XmlEventReader_getValueLength}, 
    {"getAttributeCount", _wrap_XmlEventReader_getAttributeCount}, 
    {"isAttributeSpecified", _wrap_XmlEventReader_isAttributeSpecified}, 
    {"getAttributeLocalName", _wrap_XmlEventReader_getAttributeLocalName}, 
    {"getAttributeNamespaceURI", _wrap_XmlEventReader_getAttributeNamespaceURI}, 
    {"getAttributePrefix", _wrap_XmlEventReader_getAttributePrefix}, 
    {"getAttributeValue", _wrap_XmlEventReader_getAttributeValue}, 
    {"getEncoding", _wrap_XmlEventReader_getEncoding}, 
    {"getVersion", _wrap_XmlEventReader_getVersion}, 
    {"getSystemId", _wrap_XmlEventReader_getSystemId}, 
    {"isStandalone", _wrap_XmlEventReader_isStandalone}, 
    {"standaloneSet", _wrap_XmlEventReader_standaloneSet}, 
    {"encodingSet", _wrap_XmlEventReader_encodingSet}, 
    {"hasEntityEscapeInfo", _wrap_XmlEventReader_hasEntityEscapeInfo}, 
    {"needsEntityEscape", _wrap_XmlEventReader_needsEntityEscape}, 
    {"hasEmptyElementInfo", _wrap_XmlEventReader_hasEmptyElementInfo}, 
    {"isEmptyElement", _wrap_XmlEventReader_isEmptyElement}, 
    {"isWhiteSpace", _wrap_XmlEventReader_isWhiteSpace}, 
    {0,0}
};
static swig_attribute swig_XmlEventReader_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlEventReader_bases[] = {0};
static const char * swig_XmlEventReader_base_names[] = {0};
static swig_class _wrap_class_XmlEventReader = { "XmlEventReader", &SWIGTYPE_p_XmlEventReader,0, swig_delete_XmlEventReader, swig_XmlEventReader_methods, swig_XmlEventReader_attributes, swig_XmlEventReader_bases,swig_XmlEventReader_base_names, &swig_module };
SWIGINTERN int
_wrap_delete_XmlEventWriter(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlEventWriter self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlEventWriter" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_close(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventWriter_close self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_close" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    try {
      (arg1)->close();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_writeAttribute(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  unsigned char *arg4 = (unsigned char *) 0 ;
  unsigned char *arg5 = (unsigned char *) 0 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlEventWriter_writeAttribute self localName prefix uri value isSpecified ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_writeAttribute" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[2], &len);
    if (len)
    arg2 = (unsigned char *) str;
    else
    arg2 = 0;
  }
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[3], &len);
    if (len)
    arg3 = (unsigned char *) str;
    else
    arg3 = 0;
  }
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[4], &len);
    if (len)
    arg4 = (unsigned char *) str;
    else
    arg4 = 0;
  }
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[5], &len);
    if (len)
    arg5 = (unsigned char *) str;
    else
    arg5 = 0;
  }
  ecode6 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "XmlEventWriter_writeAttribute" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  {
    try {
      (arg1)->writeAttribute((unsigned char const *)arg2,(unsigned char const *)arg3,(unsigned char const *)arg4,(unsigned char const *)arg5,arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_writeText(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  enum XmlEventReader::XmlEventType arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  size_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlEventWriter_writeText self type text length ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_writeText" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XmlEventWriter_writeText" "', argument " "2"" of type '" "enum XmlEventReader::XmlEventType""'");
  } 
  arg2 = static_cast< enum XmlEventReader::XmlEventType >(val2);
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[3], &len);
    if (len)
    arg3 = (unsigned char *) str;
    else
    arg3 = 0;
  }
  ecode4 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "XmlEventWriter_writeText" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  {
    try {
      (arg1)->writeText(arg2,(unsigned char const *)arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_writeDTD(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  size_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlEventWriter_writeDTD self dtd length ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_writeDTD" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[2], &len);
    if (len)
    arg2 = (unsigned char *) str;
    else
    arg2 = 0;
  }
  ecode3 = SWIG_AsVal_size_t SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlEventWriter_writeDTD" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  {
    try {
      (arg1)->writeDTD((unsigned char const *)arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_writeProcessingInstruction(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlEventWriter_writeProcessingInstruction self target data ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_writeProcessingInstruction" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[2], &len);
    if (len)
    arg2 = (unsigned char *) str;
    else
    arg2 = 0;
  }
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[3], &len);
    if (len)
    arg3 = (unsigned char *) str;
    else
    arg3 = 0;
  }
  {
    try {
      (arg1)->writeProcessingInstruction((unsigned char const *)arg2,(unsigned char const *)arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_writeStartElement(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  unsigned char *arg4 = (unsigned char *) 0 ;
  int arg5 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:XmlEventWriter_writeStartElement self localName prefix uri numAttributes isEmpty ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_writeStartElement" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[2], &len);
    if (len)
    arg2 = (unsigned char *) str;
    else
    arg2 = 0;
  }
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[3], &len);
    if (len)
    arg3 = (unsigned char *) str;
    else
    arg3 = 0;
  }
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[4], &len);
    if (len)
    arg4 = (unsigned char *) str;
    else
    arg4 = 0;
  }
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "XmlEventWriter_writeStartElement" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "XmlEventWriter_writeStartElement" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  {
    try {
      (arg1)->writeStartElement((unsigned char const *)arg2,(unsigned char const *)arg3,(unsigned char const *)arg4,arg5,arg6);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_writeEndElement(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  unsigned char *arg4 = (unsigned char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlEventWriter_writeEndElement self localName prefix uri ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_writeEndElement" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[2], &len);
    if (len)
    arg2 = (unsigned char *) str;
    else
    arg2 = 0;
  }
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[3], &len);
    if (len)
    arg3 = (unsigned char *) str;
    else
    arg3 = 0;
  }
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[4], &len);
    if (len)
    arg4 = (unsigned char *) str;
    else
    arg4 = 0;
  }
  {
    try {
      (arg1)->writeEndElement((unsigned char const *)arg2,(unsigned char const *)arg3,(unsigned char const *)arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_writeStartDocument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  unsigned char *arg4 = (unsigned char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:XmlEventWriter_writeStartDocument self version encoding standalone ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_writeStartDocument" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[2], &len);
    if (len)
    arg2 = (unsigned char *) str;
    else
    arg2 = 0;
  }
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[3], &len);
    if (len)
    arg3 = (unsigned char *) str;
    else
    arg3 = 0;
  }
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[4], &len);
    if (len)
    arg4 = (unsigned char *) str;
    else
    arg4 = 0;
  }
  {
    try {
      (arg1)->writeStartDocument((unsigned char const *)arg2,(unsigned char const *)arg3,(unsigned char const *)arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_writeEndDocument(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventWriter_writeEndDocument self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_writeEndDocument" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    try {
      (arg1)->writeEndDocument();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_writeStartEntity(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:XmlEventWriter_writeStartEntity self name expandedInfoFollows ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_writeStartEntity" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[2], &len);
    if (len)
    arg2 = (unsigned char *) str;
    else
    arg2 = 0;
  }
  ecode3 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "XmlEventWriter_writeStartEntity" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      (arg1)->writeStartEntity((unsigned char const *)arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventWriter_writeEndEntity(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventWriter *arg1 = (XmlEventWriter *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:XmlEventWriter_writeEndEntity self name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventWriter_writeEndEntity" "', argument " "1"" of type '" "XmlEventWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventWriter * >(argp1);
  {
    int len = 0;
    char *str = Tcl_GetStringFromObj(objv[2], &len);
    if (len)
    arg2 = (unsigned char *) str;
    else
    arg2 = 0;
  }
  {
    try {
      (arg1)->writeEndEntity((unsigned char const *)arg2);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlEventWriter(void *obj) {
XmlEventWriter *arg1 = (XmlEventWriter *) obj;
delete arg1;
}
static swig_method swig_XmlEventWriter_methods[] = {
    {"close", _wrap_XmlEventWriter_close}, 
    {"writeAttribute", _wrap_XmlEventWriter_writeAttribute}, 
    {"writeText", _wrap_XmlEventWriter_writeText}, 
    {"writeDTD", _wrap_XmlEventWriter_writeDTD}, 
    {"writeProcessingInstruction", _wrap_XmlEventWriter_writeProcessingInstruction}, 
    {"writeStartElement", _wrap_XmlEventWriter_writeStartElement}, 
    {"writeEndElement", _wrap_XmlEventWriter_writeEndElement}, 
    {"writeStartDocument", _wrap_XmlEventWriter_writeStartDocument}, 
    {"writeEndDocument", _wrap_XmlEventWriter_writeEndDocument}, 
    {"writeStartEntity", _wrap_XmlEventWriter_writeStartEntity}, 
    {"writeEndEntity", _wrap_XmlEventWriter_writeEndEntity}, 
    {0,0}
};
static swig_attribute swig_XmlEventWriter_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlEventWriter_bases[] = {0};
static const char * swig_XmlEventWriter_base_names[] = {0};
static swig_class _wrap_class_XmlEventWriter = { "XmlEventWriter", &SWIGTYPE_p_XmlEventWriter,0, swig_delete_XmlEventWriter, swig_XmlEventWriter_methods, swig_XmlEventWriter_attributes, swig_XmlEventWriter_bases,swig_XmlEventWriter_base_names, &swig_module };
SWIGINTERN int
_wrap_new_XmlEventReaderToWriter__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = 0 ;
  XmlEventWriter *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  XmlEventReaderToWriter *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:new_XmlEventReaderToWriter reader writer ownsReader ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlEventReader,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlEventReaderToWriter" "', argument " "1"" of type '" "XmlEventReader &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlEventReaderToWriter" "', argument " "1"" of type '" "XmlEventReader &""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlEventWriter,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XmlEventReaderToWriter" "', argument " "2"" of type '" "XmlEventWriter &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlEventReaderToWriter" "', argument " "2"" of type '" "XmlEventWriter &""'"); 
  }
  arg2 = reinterpret_cast< XmlEventWriter * >(argp2);
  ecode3 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_XmlEventReaderToWriter" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (XmlEventReaderToWriter *)new XmlEventReaderToWriter(*arg1,*arg2,arg3);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlEventReaderToWriter,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlEventReaderToWriter__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReader *arg1 = 0 ;
  XmlEventWriter *arg2 = 0 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  XmlEventReaderToWriter *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooo:new_XmlEventReaderToWriter reader writer ownsReader ownsWriter ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_XmlEventReader,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XmlEventReaderToWriter" "', argument " "1"" of type '" "XmlEventReader &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlEventReaderToWriter" "', argument " "1"" of type '" "XmlEventReader &""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReader * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_XmlEventWriter,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XmlEventReaderToWriter" "', argument " "2"" of type '" "XmlEventWriter &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XmlEventReaderToWriter" "', argument " "2"" of type '" "XmlEventWriter &""'"); 
  }
  arg2 = reinterpret_cast< XmlEventWriter * >(argp2);
  ecode3 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_XmlEventReaderToWriter" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_XmlEventReaderToWriter" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = (XmlEventReaderToWriter *)new XmlEventReaderToWriter(*arg1,*arg2,arg3,arg4);
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_XmlEventReaderToWriter,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_XmlEventReaderToWriter(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlEventReader, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlEventWriter, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_XmlEventReaderToWriter__SWIG_0(clientData, interp, objc, argv - 1);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_XmlEventReader, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_XmlEventWriter, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_XmlEventReaderToWriter__SWIG_1(clientData, interp, objc, argv - 1);
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'new_XmlEventReaderToWriter'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_XmlEventReaderToWriter(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReaderToWriter *arg1 = (XmlEventReaderToWriter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_XmlEventReaderToWriter self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReaderToWriter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlEventReaderToWriter" "', argument " "1"" of type '" "XmlEventReaderToWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReaderToWriter * >(argp1);
  {
    try {
      delete arg1;
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_XmlEventReaderToWriter_start(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XmlEventReaderToWriter *arg1 = (XmlEventReaderToWriter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:XmlEventReaderToWriter_start self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XmlEventReaderToWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlEventReaderToWriter_start" "', argument " "1"" of type '" "XmlEventReaderToWriter *""'"); 
  }
  arg1 = reinterpret_cast< XmlEventReaderToWriter * >(argp1);
  {
    try {
      (arg1)->start();
    } catch (XmlException &e) {
      Tcl_SetResult(interp, (char *)e.what(), TCL_VOLATILE);
      goto fail;
    }
  }
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_XmlEventReaderToWriter(void *obj) {
XmlEventReaderToWriter *arg1 = (XmlEventReaderToWriter *) obj;
delete arg1;
}
static swig_method swig_XmlEventReaderToWriter_methods[] = {
    {"start", _wrap_XmlEventReaderToWriter_start}, 
    {0,0}
};
static swig_attribute swig_XmlEventReaderToWriter_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XmlEventReaderToWriter_bases[] = {0};
static const char * swig_XmlEventReaderToWriter_base_names[] = {0};
static swig_class _wrap_class_XmlEventReaderToWriter = { "XmlEventReaderToWriter", &SWIGTYPE_p_XmlEventReaderToWriter,_wrap_new_XmlEventReaderToWriter, swig_delete_XmlEventReaderToWriter, swig_XmlEventReaderToWriter_methods, swig_XmlEventReaderToWriter_attributes, swig_XmlEventReaderToWriter_bases,swig_XmlEventReaderToWriter_base_names, &swig_module };

static swig_command_info swig_commands[] = {
    { SWIG_prefix "dbxml_version", (swig_wrapper_func) _wrap_dbxml_version, NULL},
    { SWIG_prefix "setLogLevel", (swig_wrapper_func) _wrap_setLogLevel, NULL},
    { SWIG_prefix "setLogCategory", (swig_wrapper_func) _wrap_setLogCategory, NULL},
    { SWIG_prefix "new_XmlManager", (swig_wrapper_func) _wrap_new_XmlManager, NULL},
    { SWIG_prefix "delete_XmlManager", (swig_wrapper_func) _wrap_delete_XmlManager, NULL},
    { SWIG_prefix "XmlManager_getFlags", (swig_wrapper_func) _wrap_XmlManager_getFlags, NULL},
    { SWIG_prefix "XmlManager_getDefaultContainerConfig", (swig_wrapper_func) _wrap_XmlManager_getDefaultContainerConfig, NULL},
    { SWIG_prefix "XmlManager_setDefaultContainerConfig", (swig_wrapper_func) _wrap_XmlManager_setDefaultContainerConfig, NULL},
    { SWIG_prefix "XmlManager_setDefaultContainerType", (swig_wrapper_func) _wrap_XmlManager_setDefaultContainerType, NULL},
    { SWIG_prefix "XmlManager_getDefaultContainerType", (swig_wrapper_func) _wrap_XmlManager_getDefaultContainerType, NULL},
    { SWIG_prefix "XmlManager_setDefaultPageSize", (swig_wrapper_func) _wrap_XmlManager_setDefaultPageSize, NULL},
    { SWIG_prefix "XmlManager_getDefaultPageSize", (swig_wrapper_func) _wrap_XmlManager_getDefaultPageSize, NULL},
    { SWIG_prefix "XmlManager_setDefaultSequenceIncrement", (swig_wrapper_func) _wrap_XmlManager_setDefaultSequenceIncrement, NULL},
    { SWIG_prefix "XmlManager_getDefaultSequenceIncrement", (swig_wrapper_func) _wrap_XmlManager_getDefaultSequenceIncrement, NULL},
    { SWIG_prefix "XmlManager_getHome", (swig_wrapper_func) _wrap_XmlManager_getHome, NULL},
    { SWIG_prefix "XmlManager_getImplicitTimezone", (swig_wrapper_func) _wrap_XmlManager_getImplicitTimezone, NULL},
    { SWIG_prefix "XmlManager_setImplicitTimezone", (swig_wrapper_func) _wrap_XmlManager_setImplicitTimezone, NULL},
    { SWIG_prefix "XmlManager_existsContainer", (swig_wrapper_func) _wrap_XmlManager_existsContainer, NULL},
    { SWIG_prefix "XmlManager_removeContainer", (swig_wrapper_func) _wrap_XmlManager_removeContainer, NULL},
    { SWIG_prefix "XmlManager_renameContainer", (swig_wrapper_func) _wrap_XmlManager_renameContainer, NULL},
    { SWIG_prefix "XmlManager_upgradeContainer", (swig_wrapper_func) _wrap_XmlManager_upgradeContainer, NULL},
    { SWIG_prefix "XmlManager_setDefaultContainerFlags", (swig_wrapper_func) _wrap_XmlManager_setDefaultContainerFlags, NULL},
    { SWIG_prefix "XmlManager_getDefaultContainerFlags", (swig_wrapper_func) _wrap_XmlManager_getDefaultContainerFlags, NULL},
    { SWIG_prefix "XmlManager_compactContainer", (swig_wrapper_func) _wrap_XmlManager_compactContainer, NULL},
    { SWIG_prefix "XmlManager_truncateContainer", (swig_wrapper_func) _wrap_XmlManager_truncateContainer, NULL},
    { SWIG_prefix "XmlManager_reindexContainer", (swig_wrapper_func) _wrap_XmlManager_reindexContainer, NULL},
    { SWIG_prefix "XmlManager_createStdInInputStream", (swig_wrapper_func) _wrap_XmlManager_createStdInInputStream, NULL},
    { SWIG_prefix "XmlManager_createLocalFileInputStream", (swig_wrapper_func) _wrap_XmlManager_createLocalFileInputStream, NULL},
    { SWIG_prefix "XmlManager_createMemBufInputStream", (swig_wrapper_func) _wrap_XmlManager_createMemBufInputStream, NULL},
    { SWIG_prefix "XmlManager_createURLInputStream", (swig_wrapper_func) _wrap_XmlManager_createURLInputStream, NULL},
    { SWIG_prefix "XmlManager_createContainer", (swig_wrapper_func) _wrap_XmlManager_createContainer, NULL},
    { SWIG_prefix "XmlManager_openContainer", (swig_wrapper_func) _wrap_XmlManager_openContainer, NULL},
    { SWIG_prefix "XmlManager_dumpContainer", (swig_wrapper_func) _wrap_XmlManager_dumpContainer, NULL},
    { SWIG_prefix "XmlManager_loadContainer", (swig_wrapper_func) _wrap_XmlManager_loadContainer, NULL},
    { SWIG_prefix "XmlManager_verifyContainer", (swig_wrapper_func) _wrap_XmlManager_verifyContainer, NULL},
    { SWIG_prefix "XmlManager_createDocument", (swig_wrapper_func) _wrap_XmlManager_createDocument, NULL},
    { SWIG_prefix "XmlManager_createQueryContext", (swig_wrapper_func) _wrap_XmlManager_createQueryContext, NULL},
    { SWIG_prefix "XmlManager_createUpdateContext", (swig_wrapper_func) _wrap_XmlManager_createUpdateContext, NULL},
    { SWIG_prefix "XmlManager_prepare", (swig_wrapper_func) _wrap_XmlManager_prepare, NULL},
    { SWIG_prefix "XmlManager_query", (swig_wrapper_func) _wrap_XmlManager_query, NULL},
    { SWIG_prefix "XmlManager_createResults", (swig_wrapper_func) _wrap_XmlManager_createResults, NULL},
    { SWIG_prefix "XmlManager_createTransaction", (swig_wrapper_func) _wrap_XmlManager_createTransaction, NULL},
    { SWIG_prefix "XmlManager_createIndexLookup", (swig_wrapper_func) _wrap_XmlManager_createIndexLookup, NULL},
    { SWIG_prefix "XmlManager", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlManager},
    { SWIG_prefix "new_XmlIndexLookup", (swig_wrapper_func) _wrap_new_XmlIndexLookup, NULL},
    { SWIG_prefix "delete_XmlIndexLookup", (swig_wrapper_func) _wrap_delete_XmlIndexLookup, NULL},
    { SWIG_prefix "XmlIndexLookup_isNull", (swig_wrapper_func) _wrap_XmlIndexLookup_isNull, NULL},
    { SWIG_prefix "XmlIndexLookup_getIndex", (swig_wrapper_func) _wrap_XmlIndexLookup_getIndex, NULL},
    { SWIG_prefix "XmlIndexLookup_setIndex", (swig_wrapper_func) _wrap_XmlIndexLookup_setIndex, NULL},
    { SWIG_prefix "XmlIndexLookup_getNodeURI", (swig_wrapper_func) _wrap_XmlIndexLookup_getNodeURI, NULL},
    { SWIG_prefix "XmlIndexLookup_getNodeName", (swig_wrapper_func) _wrap_XmlIndexLookup_getNodeName, NULL},
    { SWIG_prefix "XmlIndexLookup_setNode", (swig_wrapper_func) _wrap_XmlIndexLookup_setNode, NULL},
    { SWIG_prefix "XmlIndexLookup_getParentURI", (swig_wrapper_func) _wrap_XmlIndexLookup_getParentURI, NULL},
    { SWIG_prefix "XmlIndexLookup_getParentName", (swig_wrapper_func) _wrap_XmlIndexLookup_getParentName, NULL},
    { SWIG_prefix "XmlIndexLookup_setParent", (swig_wrapper_func) _wrap_XmlIndexLookup_setParent, NULL},
    { SWIG_prefix "XmlIndexLookup_getLowBoundValue", (swig_wrapper_func) _wrap_XmlIndexLookup_getLowBoundValue, NULL},
    { SWIG_prefix "XmlIndexLookup_getLowBoundOperation", (swig_wrapper_func) _wrap_XmlIndexLookup_getLowBoundOperation, NULL},
    { SWIG_prefix "XmlIndexLookup_setLowBound", (swig_wrapper_func) _wrap_XmlIndexLookup_setLowBound, NULL},
    { SWIG_prefix "XmlIndexLookup_getHighBoundValue", (swig_wrapper_func) _wrap_XmlIndexLookup_getHighBoundValue, NULL},
    { SWIG_prefix "XmlIndexLookup_getHighBoundOperation", (swig_wrapper_func) _wrap_XmlIndexLookup_getHighBoundOperation, NULL},
    { SWIG_prefix "XmlIndexLookup_setHighBound", (swig_wrapper_func) _wrap_XmlIndexLookup_setHighBound, NULL},
    { SWIG_prefix "XmlIndexLookup_getContainer", (swig_wrapper_func) _wrap_XmlIndexLookup_getContainer, NULL},
    { SWIG_prefix "XmlIndexLookup_setContainer", (swig_wrapper_func) _wrap_XmlIndexLookup_setContainer, NULL},
    { SWIG_prefix "XmlIndexLookup_execute", (swig_wrapper_func) _wrap_XmlIndexLookup_execute, NULL},
    { SWIG_prefix "XmlIndexLookup", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlIndexLookup},
    { SWIG_prefix "new_XmlContainer", (swig_wrapper_func) _wrap_new_XmlContainer, NULL},
    { SWIG_prefix "delete_XmlContainer", (swig_wrapper_func) _wrap_delete_XmlContainer, NULL},
    { SWIG_prefix "XmlContainer_sync", (swig_wrapper_func) _wrap_XmlContainer_sync, NULL},
    { SWIG_prefix "XmlContainer_close", (swig_wrapper_func) _wrap_XmlContainer_close, NULL},
    { SWIG_prefix "XmlContainer_getFlags", (swig_wrapper_func) _wrap_XmlContainer_getFlags, NULL},
    { SWIG_prefix "XmlContainer_addAlias", (swig_wrapper_func) _wrap_XmlContainer_addAlias, NULL},
    { SWIG_prefix "XmlContainer_removeAlias", (swig_wrapper_func) _wrap_XmlContainer_removeAlias, NULL},
    { SWIG_prefix "XmlContainer_getManager", (swig_wrapper_func) _wrap_XmlContainer_getManager, NULL},
    { SWIG_prefix "XmlContainer_getName", (swig_wrapper_func) _wrap_XmlContainer_getName, NULL},
    { SWIG_prefix "XmlContainer_getContainerType", (swig_wrapper_func) _wrap_XmlContainer_getContainerType, NULL},
    { SWIG_prefix "XmlContainer_getIndexNodes", (swig_wrapper_func) _wrap_XmlContainer_getIndexNodes, NULL},
    { SWIG_prefix "XmlContainer_getPageSize", (swig_wrapper_func) _wrap_XmlContainer_getPageSize, NULL},
    { SWIG_prefix "XmlContainer_getAutoIndexing", (swig_wrapper_func) _wrap_XmlContainer_getAutoIndexing, NULL},
    { SWIG_prefix "XmlContainer_getContainerConfig", (swig_wrapper_func) _wrap_XmlContainer_getContainerConfig, NULL},
    { SWIG_prefix "XmlContainer_setAutoIndexing", (swig_wrapper_func) _wrap_XmlContainer_setAutoIndexing, NULL},
    { SWIG_prefix "XmlContainer_setIndexSpecification", (swig_wrapper_func) _wrap_XmlContainer_setIndexSpecification, NULL},
    { SWIG_prefix "XmlContainer_addIndex", (swig_wrapper_func) _wrap_XmlContainer_addIndex, NULL},
    { SWIG_prefix "XmlContainer_deleteIndex", (swig_wrapper_func) _wrap_XmlContainer_deleteIndex, NULL},
    { SWIG_prefix "XmlContainer_replaceIndex", (swig_wrapper_func) _wrap_XmlContainer_replaceIndex, NULL},
    { SWIG_prefix "XmlContainer_addDefaultIndex", (swig_wrapper_func) _wrap_XmlContainer_addDefaultIndex, NULL},
    { SWIG_prefix "XmlContainer_deleteDefaultIndex", (swig_wrapper_func) _wrap_XmlContainer_deleteDefaultIndex, NULL},
    { SWIG_prefix "XmlContainer_replaceDefaultIndex", (swig_wrapper_func) _wrap_XmlContainer_replaceDefaultIndex, NULL},
    { SWIG_prefix "XmlContainer_putDocument", (swig_wrapper_func) _wrap_XmlContainer_putDocument, NULL},
    { SWIG_prefix "XmlContainer_putDocumentAsEventWriter", (swig_wrapper_func) _wrap_XmlContainer_putDocumentAsEventWriter, NULL},
    { SWIG_prefix "XmlContainer_deleteDocument", (swig_wrapper_func) _wrap_XmlContainer_deleteDocument, NULL},
    { SWIG_prefix "XmlContainer_updateDocument", (swig_wrapper_func) _wrap_XmlContainer_updateDocument, NULL},
    { SWIG_prefix "XmlContainer_getNumDocuments", (swig_wrapper_func) _wrap_XmlContainer_getNumDocuments, NULL},
    { SWIG_prefix "XmlContainer_getIndexSpecification", (swig_wrapper_func) _wrap_XmlContainer_getIndexSpecification, NULL},
    { SWIG_prefix "XmlContainer_getNode", (swig_wrapper_func) _wrap_XmlContainer_getNode, NULL},
    { SWIG_prefix "XmlContainer_getDocument", (swig_wrapper_func) _wrap_XmlContainer_getDocument, NULL},
    { SWIG_prefix "XmlContainer_getAllDocuments", (swig_wrapper_func) _wrap_XmlContainer_getAllDocuments, NULL},
    { SWIG_prefix "XmlContainer_lookupIndex", (swig_wrapper_func) _wrap_XmlContainer_lookupIndex, NULL},
    { SWIG_prefix "XmlContainer_lookupStatistics", (swig_wrapper_func) _wrap_XmlContainer_lookupStatistics, NULL},
    { SWIG_prefix "XmlContainer", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlContainer},
    { SWIG_prefix "new_XmlDocument", (swig_wrapper_func) _wrap_new_XmlDocument, NULL},
    { SWIG_prefix "delete_XmlDocument", (swig_wrapper_func) _wrap_delete_XmlDocument, NULL},
    { SWIG_prefix "XmlDocument_setName", (swig_wrapper_func) _wrap_XmlDocument_setName, NULL},
    { SWIG_prefix "XmlDocument_getName", (swig_wrapper_func) _wrap_XmlDocument_getName, NULL},
    { SWIG_prefix "XmlDocument_setContent", (swig_wrapper_func) _wrap_XmlDocument_setContent, NULL},
    { SWIG_prefix "XmlDocument_getContentAsXmlInputStream", (swig_wrapper_func) _wrap_XmlDocument_getContentAsXmlInputStream, NULL},
    { SWIG_prefix "XmlDocument_setContentAsXmlInputStream", (swig_wrapper_func) _wrap_XmlDocument_setContentAsXmlInputStream, NULL},
    { SWIG_prefix "XmlDocument_getContentAsEventReader", (swig_wrapper_func) _wrap_XmlDocument_getContentAsEventReader, NULL},
    { SWIG_prefix "XmlDocument_setContentAsEventReader", (swig_wrapper_func) _wrap_XmlDocument_setContentAsEventReader, NULL},
    { SWIG_prefix "XmlDocument_getContentAsEventWriter", (swig_wrapper_func) _wrap_XmlDocument_getContentAsEventWriter, NULL},
    { SWIG_prefix "XmlDocument_fetchAllData", (swig_wrapper_func) _wrap_XmlDocument_fetchAllData, NULL},
    { SWIG_prefix "XmlDocument_removeMetaData", (swig_wrapper_func) _wrap_XmlDocument_removeMetaData, NULL},
    { SWIG_prefix "XmlDocument_setMetaData", (swig_wrapper_func) _wrap_XmlDocument_setMetaData, NULL},
    { SWIG_prefix "XmlDocument_getContentAsString", (swig_wrapper_func) _wrap_XmlDocument_getContentAsString, NULL},
    { SWIG_prefix "XmlDocument_getContent", (swig_wrapper_func) _wrap_XmlDocument_getContent, NULL},
    { SWIG_prefix "XmlDocument_getMetaData", (swig_wrapper_func) _wrap_XmlDocument_getMetaData, NULL},
    { SWIG_prefix "XmlDocument_getMetaDataIterator", (swig_wrapper_func) _wrap_XmlDocument_getMetaDataIterator, NULL},
    { SWIG_prefix "XmlDocument_equals", (swig_wrapper_func) _wrap_XmlDocument_equals, NULL},
    { SWIG_prefix "XmlDocument", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlDocument},
    { SWIG_prefix "new_XmlMetaDataIterator", (swig_wrapper_func) _wrap_new_XmlMetaDataIterator, NULL},
    { SWIG_prefix "delete_XmlMetaDataIterator", (swig_wrapper_func) _wrap_delete_XmlMetaDataIterator, NULL},
    { SWIG_prefix "XmlMetaDataIterator_reset", (swig_wrapper_func) _wrap_XmlMetaDataIterator_reset, NULL},
    { SWIG_prefix "XmlMetaDataIterator_next", (swig_wrapper_func) _wrap_XmlMetaDataIterator_next, NULL},
    { SWIG_prefix "XmlMetaDataIterator", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlMetaDataIterator},
    { SWIG_prefix "delete_XmlMetaData", (swig_wrapper_func) _wrap_delete_XmlMetaData, NULL},
    { SWIG_prefix "XmlMetaData_get_uri", (swig_wrapper_func) _wrap_XmlMetaData_get_uri, NULL},
    { SWIG_prefix "XmlMetaData_get_name", (swig_wrapper_func) _wrap_XmlMetaData_get_name, NULL},
    { SWIG_prefix "XmlMetaData_get_value", (swig_wrapper_func) _wrap_XmlMetaData_get_value, NULL},
    { SWIG_prefix "new_XmlMetaData", (swig_wrapper_func) _wrap_new_XmlMetaData, NULL},
    { SWIG_prefix "XmlMetaData", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlMetaData},
    { SWIG_prefix "new_XmlQueryContext", (swig_wrapper_func) _wrap_new_XmlQueryContext, NULL},
    { SWIG_prefix "delete_XmlQueryContext", (swig_wrapper_func) _wrap_delete_XmlQueryContext, NULL},
    { SWIG_prefix "XmlQueryContext_setNamespace", (swig_wrapper_func) _wrap_XmlQueryContext_setNamespace, NULL},
    { SWIG_prefix "XmlQueryContext_getNamespace", (swig_wrapper_func) _wrap_XmlQueryContext_getNamespace, NULL},
    { SWIG_prefix "XmlQueryContext_removeNamespace", (swig_wrapper_func) _wrap_XmlQueryContext_removeNamespace, NULL},
    { SWIG_prefix "XmlQueryContext_clearNamespaces", (swig_wrapper_func) _wrap_XmlQueryContext_clearNamespaces, NULL},
    { SWIG_prefix "XmlQueryContext_setVariableValue", (swig_wrapper_func) _wrap_XmlQueryContext_setVariableValue, NULL},
    { SWIG_prefix "XmlQueryContext_setBaseURI", (swig_wrapper_func) _wrap_XmlQueryContext_setBaseURI, NULL},
    { SWIG_prefix "XmlQueryContext_getBaseURI", (swig_wrapper_func) _wrap_XmlQueryContext_getBaseURI, NULL},
    { SWIG_prefix "XmlQueryContext_setReturnType", (swig_wrapper_func) _wrap_XmlQueryContext_setReturnType, NULL},
    { SWIG_prefix "XmlQueryContext_getReturnType", (swig_wrapper_func) _wrap_XmlQueryContext_getReturnType, NULL},
    { SWIG_prefix "XmlQueryContext_setEvaluationType", (swig_wrapper_func) _wrap_XmlQueryContext_setEvaluationType, NULL},
    { SWIG_prefix "XmlQueryContext_getEvaluationType", (swig_wrapper_func) _wrap_XmlQueryContext_getEvaluationType, NULL},
    { SWIG_prefix "XmlQueryContext_setDefaultCollection", (swig_wrapper_func) _wrap_XmlQueryContext_setDefaultCollection, NULL},
    { SWIG_prefix "XmlQueryContext_getDefaultCollection", (swig_wrapper_func) _wrap_XmlQueryContext_getDefaultCollection, NULL},
    { SWIG_prefix "XmlQueryContext_interruptQuery", (swig_wrapper_func) _wrap_XmlQueryContext_interruptQuery, NULL},
    { SWIG_prefix "XmlQueryContext_setQueryTimeoutSeconds", (swig_wrapper_func) _wrap_XmlQueryContext_setQueryTimeoutSeconds, NULL},
    { SWIG_prefix "XmlQueryContext_getQueryTimeoutSeconds", (swig_wrapper_func) _wrap_XmlQueryContext_getQueryTimeoutSeconds, NULL},
    { SWIG_prefix "XmlQueryContext_getVariableValue", (swig_wrapper_func) _wrap_XmlQueryContext_getVariableValue, NULL},
    { SWIG_prefix "XmlQueryContext_getVariableValues", (swig_wrapper_func) _wrap_XmlQueryContext_getVariableValues, NULL},
    { SWIG_prefix "XmlQueryContext_get", (swig_wrapper_func) _wrap_XmlQueryContext_get, NULL},
    { SWIG_prefix "XmlQueryContext_set", (swig_wrapper_func) _wrap_XmlQueryContext_set, NULL},
    { SWIG_prefix "XmlQueryContext_setDebugVariable", (swig_wrapper_func) _wrap_XmlQueryContext_setDebugVariable, NULL},
    { SWIG_prefix "XmlQueryContext", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlQueryContext},
    { SWIG_prefix "delete_XmlResults", (swig_wrapper_func) _wrap_delete_XmlResults, NULL},
    { SWIG_prefix "new_XmlResults", (swig_wrapper_func) _wrap_new_XmlResults, NULL},
    { SWIG_prefix "XmlResults_hasNext", (swig_wrapper_func) _wrap_XmlResults_hasNext, NULL},
    { SWIG_prefix "XmlResults_hasPrevious", (swig_wrapper_func) _wrap_XmlResults_hasPrevious, NULL},
    { SWIG_prefix "XmlResults_isNull", (swig_wrapper_func) _wrap_XmlResults_isNull, NULL},
    { SWIG_prefix "XmlResults_getEvaluationType", (swig_wrapper_func) _wrap_XmlResults_getEvaluationType, NULL},
    { SWIG_prefix "XmlResults_next", (swig_wrapper_func) _wrap_XmlResults_next, NULL},
    { SWIG_prefix "XmlResults_previous", (swig_wrapper_func) _wrap_XmlResults_previous, NULL},
    { SWIG_prefix "XmlResults_peek", (swig_wrapper_func) _wrap_XmlResults_peek, NULL},
    { SWIG_prefix "XmlResults_reset", (swig_wrapper_func) _wrap_XmlResults_reset, NULL},
    { SWIG_prefix "XmlResults_size", (swig_wrapper_func) _wrap_XmlResults_size, NULL},
    { SWIG_prefix "XmlResults_add", (swig_wrapper_func) _wrap_XmlResults_add, NULL},
    { SWIG_prefix "XmlResults_asEventWriter", (swig_wrapper_func) _wrap_XmlResults_asEventWriter, NULL},
    { SWIG_prefix "XmlResults_copyResults", (swig_wrapper_func) _wrap_XmlResults_copyResults, NULL},
    { SWIG_prefix "XmlResults_concatResults", (swig_wrapper_func) _wrap_XmlResults_concatResults, NULL},
    { SWIG_prefix "XmlResults", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlResults},
    { SWIG_prefix "new_XmlUpdateContext", (swig_wrapper_func) _wrap_new_XmlUpdateContext, NULL},
    { SWIG_prefix "delete_XmlUpdateContext", (swig_wrapper_func) _wrap_delete_XmlUpdateContext, NULL},
    { SWIG_prefix "XmlUpdateContext", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlUpdateContext},
    { SWIG_prefix "new_XmlValue", (swig_wrapper_func) _wrap_new_XmlValue, NULL},
    { SWIG_prefix "delete_XmlValue", (swig_wrapper_func) _wrap_delete_XmlValue, NULL},
    { SWIG_prefix "XmlValue_getType", (swig_wrapper_func) _wrap_XmlValue_getType, NULL},
    { SWIG_prefix "XmlValue_getTypeURI", (swig_wrapper_func) _wrap_XmlValue_getTypeURI, NULL},
    { SWIG_prefix "XmlValue_getTypeName", (swig_wrapper_func) _wrap_XmlValue_getTypeName, NULL},
    { SWIG_prefix "XmlValue_isNull", (swig_wrapper_func) _wrap_XmlValue_isNull, NULL},
    { SWIG_prefix "XmlValue_isType", (swig_wrapper_func) _wrap_XmlValue_isType, NULL},
    { SWIG_prefix "XmlValue_isNumber", (swig_wrapper_func) _wrap_XmlValue_isNumber, NULL},
    { SWIG_prefix "XmlValue_isString", (swig_wrapper_func) _wrap_XmlValue_isString, NULL},
    { SWIG_prefix "XmlValue_isBoolean", (swig_wrapper_func) _wrap_XmlValue_isBoolean, NULL},
    { SWIG_prefix "XmlValue_isBinary", (swig_wrapper_func) _wrap_XmlValue_isBinary, NULL},
    { SWIG_prefix "XmlValue_isNode", (swig_wrapper_func) _wrap_XmlValue_isNode, NULL},
    { SWIG_prefix "XmlValue_asNumber", (swig_wrapper_func) _wrap_XmlValue_asNumber, NULL},
    { SWIG_prefix "XmlValue_asString", (swig_wrapper_func) _wrap_XmlValue_asString, NULL},
    { SWIG_prefix "XmlValue_asBoolean", (swig_wrapper_func) _wrap_XmlValue_asBoolean, NULL},
    { SWIG_prefix "XmlValue_asBinary", (swig_wrapper_func) _wrap_XmlValue_asBinary, NULL},
    { SWIG_prefix "XmlValue_asDocument", (swig_wrapper_func) _wrap_XmlValue_asDocument, NULL},
    { SWIG_prefix "XmlValue_asEventReader", (swig_wrapper_func) _wrap_XmlValue_asEventReader, NULL},
    { SWIG_prefix "XmlValue_getNodeHandle", (swig_wrapper_func) _wrap_XmlValue_getNodeHandle, NULL},
    { SWIG_prefix "XmlValue_equals", (swig_wrapper_func) _wrap_XmlValue_equals, NULL},
    { SWIG_prefix "XmlValue_getNodeName", (swig_wrapper_func) _wrap_XmlValue_getNodeName, NULL},
    { SWIG_prefix "XmlValue_getNodeValue", (swig_wrapper_func) _wrap_XmlValue_getNodeValue, NULL},
    { SWIG_prefix "XmlValue_getNamespaceURI", (swig_wrapper_func) _wrap_XmlValue_getNamespaceURI, NULL},
    { SWIG_prefix "XmlValue_getPrefix", (swig_wrapper_func) _wrap_XmlValue_getPrefix, NULL},
    { SWIG_prefix "XmlValue_getLocalName", (swig_wrapper_func) _wrap_XmlValue_getLocalName, NULL},
    { SWIG_prefix "XmlValue_getNodeType", (swig_wrapper_func) _wrap_XmlValue_getNodeType, NULL},
    { SWIG_prefix "XmlValue_getParentNode", (swig_wrapper_func) _wrap_XmlValue_getParentNode, NULL},
    { SWIG_prefix "XmlValue_getFirstChild", (swig_wrapper_func) _wrap_XmlValue_getFirstChild, NULL},
    { SWIG_prefix "XmlValue_getLastChild", (swig_wrapper_func) _wrap_XmlValue_getLastChild, NULL},
    { SWIG_prefix "XmlValue_getPreviousSibling", (swig_wrapper_func) _wrap_XmlValue_getPreviousSibling, NULL},
    { SWIG_prefix "XmlValue_getNextSibling", (swig_wrapper_func) _wrap_XmlValue_getNextSibling, NULL},
    { SWIG_prefix "XmlValue_getAttributes", (swig_wrapper_func) _wrap_XmlValue_getAttributes, NULL},
    { SWIG_prefix "XmlValue_getOwnerElement", (swig_wrapper_func) _wrap_XmlValue_getOwnerElement, NULL},
    { SWIG_prefix "XmlValue_setValue", (swig_wrapper_func) _wrap_XmlValue_setValue, NULL},
    { SWIG_prefix "XmlValue", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlValue},
    { SWIG_prefix "new_XmlIndexSpecification", (swig_wrapper_func) _wrap_new_XmlIndexSpecification, NULL},
    { SWIG_prefix "delete_XmlIndexSpecification", (swig_wrapper_func) _wrap_delete_XmlIndexSpecification, NULL},
    { SWIG_prefix "XmlIndexSpecification_addIndex", (swig_wrapper_func) _wrap_XmlIndexSpecification_addIndex, NULL},
    { SWIG_prefix "XmlIndexSpecification_deleteIndex", (swig_wrapper_func) _wrap_XmlIndexSpecification_deleteIndex, NULL},
    { SWIG_prefix "XmlIndexSpecification_replaceIndex", (swig_wrapper_func) _wrap_XmlIndexSpecification_replaceIndex, NULL},
    { SWIG_prefix "XmlIndexSpecification_addDefaultIndex", (swig_wrapper_func) _wrap_XmlIndexSpecification_addDefaultIndex, NULL},
    { SWIG_prefix "XmlIndexSpecification_deleteDefaultIndex", (swig_wrapper_func) _wrap_XmlIndexSpecification_deleteDefaultIndex, NULL},
    { SWIG_prefix "XmlIndexSpecification_replaceDefaultIndex", (swig_wrapper_func) _wrap_XmlIndexSpecification_replaceDefaultIndex, NULL},
    { SWIG_prefix "XmlIndexSpecification_reset", (swig_wrapper_func) _wrap_XmlIndexSpecification_reset, NULL},
    { SWIG_prefix "XmlIndexSpecification_getAutoIndexing", (swig_wrapper_func) _wrap_XmlIndexSpecification_getAutoIndexing, NULL},
    { SWIG_prefix "XmlIndexSpecification_setAutoIndexing", (swig_wrapper_func) _wrap_XmlIndexSpecification_setAutoIndexing, NULL},
    { SWIG_prefix "XmlIndexSpecification_find", (swig_wrapper_func) _wrap_XmlIndexSpecification_find, NULL},
    { SWIG_prefix "XmlIndexSpecification_next", (swig_wrapper_func) _wrap_XmlIndexSpecification_next, NULL},
    { SWIG_prefix "XmlIndexSpecification_getDefaultIndex", (swig_wrapper_func) _wrap_XmlIndexSpecification_getDefaultIndex, NULL},
    { SWIG_prefix "XmlIndexSpecification_getValueType", (swig_wrapper_func) _wrap_XmlIndexSpecification_getValueType, NULL},
    { SWIG_prefix "XmlIndexSpecification", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlIndexSpecification},
    { SWIG_prefix "delete_XmlIndexDeclaration", (swig_wrapper_func) _wrap_delete_XmlIndexDeclaration, NULL},
    { SWIG_prefix "XmlIndexDeclaration_get_uri", (swig_wrapper_func) _wrap_XmlIndexDeclaration_get_uri, NULL},
    { SWIG_prefix "XmlIndexDeclaration_get_name", (swig_wrapper_func) _wrap_XmlIndexDeclaration_get_name, NULL},
    { SWIG_prefix "XmlIndexDeclaration_get_index", (swig_wrapper_func) _wrap_XmlIndexDeclaration_get_index, NULL},
    { SWIG_prefix "new_XmlIndexDeclaration", (swig_wrapper_func) _wrap_new_XmlIndexDeclaration, NULL},
    { SWIG_prefix "XmlIndexDeclaration", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlIndexDeclaration},
    { SWIG_prefix "new_XmlQueryExpression", (swig_wrapper_func) _wrap_new_XmlQueryExpression, NULL},
    { SWIG_prefix "delete_XmlQueryExpression", (swig_wrapper_func) _wrap_delete_XmlQueryExpression, NULL},
    { SWIG_prefix "XmlQueryExpression_getQuery", (swig_wrapper_func) _wrap_XmlQueryExpression_getQuery, NULL},
    { SWIG_prefix "XmlQueryExpression_getQueryPlan", (swig_wrapper_func) _wrap_XmlQueryExpression_getQueryPlan, NULL},
    { SWIG_prefix "XmlQueryExpression_isUpdateExpression", (swig_wrapper_func) _wrap_XmlQueryExpression_isUpdateExpression, NULL},
    { SWIG_prefix "XmlQueryExpression_execute", (swig_wrapper_func) _wrap_XmlQueryExpression_execute, NULL},
    { SWIG_prefix "XmlQueryExpression", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlQueryExpression},
    { SWIG_prefix "delete_XmlInputStream", (swig_wrapper_func) _wrap_delete_XmlInputStream, NULL},
    { SWIG_prefix "XmlInputStream_curPos", (swig_wrapper_func) _wrap_XmlInputStream_curPos, NULL},
    { SWIG_prefix "XmlInputStream_readBytes", (swig_wrapper_func) _wrap_XmlInputStream_readBytes, NULL},
    { SWIG_prefix "XmlInputStream_freeMemory", (swig_wrapper_func) _wrap_XmlInputStream_freeMemory, NULL},
    { SWIG_prefix "XmlInputStream", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlInputStream},
    { SWIG_prefix "delete_XmlContainerConfig", (swig_wrapper_func) _wrap_delete_XmlContainerConfig, NULL},
    { SWIG_prefix "new_XmlContainerConfig", (swig_wrapper_func) _wrap_new_XmlContainerConfig, NULL},
    { SWIG_prefix "XmlContainerConfig_getMode", (swig_wrapper_func) _wrap_XmlContainerConfig_getMode, NULL},
    { SWIG_prefix "XmlContainerConfig_setMode", (swig_wrapper_func) _wrap_XmlContainerConfig_setMode, NULL},
    { SWIG_prefix "XmlContainerConfig_getContainerType", (swig_wrapper_func) _wrap_XmlContainerConfig_getContainerType, NULL},
    { SWIG_prefix "XmlContainerConfig_setContainerType", (swig_wrapper_func) _wrap_XmlContainerConfig_setContainerType, NULL},
    { SWIG_prefix "XmlContainerConfig_getPageSize", (swig_wrapper_func) _wrap_XmlContainerConfig_getPageSize, NULL},
    { SWIG_prefix "XmlContainerConfig_setPageSize", (swig_wrapper_func) _wrap_XmlContainerConfig_setPageSize, NULL},
    { SWIG_prefix "XmlContainerConfig_getSequenceIncrement", (swig_wrapper_func) _wrap_XmlContainerConfig_getSequenceIncrement, NULL},
    { SWIG_prefix "XmlContainerConfig_setSequenceIncrement", (swig_wrapper_func) _wrap_XmlContainerConfig_setSequenceIncrement, NULL},
    { SWIG_prefix "XmlContainerConfig_setIndexNodes", (swig_wrapper_func) _wrap_XmlContainerConfig_setIndexNodes, NULL},
    { SWIG_prefix "XmlContainerConfig_getIndexNodes", (swig_wrapper_func) _wrap_XmlContainerConfig_getIndexNodes, NULL},
    { SWIG_prefix "XmlContainerConfig_setChecksum", (swig_wrapper_func) _wrap_XmlContainerConfig_setChecksum, NULL},
    { SWIG_prefix "XmlContainerConfig_getChecksum", (swig_wrapper_func) _wrap_XmlContainerConfig_getChecksum, NULL},
    { SWIG_prefix "XmlContainerConfig_setEncrypted", (swig_wrapper_func) _wrap_XmlContainerConfig_setEncrypted, NULL},
    { SWIG_prefix "XmlContainerConfig_getEncrypted", (swig_wrapper_func) _wrap_XmlContainerConfig_getEncrypted, NULL},
    { SWIG_prefix "XmlContainerConfig_setAllowValidation", (swig_wrapper_func) _wrap_XmlContainerConfig_setAllowValidation, NULL},
    { SWIG_prefix "XmlContainerConfig_getAllowValidation", (swig_wrapper_func) _wrap_XmlContainerConfig_getAllowValidation, NULL},
    { SWIG_prefix "XmlContainerConfig_setStatistics", (swig_wrapper_func) _wrap_XmlContainerConfig_setStatistics, NULL},
    { SWIG_prefix "XmlContainerConfig_getStatistics", (swig_wrapper_func) _wrap_XmlContainerConfig_getStatistics, NULL},
    { SWIG_prefix "XmlContainerConfig_setTransactional", (swig_wrapper_func) _wrap_XmlContainerConfig_setTransactional, NULL},
    { SWIG_prefix "XmlContainerConfig_getTransactional", (swig_wrapper_func) _wrap_XmlContainerConfig_getTransactional, NULL},
    { SWIG_prefix "XmlContainerConfig_setAllowCreate", (swig_wrapper_func) _wrap_XmlContainerConfig_setAllowCreate, NULL},
    { SWIG_prefix "XmlContainerConfig_getAllowCreate", (swig_wrapper_func) _wrap_XmlContainerConfig_getAllowCreate, NULL},
    { SWIG_prefix "XmlContainerConfig_setExclusiveCreate", (swig_wrapper_func) _wrap_XmlContainerConfig_setExclusiveCreate, NULL},
    { SWIG_prefix "XmlContainerConfig_getExclusiveCreate", (swig_wrapper_func) _wrap_XmlContainerConfig_getExclusiveCreate, NULL},
    { SWIG_prefix "XmlContainerConfig_setNoMMap", (swig_wrapper_func) _wrap_XmlContainerConfig_setNoMMap, NULL},
    { SWIG_prefix "XmlContainerConfig_getNoMMap", (swig_wrapper_func) _wrap_XmlContainerConfig_getNoMMap, NULL},
    { SWIG_prefix "XmlContainerConfig_setReadOnly", (swig_wrapper_func) _wrap_XmlContainerConfig_setReadOnly, NULL},
    { SWIG_prefix "XmlContainerConfig_getReadOnly", (swig_wrapper_func) _wrap_XmlContainerConfig_getReadOnly, NULL},
    { SWIG_prefix "XmlContainerConfig_setMultiversion", (swig_wrapper_func) _wrap_XmlContainerConfig_setMultiversion, NULL},
    { SWIG_prefix "XmlContainerConfig_getMultiversion", (swig_wrapper_func) _wrap_XmlContainerConfig_getMultiversion, NULL},
    { SWIG_prefix "XmlContainerConfig_setReadUncommitted", (swig_wrapper_func) _wrap_XmlContainerConfig_setReadUncommitted, NULL},
    { SWIG_prefix "XmlContainerConfig_getReadUncommitted", (swig_wrapper_func) _wrap_XmlContainerConfig_getReadUncommitted, NULL},
    { SWIG_prefix "XmlContainerConfig_setThreaded", (swig_wrapper_func) _wrap_XmlContainerConfig_setThreaded, NULL},
    { SWIG_prefix "XmlContainerConfig_getThreaded", (swig_wrapper_func) _wrap_XmlContainerConfig_getThreaded, NULL},
    { SWIG_prefix "XmlContainerConfig_setTransactionNotDurable", (swig_wrapper_func) _wrap_XmlContainerConfig_setTransactionNotDurable, NULL},
    { SWIG_prefix "XmlContainerConfig_getTransactionNotDurable", (swig_wrapper_func) _wrap_XmlContainerConfig_getTransactionNotDurable, NULL},
    { SWIG_prefix "XmlContainerConfig", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlContainerConfig},
    { SWIG_prefix "delete_XmlTransaction", (swig_wrapper_func) _wrap_delete_XmlTransaction, NULL},
    { SWIG_prefix "new_XmlTransaction", (swig_wrapper_func) _wrap_new_XmlTransaction, NULL},
    { SWIG_prefix "XmlTransaction_abort", (swig_wrapper_func) _wrap_XmlTransaction_abort, NULL},
    { SWIG_prefix "XmlTransaction_createChild", (swig_wrapper_func) _wrap_XmlTransaction_createChild, NULL},
    { SWIG_prefix "XmlTransaction_commit", (swig_wrapper_func) _wrap_XmlTransaction_commit, NULL},
    { SWIG_prefix "XmlTransaction_getDB_TXN", (swig_wrapper_func) _wrap_XmlTransaction_getDB_TXN, NULL},
    { SWIG_prefix "XmlTransaction", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlTransaction},
    { SWIG_prefix "new_XmlStatistics", (swig_wrapper_func) _wrap_new_XmlStatistics, NULL},
    { SWIG_prefix "delete_XmlStatistics", (swig_wrapper_func) _wrap_delete_XmlStatistics, NULL},
    { SWIG_prefix "XmlStatistics_getNumberOfIndexedKeys", (swig_wrapper_func) _wrap_XmlStatistics_getNumberOfIndexedKeys, NULL},
    { SWIG_prefix "XmlStatistics_getNumberOfUniqueKeys", (swig_wrapper_func) _wrap_XmlStatistics_getNumberOfUniqueKeys, NULL},
    { SWIG_prefix "XmlStatistics_getSumKeyValueSize", (swig_wrapper_func) _wrap_XmlStatistics_getSumKeyValueSize, NULL},
    { SWIG_prefix "XmlStatistics", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlStatistics},
    { SWIG_prefix "delete_XmlEventReader", (swig_wrapper_func) _wrap_delete_XmlEventReader, NULL},
    { SWIG_prefix "XmlEventReader_close", (swig_wrapper_func) _wrap_XmlEventReader_close, NULL},
    { SWIG_prefix "XmlEventReader_setReportEntityInfo", (swig_wrapper_func) _wrap_XmlEventReader_setReportEntityInfo, NULL},
    { SWIG_prefix "XmlEventReader_getReportEntityInfo", (swig_wrapper_func) _wrap_XmlEventReader_getReportEntityInfo, NULL},
    { SWIG_prefix "XmlEventReader_setExpandEntities", (swig_wrapper_func) _wrap_XmlEventReader_setExpandEntities, NULL},
    { SWIG_prefix "XmlEventReader_getExpandEntities", (swig_wrapper_func) _wrap_XmlEventReader_getExpandEntities, NULL},
    { SWIG_prefix "XmlEventReader_next", (swig_wrapper_func) _wrap_XmlEventReader_next, NULL},
    { SWIG_prefix "XmlEventReader_nextTag", (swig_wrapper_func) _wrap_XmlEventReader_nextTag, NULL},
    { SWIG_prefix "XmlEventReader_hasNext", (swig_wrapper_func) _wrap_XmlEventReader_hasNext, NULL},
    { SWIG_prefix "XmlEventReader_getEventType", (swig_wrapper_func) _wrap_XmlEventReader_getEventType, NULL},
    { SWIG_prefix "XmlEventReader_getNamespaceURI", (swig_wrapper_func) _wrap_XmlEventReader_getNamespaceURI, NULL},
    { SWIG_prefix "XmlEventReader_getLocalName", (swig_wrapper_func) _wrap_XmlEventReader_getLocalName, NULL},
    { SWIG_prefix "XmlEventReader_getPrefix", (swig_wrapper_func) _wrap_XmlEventReader_getPrefix, NULL},
    { SWIG_prefix "XmlEventReader_getValue", (swig_wrapper_func) _wrap_XmlEventReader_getValue, NULL},
    { SWIG_prefix "XmlEventReader_getValueLength", (swig_wrapper_func) _wrap_XmlEventReader_getValueLength, NULL},
    { SWIG_prefix "XmlEventReader_getAttributeCount", (swig_wrapper_func) _wrap_XmlEventReader_getAttributeCount, NULL},
    { SWIG_prefix "XmlEventReader_isAttributeSpecified", (swig_wrapper_func) _wrap_XmlEventReader_isAttributeSpecified, NULL},
    { SWIG_prefix "XmlEventReader_getAttributeLocalName", (swig_wrapper_func) _wrap_XmlEventReader_getAttributeLocalName, NULL},
    { SWIG_prefix "XmlEventReader_getAttributeNamespaceURI", (swig_wrapper_func) _wrap_XmlEventReader_getAttributeNamespaceURI, NULL},
    { SWIG_prefix "XmlEventReader_getAttributePrefix", (swig_wrapper_func) _wrap_XmlEventReader_getAttributePrefix, NULL},
    { SWIG_prefix "XmlEventReader_getAttributeValue", (swig_wrapper_func) _wrap_XmlEventReader_getAttributeValue, NULL},
    { SWIG_prefix "XmlEventReader_getEncoding", (swig_wrapper_func) _wrap_XmlEventReader_getEncoding, NULL},
    { SWIG_prefix "XmlEventReader_getVersion", (swig_wrapper_func) _wrap_XmlEventReader_getVersion, NULL},
    { SWIG_prefix "XmlEventReader_getSystemId", (swig_wrapper_func) _wrap_XmlEventReader_getSystemId, NULL},
    { SWIG_prefix "XmlEventReader_isStandalone", (swig_wrapper_func) _wrap_XmlEventReader_isStandalone, NULL},
    { SWIG_prefix "XmlEventReader_standaloneSet", (swig_wrapper_func) _wrap_XmlEventReader_standaloneSet, NULL},
    { SWIG_prefix "XmlEventReader_encodingSet", (swig_wrapper_func) _wrap_XmlEventReader_encodingSet, NULL},
    { SWIG_prefix "XmlEventReader_hasEntityEscapeInfo", (swig_wrapper_func) _wrap_XmlEventReader_hasEntityEscapeInfo, NULL},
    { SWIG_prefix "XmlEventReader_needsEntityEscape", (swig_wrapper_func) _wrap_XmlEventReader_needsEntityEscape, NULL},
    { SWIG_prefix "XmlEventReader_hasEmptyElementInfo", (swig_wrapper_func) _wrap_XmlEventReader_hasEmptyElementInfo, NULL},
    { SWIG_prefix "XmlEventReader_isEmptyElement", (swig_wrapper_func) _wrap_XmlEventReader_isEmptyElement, NULL},
    { SWIG_prefix "XmlEventReader_isWhiteSpace", (swig_wrapper_func) _wrap_XmlEventReader_isWhiteSpace, NULL},
    { SWIG_prefix "XmlEventReader", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlEventReader},
    { SWIG_prefix "delete_XmlEventWriter", (swig_wrapper_func) _wrap_delete_XmlEventWriter, NULL},
    { SWIG_prefix "XmlEventWriter_close", (swig_wrapper_func) _wrap_XmlEventWriter_close, NULL},
    { SWIG_prefix "XmlEventWriter_writeAttribute", (swig_wrapper_func) _wrap_XmlEventWriter_writeAttribute, NULL},
    { SWIG_prefix "XmlEventWriter_writeText", (swig_wrapper_func) _wrap_XmlEventWriter_writeText, NULL},
    { SWIG_prefix "XmlEventWriter_writeDTD", (swig_wrapper_func) _wrap_XmlEventWriter_writeDTD, NULL},
    { SWIG_prefix "XmlEventWriter_writeProcessingInstruction", (swig_wrapper_func) _wrap_XmlEventWriter_writeProcessingInstruction, NULL},
    { SWIG_prefix "XmlEventWriter_writeStartElement", (swig_wrapper_func) _wrap_XmlEventWriter_writeStartElement, NULL},
    { SWIG_prefix "XmlEventWriter_writeEndElement", (swig_wrapper_func) _wrap_XmlEventWriter_writeEndElement, NULL},
    { SWIG_prefix "XmlEventWriter_writeStartDocument", (swig_wrapper_func) _wrap_XmlEventWriter_writeStartDocument, NULL},
    { SWIG_prefix "XmlEventWriter_writeEndDocument", (swig_wrapper_func) _wrap_XmlEventWriter_writeEndDocument, NULL},
    { SWIG_prefix "XmlEventWriter_writeStartEntity", (swig_wrapper_func) _wrap_XmlEventWriter_writeStartEntity, NULL},
    { SWIG_prefix "XmlEventWriter_writeEndEntity", (swig_wrapper_func) _wrap_XmlEventWriter_writeEndEntity, NULL},
    { SWIG_prefix "XmlEventWriter", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlEventWriter},
    { SWIG_prefix "new_XmlEventReaderToWriter", (swig_wrapper_func) _wrap_new_XmlEventReaderToWriter, NULL},
    { SWIG_prefix "delete_XmlEventReaderToWriter", (swig_wrapper_func) _wrap_delete_XmlEventReaderToWriter, NULL},
    { SWIG_prefix "XmlEventReaderToWriter_start", (swig_wrapper_func) _wrap_XmlEventReaderToWriter_start, NULL},
    { SWIG_prefix "XmlEventReaderToWriter", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_XmlEventReaderToWriter},
    {0, 0, 0}
};

static swig_var_info swig_variables[] = {
    {0,0,0,0}
};

static swig_const_info swig_constants[] = {
    {0,0,0,0,0,0}
};

/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_DB_TXN = {"_p_DB_TXN", "DB_TXN *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XmlContainer = {"_p_XmlContainer", "XmlContainer *", 0, 0, (void*)&_wrap_class_XmlContainer, 0};
static swig_type_info _swigt__p_XmlContainerConfig = {"_p_XmlContainerConfig", "XmlContainerConfig *", 0, 0, (void*)&_wrap_class_XmlContainerConfig, 0};
static swig_type_info _swigt__p_XmlData = {"_p_XmlData", "XmlData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XmlDocument = {"_p_XmlDocument", "XmlDocument *", 0, 0, (void*)&_wrap_class_XmlDocument, 0};
static swig_type_info _swigt__p_XmlEventReader = {"_p_XmlEventReader", "XmlEventReader *", 0, 0, (void*)&_wrap_class_XmlEventReader, 0};
static swig_type_info _swigt__p_XmlEventReaderToWriter = {"_p_XmlEventReaderToWriter", "XmlEventReaderToWriter *", 0, 0, (void*)&_wrap_class_XmlEventReaderToWriter, 0};
static swig_type_info _swigt__p_XmlEventWriter = {"_p_XmlEventWriter", "XmlEventWriter *", 0, 0, (void*)&_wrap_class_XmlEventWriter, 0};
static swig_type_info _swigt__p_XmlIndexDeclaration = {"_p_XmlIndexDeclaration", "XmlIndexDeclaration *", 0, 0, (void*)&_wrap_class_XmlIndexDeclaration, 0};
static swig_type_info _swigt__p_XmlIndexLookup = {"_p_XmlIndexLookup", "XmlIndexLookup *", 0, 0, (void*)&_wrap_class_XmlIndexLookup, 0};
static swig_type_info _swigt__p_XmlIndexSpecification = {"_p_XmlIndexSpecification", "XmlIndexSpecification *", 0, 0, (void*)&_wrap_class_XmlIndexSpecification, 0};
static swig_type_info _swigt__p_XmlInputStream = {"_p_XmlInputStream", "XmlInputStream *", 0, 0, (void*)&_wrap_class_XmlInputStream, 0};
static swig_type_info _swigt__p_XmlManager = {"_p_XmlManager", "XmlManager *", 0, 0, (void*)&_wrap_class_XmlManager, 0};
static swig_type_info _swigt__p_XmlMetaData = {"_p_XmlMetaData", "XmlMetaData *", 0, 0, (void*)&_wrap_class_XmlMetaData, 0};
static swig_type_info _swigt__p_XmlMetaDataIterator = {"_p_XmlMetaDataIterator", "XmlMetaDataIterator *", 0, 0, (void*)&_wrap_class_XmlMetaDataIterator, 0};
static swig_type_info _swigt__p_XmlQueryContext = {"_p_XmlQueryContext", "XmlQueryContext *", 0, 0, (void*)&_wrap_class_XmlQueryContext, 0};
static swig_type_info _swigt__p_XmlQueryExpression = {"_p_XmlQueryExpression", "XmlQueryExpression *", 0, 0, (void*)&_wrap_class_XmlQueryExpression, 0};
static swig_type_info _swigt__p_XmlResults = {"_p_XmlResults", "XmlResults *", 0, 0, (void*)&_wrap_class_XmlResults, 0};
static swig_type_info _swigt__p_XmlStatistics = {"_p_XmlStatistics", "XmlStatistics *", 0, 0, (void*)&_wrap_class_XmlStatistics, 0};
static swig_type_info _swigt__p_XmlTransaction = {"_p_XmlTransaction", "XmlTransaction *", 0, 0, (void*)&_wrap_class_XmlTransaction, 0};
static swig_type_info _swigt__p_XmlUpdateContext = {"_p_XmlUpdateContext", "XmlUpdateContext *", 0, 0, (void*)&_wrap_class_XmlUpdateContext, 0};
static swig_type_info _swigt__p_XmlValue = {"_p_XmlValue", "XmlValue *", 0, 0, (void*)&_wrap_class_XmlValue, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|int32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_DB_TXN,
  &_swigt__p_XmlContainer,
  &_swigt__p_XmlContainerConfig,
  &_swigt__p_XmlData,
  &_swigt__p_XmlDocument,
  &_swigt__p_XmlEventReader,
  &_swigt__p_XmlEventReaderToWriter,
  &_swigt__p_XmlEventWriter,
  &_swigt__p_XmlIndexDeclaration,
  &_swigt__p_XmlIndexLookup,
  &_swigt__p_XmlIndexSpecification,
  &_swigt__p_XmlInputStream,
  &_swigt__p_XmlManager,
  &_swigt__p_XmlMetaData,
  &_swigt__p_XmlMetaDataIterator,
  &_swigt__p_XmlQueryContext,
  &_swigt__p_XmlQueryExpression,
  &_swigt__p_XmlResults,
  &_swigt__p_XmlStatistics,
  &_swigt__p_XmlTransaction,
  &_swigt__p_XmlUpdateContext,
  &_swigt__p_XmlValue,
  &_swigt__p_char,
  &_swigt__p_int,
  &_swigt__p_unsigned_char,
};

static swig_cast_info _swigc__p_DB_TXN[] = {  {&_swigt__p_DB_TXN, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlContainer[] = {  {&_swigt__p_XmlContainer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlContainerConfig[] = {  {&_swigt__p_XmlContainerConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlData[] = {  {&_swigt__p_XmlData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlDocument[] = {  {&_swigt__p_XmlDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlEventReader[] = {  {&_swigt__p_XmlEventReader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlEventReaderToWriter[] = {  {&_swigt__p_XmlEventReaderToWriter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlEventWriter[] = {  {&_swigt__p_XmlEventWriter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlIndexDeclaration[] = {  {&_swigt__p_XmlIndexDeclaration, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlIndexLookup[] = {  {&_swigt__p_XmlIndexLookup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlIndexSpecification[] = {  {&_swigt__p_XmlIndexSpecification, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlInputStream[] = {  {&_swigt__p_XmlInputStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlManager[] = {  {&_swigt__p_XmlManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlMetaData[] = {  {&_swigt__p_XmlMetaData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlMetaDataIterator[] = {  {&_swigt__p_XmlMetaDataIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlQueryContext[] = {  {&_swigt__p_XmlQueryContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlQueryExpression[] = {  {&_swigt__p_XmlQueryExpression, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlResults[] = {  {&_swigt__p_XmlResults, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlStatistics[] = {  {&_swigt__p_XmlStatistics, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlTransaction[] = {  {&_swigt__p_XmlTransaction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlUpdateContext[] = {  {&_swigt__p_XmlUpdateContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XmlValue[] = {  {&_swigt__p_XmlValue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_DB_TXN,
  _swigc__p_XmlContainer,
  _swigc__p_XmlContainerConfig,
  _swigc__p_XmlData,
  _swigc__p_XmlDocument,
  _swigc__p_XmlEventReader,
  _swigc__p_XmlEventReaderToWriter,
  _swigc__p_XmlEventWriter,
  _swigc__p_XmlIndexDeclaration,
  _swigc__p_XmlIndexLookup,
  _swigc__p_XmlIndexSpecification,
  _swigc__p_XmlInputStream,
  _swigc__p_XmlManager,
  _swigc__p_XmlMetaData,
  _swigc__p_XmlMetaDataIterator,
  _swigc__p_XmlQueryContext,
  _swigc__p_XmlQueryExpression,
  _swigc__p_XmlResults,
  _swigc__p_XmlStatistics,
  _swigc__p_XmlTransaction,
  _swigc__p_XmlUpdateContext,
  _swigc__p_XmlValue,
  _swigc__p_char,
  _swigc__p_int,
  _swigc__p_unsigned_char,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif


#ifdef __cplusplus
extern "C" {
#endif
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  
  SWIGINTERN void
  SWIG_Tcl_InstallConstants(Tcl_Interp *interp, swig_const_info constants[]) {
    int i;
    Tcl_Obj *obj;
    
    if (!swigconstTableinit) {
      Tcl_InitHashTable(&swigconstTable, TCL_STRING_KEYS);
      swigconstTableinit = 1;
    }
    for (i = 0; constants[i].type; i++) {
      switch(constants[i].type) {
      case SWIG_TCL_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_TCL_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        SWIG_Tcl_SetConstantObj(interp, constants[i].name, obj);
      }
    }
  }
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

SWIGEXPORT int SWIG_init(Tcl_Interp *interp) {
  int i;
  if (interp == 0) return TCL_ERROR;
#ifdef USE_TCL_STUBS
  if (Tcl_InitStubs(interp, (char*)"8.1", 0) == NULL) {
    return TCL_ERROR;
  }
#endif  
  Tcl_PkgProvide(interp, (char*)SWIG_name, (char*)SWIG_version);
  
#ifdef SWIG_namespace
  Tcl_Eval(interp, "namespace eval " SWIG_namespace " { }");
#endif
  
  SWIG_InitializeModule((void *) interp);
  SWIG_PropagateClientData();
  
  for (i = 0; swig_commands[i].name; i++) {
    Tcl_CreateObjCommand(interp, (char *) swig_commands[i].name, (swig_wrapper_func) swig_commands[i].wrapper,
      swig_commands[i].clientdata, NULL);
  }
  for (i = 0; swig_variables[i].name; i++) {
    Tcl_SetVar(interp, (char *) swig_variables[i].name, (char *) "", TCL_GLOBAL_ONLY);
    Tcl_TraceVar(interp, (char *) swig_variables[i].name, TCL_TRACE_READS | TCL_GLOBAL_ONLY, 
      (Tcl_VarTraceProc *) swig_variables[i].get, (ClientData) swig_variables[i].addr);
    Tcl_TraceVar(interp, (char *) swig_variables[i].name, TCL_TRACE_WRITES | TCL_GLOBAL_ONLY, 
      (Tcl_VarTraceProc *) swig_variables[i].set, (ClientData) swig_variables[i].addr);
  }
  
  SWIG_Tcl_InstallConstants(interp, swig_constants);
  
  
  SWIG_Tcl_SetConstantObj(interp, "DB_CREATE", SWIG_From_int(static_cast< int >(DB_CREATE)));
  SWIG_Tcl_SetConstantObj(interp, "DB_READ_UNCOMMITTED", SWIG_From_int(static_cast< int >(DB_READ_UNCOMMITTED)));
  SWIG_Tcl_SetConstantObj(interp, "DB_DIRTY_READ", SWIG_From_int(static_cast< int >(DB_DIRTY_READ)));
  SWIG_Tcl_SetConstantObj(interp, "DB_EXCL", SWIG_From_int(static_cast< int >(DB_EXCL)));
  SWIG_Tcl_SetConstantObj(interp, "DB_NOMMAP", SWIG_From_int(static_cast< int >(DB_NOMMAP)));
  SWIG_Tcl_SetConstantObj(interp, "DB_RDONLY", SWIG_From_int(static_cast< int >(DB_RDONLY)));
  SWIG_Tcl_SetConstantObj(interp, "DB_THREAD", SWIG_From_int(static_cast< int >(DB_THREAD)));
  SWIG_Tcl_SetConstantObj(interp, "DB_READ_COMMITTED", SWIG_From_int(static_cast< int >(DB_READ_COMMITTED)));
  SWIG_Tcl_SetConstantObj(interp, "DB_DEGREE_2", SWIG_From_int(static_cast< int >(DB_DEGREE_2)));
  SWIG_Tcl_SetConstantObj(interp, "DB_INIT_LOCK", SWIG_From_int(static_cast< int >(DB_INIT_LOCK)));
  SWIG_Tcl_SetConstantObj(interp, "DB_INIT_LOG", SWIG_From_int(static_cast< int >(DB_INIT_LOG)));
  SWIG_Tcl_SetConstantObj(interp, "DB_INIT_MPOOL", SWIG_From_int(static_cast< int >(DB_INIT_MPOOL)));
  SWIG_Tcl_SetConstantObj(interp, "DB_INIT_TXN", SWIG_From_int(static_cast< int >(DB_INIT_TXN)));
  SWIG_Tcl_SetConstantObj(interp, "DB_SALVAGE", SWIG_From_int(static_cast< int >(DB_SALVAGE)));
  SWIG_Tcl_SetConstantObj(interp, "DB_AGGRESSIVE", SWIG_From_int(static_cast< int >(DB_AGGRESSIVE)));
  SWIG_Tcl_SetConstantObj(interp, "DB_TXN_SNAPSHOT", SWIG_From_int(static_cast< int >(DB_TXN_SNAPSHOT)));
  SWIG_Tcl_SetConstantObj(interp, "DB_MULTIVERSION", SWIG_From_int(static_cast< int >(DB_MULTIVERSION)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_ADOPT_DBENV", SWIG_From_int(static_cast< int >(DBXML_ADOPT_DBENV)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_ALLOW_EXTERNAL_ACCESS", SWIG_From_int(static_cast< int >(DBXML_ALLOW_EXTERNAL_ACCESS)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_ALLOW_AUTO_OPEN", SWIG_From_int(static_cast< int >(DBXML_ALLOW_AUTO_OPEN)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_ALLOW_VALIDATION", SWIG_From_int(static_cast< int >(DBXML_ALLOW_VALIDATION)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_TRANSACTIONAL", SWIG_From_int(static_cast< int >(DBXML_TRANSACTIONAL)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_CHKSUM", SWIG_From_int(static_cast< int >(DBXML_CHKSUM)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_ENCRYPT", SWIG_From_int(static_cast< int >(DBXML_ENCRYPT)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_INDEX_NODES", SWIG_From_int(static_cast< int >(DBXML_INDEX_NODES)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_NO_INDEX_NODES", SWIG_From_int(static_cast< int >(DBXML_NO_INDEX_NODES)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_STATISTICS", SWIG_From_int(static_cast< int >(DBXML_STATISTICS)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_NO_STATISTICS", SWIG_From_int(static_cast< int >(DBXML_NO_STATISTICS)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_REVERSE_ORDER", SWIG_From_int(static_cast< int >(DBXML_REVERSE_ORDER)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_INDEX_VALUES", SWIG_From_int(static_cast< int >(DBXML_INDEX_VALUES)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_CACHE_DOCUMENTS", SWIG_From_int(static_cast< int >(DBXML_CACHE_DOCUMENTS)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_LAZY_DOCS", SWIG_From_int(static_cast< int >(DBXML_LAZY_DOCS)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_DOCUMENT_PROJECTION", SWIG_From_int(static_cast< int >(DBXML_DOCUMENT_PROJECTION)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_NO_AUTO_COMMIT", SWIG_From_int(static_cast< int >(DBXML_NO_AUTO_COMMIT)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_WELL_FORMED_ONLY", SWIG_From_int(static_cast< int >(DBXML_WELL_FORMED_ONLY)));
  SWIG_Tcl_SetConstantObj(interp, "DBXML_GEN_NAME", SWIG_From_int(static_cast< int >(DBXML_GEN_NAME)));
  SWIG_Tcl_SetConstantObj(interp, "LEVEL_NONE", SWIG_From_int(static_cast< int >(LEVEL_NONE)));
  SWIG_Tcl_SetConstantObj(interp, "LEVEL_DEBUG", SWIG_From_int(static_cast< int >(LEVEL_DEBUG)));
  SWIG_Tcl_SetConstantObj(interp, "LEVEL_INFO", SWIG_From_int(static_cast< int >(LEVEL_INFO)));
  SWIG_Tcl_SetConstantObj(interp, "LEVEL_WARNING", SWIG_From_int(static_cast< int >(LEVEL_WARNING)));
  SWIG_Tcl_SetConstantObj(interp, "LEVEL_ERROR", SWIG_From_int(static_cast< int >(LEVEL_ERROR)));
  SWIG_Tcl_SetConstantObj(interp, "LEVEL_ALL", SWIG_From_int(static_cast< int >(LEVEL_ALL)));
  SWIG_Tcl_SetConstantObj(interp, "CATEGORY_NONE", SWIG_From_int(static_cast< int >(CATEGORY_NONE)));
  SWIG_Tcl_SetConstantObj(interp, "CATEGORY_INDEXER", SWIG_From_int(static_cast< int >(CATEGORY_INDEXER)));
  SWIG_Tcl_SetConstantObj(interp, "CATEGORY_QUERY", SWIG_From_int(static_cast< int >(CATEGORY_QUERY)));
  SWIG_Tcl_SetConstantObj(interp, "CATEGORY_OPTIMIZER", SWIG_From_int(static_cast< int >(CATEGORY_OPTIMIZER)));
  SWIG_Tcl_SetConstantObj(interp, "CATEGORY_DICTIONARY", SWIG_From_int(static_cast< int >(CATEGORY_DICTIONARY)));
  SWIG_Tcl_SetConstantObj(interp, "CATEGORY_CONTAINER", SWIG_From_int(static_cast< int >(CATEGORY_CONTAINER)));
  SWIG_Tcl_SetConstantObj(interp, "CATEGORY_NODESTORE", SWIG_From_int(static_cast< int >(CATEGORY_NODESTORE)));
  SWIG_Tcl_SetConstantObj(interp, "CATEGORY_MANAGER", SWIG_From_int(static_cast< int >(CATEGORY_MANAGER)));
  SWIG_Tcl_SetConstantObj(interp, "CATEGORY_ALL", SWIG_From_int(static_cast< int >(CATEGORY_ALL)));
  SWIG_Tcl_SetConstantObj(interp, "metaDataNamespace_uri", SWIG_FromCharPtr("http://www.sleepycat.com/2002/dbxml"));
  SWIG_Tcl_SetConstantObj(interp, "metaDataNamespace_prefix", SWIG_FromCharPtr("dbxml"));
  SWIG_Tcl_SetConstantObj(interp, "metaDataName_name", SWIG_FromCharPtr("name"));
  SWIG_Tcl_SetConstantObj(interp, "metaDataName_root", SWIG_FromCharPtr("root"));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexLookup_NONE", SWIG_From_int(static_cast< int >(XmlIndexLookup::NONE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexLookup_EQ", SWIG_From_int(static_cast< int >(XmlIndexLookup::EQ)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexLookup_GT", SWIG_From_int(static_cast< int >(XmlIndexLookup::GT)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexLookup_GTE", SWIG_From_int(static_cast< int >(XmlIndexLookup::GTE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexLookup_LT", SWIG_From_int(static_cast< int >(XmlIndexLookup::LT)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexLookup_LTE", SWIG_From_int(static_cast< int >(XmlIndexLookup::LTE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlContainer_WholedocContainer", SWIG_From_int(static_cast< int >(XmlContainer::WholedocContainer)));
  SWIG_Tcl_SetConstantObj(interp, "XmlContainer_NodeContainer", SWIG_From_int(static_cast< int >(XmlContainer::NodeContainer)));
  SWIG_Tcl_SetConstantObj(interp, "XmlQueryContext_LiveValues", SWIG_From_int(static_cast< int >(XmlQueryContext::LiveValues)));
  SWIG_Tcl_SetConstantObj(interp, "XmlQueryContext_Eager", SWIG_From_int(static_cast< int >(XmlQueryContext::Eager)));
  SWIG_Tcl_SetConstantObj(interp, "XmlQueryContext_Lazy", SWIG_From_int(static_cast< int >(XmlQueryContext::Lazy)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_ELEMENT_NODE", SWIG_From_int(static_cast< int >(XmlValue::ELEMENT_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_ATTRIBUTE_NODE", SWIG_From_int(static_cast< int >(XmlValue::ATTRIBUTE_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_TEXT_NODE", SWIG_From_int(static_cast< int >(XmlValue::TEXT_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_CDATA_SECTION_NODE", SWIG_From_int(static_cast< int >(XmlValue::CDATA_SECTION_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_ENTITY_REFERENCE_NODE", SWIG_From_int(static_cast< int >(XmlValue::ENTITY_REFERENCE_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_ENTITY_NODE", SWIG_From_int(static_cast< int >(XmlValue::ENTITY_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_PROCESSING_INSTRUCTION_NODE", SWIG_From_int(static_cast< int >(XmlValue::PROCESSING_INSTRUCTION_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_COMMENT_NODE", SWIG_From_int(static_cast< int >(XmlValue::COMMENT_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_DOCUMENT_NODE", SWIG_From_int(static_cast< int >(XmlValue::DOCUMENT_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_DOCUMENT_TYPE_NODE", SWIG_From_int(static_cast< int >(XmlValue::DOCUMENT_TYPE_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_DOCUMENT_FRAGMENT_NODE", SWIG_From_int(static_cast< int >(XmlValue::DOCUMENT_FRAGMENT_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_NOTATION_NODE", SWIG_From_int(static_cast< int >(XmlValue::NOTATION_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_NONE", SWIG_From_int(static_cast< int >(XmlValue::NONE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_NODE", SWIG_From_int(static_cast< int >(XmlValue::NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_ANY_SIMPLE_TYPE", SWIG_From_int(static_cast< int >(XmlValue::ANY_SIMPLE_TYPE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_ANY_URI", SWIG_From_int(static_cast< int >(XmlValue::ANY_URI)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_BASE_64_BINARY", SWIG_From_int(static_cast< int >(XmlValue::BASE_64_BINARY)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_BOOLEAN", SWIG_From_int(static_cast< int >(XmlValue::BOOLEAN)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_DATE", SWIG_From_int(static_cast< int >(XmlValue::DATE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_DATE_TIME", SWIG_From_int(static_cast< int >(XmlValue::DATE_TIME)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_DAY_TIME_DURATION", SWIG_From_int(static_cast< int >(XmlValue::DAY_TIME_DURATION)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_DECIMAL", SWIG_From_int(static_cast< int >(XmlValue::DECIMAL)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_DOUBLE", SWIG_From_int(static_cast< int >(XmlValue::DOUBLE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_DURATION", SWIG_From_int(static_cast< int >(XmlValue::DURATION)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_FLOAT", SWIG_From_int(static_cast< int >(XmlValue::FLOAT)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_G_DAY", SWIG_From_int(static_cast< int >(XmlValue::G_DAY)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_G_MONTH", SWIG_From_int(static_cast< int >(XmlValue::G_MONTH)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_G_MONTH_DAY", SWIG_From_int(static_cast< int >(XmlValue::G_MONTH_DAY)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_G_YEAR", SWIG_From_int(static_cast< int >(XmlValue::G_YEAR)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_G_YEAR_MONTH", SWIG_From_int(static_cast< int >(XmlValue::G_YEAR_MONTH)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_HEX_BINARY", SWIG_From_int(static_cast< int >(XmlValue::HEX_BINARY)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_NOTATION", SWIG_From_int(static_cast< int >(XmlValue::NOTATION)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_QNAME", SWIG_From_int(static_cast< int >(XmlValue::QNAME)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_STRING", SWIG_From_int(static_cast< int >(XmlValue::STRING)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_TIME", SWIG_From_int(static_cast< int >(XmlValue::TIME)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_YEAR_MONTH_DURATION", SWIG_From_int(static_cast< int >(XmlValue::YEAR_MONTH_DURATION)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_UNTYPED_ATOMIC", SWIG_From_int(static_cast< int >(XmlValue::UNTYPED_ATOMIC)));
  SWIG_Tcl_SetConstantObj(interp, "XmlValue_BINARY", SWIG_From_int(static_cast< int >(XmlValue::BINARY)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_UNIQUE_OFF", SWIG_From_int(static_cast< int >(XmlIndexSpecification::UNIQUE_OFF)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_UNIQUE_ON", SWIG_From_int(static_cast< int >(XmlIndexSpecification::UNIQUE_ON)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_PATH_NONE", SWIG_From_int(static_cast< int >(XmlIndexSpecification::PATH_NONE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_PATH_NODE", SWIG_From_int(static_cast< int >(XmlIndexSpecification::PATH_NODE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_PATH_EDGE", SWIG_From_int(static_cast< int >(XmlIndexSpecification::PATH_EDGE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_NODE_NONE", SWIG_From_int(static_cast< int >(XmlIndexSpecification::NODE_NONE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_NODE_ELEMENT", SWIG_From_int(static_cast< int >(XmlIndexSpecification::NODE_ELEMENT)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_NODE_ATTRIBUTE", SWIG_From_int(static_cast< int >(XmlIndexSpecification::NODE_ATTRIBUTE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_NODE_METADATA", SWIG_From_int(static_cast< int >(XmlIndexSpecification::NODE_METADATA)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_KEY_NONE", SWIG_From_int(static_cast< int >(XmlIndexSpecification::KEY_NONE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_KEY_PRESENCE", SWIG_From_int(static_cast< int >(XmlIndexSpecification::KEY_PRESENCE)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_KEY_EQUALITY", SWIG_From_int(static_cast< int >(XmlIndexSpecification::KEY_EQUALITY)));
  SWIG_Tcl_SetConstantObj(interp, "XmlIndexSpecification_KEY_SUBSTRING", SWIG_From_int(static_cast< int >(XmlIndexSpecification::KEY_SUBSTRING)));
  SWIG_Tcl_SetConstantObj(interp, "XmlContainerConfig_On", SWIG_From_int(static_cast< int >(XmlContainerConfig::On)));
  SWIG_Tcl_SetConstantObj(interp, "XmlContainerConfig_Off", SWIG_From_int(static_cast< int >(XmlContainerConfig::Off)));
  SWIG_Tcl_SetConstantObj(interp, "XmlContainerConfig_UseDefault", SWIG_From_int(static_cast< int >(XmlContainerConfig::UseDefault)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_StartElement", SWIG_From_int(static_cast< int >(XmlEventReader::StartElement)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_EndElement", SWIG_From_int(static_cast< int >(XmlEventReader::EndElement)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_Characters", SWIG_From_int(static_cast< int >(XmlEventReader::Characters)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_CDATA", SWIG_From_int(static_cast< int >(XmlEventReader::CDATA)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_Comment", SWIG_From_int(static_cast< int >(XmlEventReader::Comment)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_Whitespace", SWIG_From_int(static_cast< int >(XmlEventReader::Whitespace)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_StartDocument", SWIG_From_int(static_cast< int >(XmlEventReader::StartDocument)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_EndDocument", SWIG_From_int(static_cast< int >(XmlEventReader::EndDocument)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_StartEntityReference", SWIG_From_int(static_cast< int >(XmlEventReader::StartEntityReference)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_EndEntityReference", SWIG_From_int(static_cast< int >(XmlEventReader::EndEntityReference)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_ProcessingInstruction", SWIG_From_int(static_cast< int >(XmlEventReader::ProcessingInstruction)));
  SWIG_Tcl_SetConstantObj(interp, "XmlEventReader_DTD", SWIG_From_int(static_cast< int >(XmlEventReader::DTD)));
  return TCL_OK;
}
SWIGEXPORT int Dbxml_tcl_SafeInit(Tcl_Interp *interp) {
  return SWIG_init(interp);
}

