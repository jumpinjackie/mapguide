/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sleepycat.dbxml;

    import java.util.*;
    
public class XmlResults {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected XmlResults(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XmlResults obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public void delete() /* no exception */ {
    if(swigCPtr != 0 && swigCMemOwn) {
	swigCMemOwn = false;
	if(writer_ != null){
		try {
			writer_.close();
		} catch (XmlException e) {}
	}       
	dbxml_javaJNI.delete_XmlResults(swigCPtr);
	if(resultsMap != null) {
		Iterator<XmlResults> itr = resultsMap.values().iterator();
		while(itr.hasNext())
			itr.next().delete();
	}
    }
    swigCPtr = 0;
 }

    protected HashMap<Long, XmlResults> resultsMap = null;
	
    public XmlResults(XmlResults results) throws XmlException {
	this(dbxml_javaJNI.XmlResults_copy(XmlResults.getCPtr(results), results), true);
	if(results.resultsMap != null) resultsMap = new HashMap<Long, XmlResults>(results.resultsMap);
    }

    public XmlValue next() throws XmlException
    {
	XmlValue value = nextInternal();
	if(value == null || value.isNull())
	    return null;
	if(value.getReturnResultPtr() != 0)
	    value.setResult(resultsMapGet(new Long(value.getReturnResultPtr())));
	else if(value.isNode())
	    value.setResult(this);
	return value;
    }
    
    public XmlValue previous() throws XmlException
    {
	XmlValue value = previousInternal();
	if(value == null || value.isNull())
	    return null;
	if(value.getReturnResultPtr() != 0)
	    value.setResult(resultsMapGet(new Long(value.getReturnResultPtr())));
	else if(value.isNode())
	    value.setResult(this);
	return value;
    }
    
    public XmlValue peek() throws XmlException
    {
	XmlValue value = peekInternal();
	if(value == null || value.isNull())
	    return null;
	if(value.getReturnResultPtr() != 0)
	    value.setResult(resultsMapGet(new Long(value.getReturnResultPtr())));
	else if(value.isNode())
	    value.setResult(this);
	return value;
    }
    
    public void add(XmlValue value) throws XmlException
    {
	if(value == null || value.isNull())
	    throw new XmlException(XmlException.INVALID_VALUE, 
				   "A null XmlValue object cannot be added to the result set.");
	if (value.getResultPtr() != 0) {
		XmlResults res = XmlResults.copy(value.getResult());
	    resultsMapPut(new Long(value.getResultPtr()), res);
	}
	addInternal(value);
    }
    
    public void reset() throws XmlException
    {
	resetInternal();
    }
    
    public boolean next(XmlDocument document) throws XmlException
    {
	XmlDocument doc = nextDocumentInternal();
	if(doc == null)
	    return false;
	document.copy(doc);
	document.setResults(this);
	return true;
    }
    
    public boolean previous(XmlDocument document) throws XmlException
    {
	XmlDocument doc = previousDocumentInternal();
	if(doc == null)
	    return false;
	document.copy(doc);
	document.setResults(this);
	return true;
    }
    
    public boolean peek(XmlDocument document) throws XmlException
    {
	XmlDocument doc = peekDocumentInternal();
	if(doc == null)
	    return false;
	document.copy(doc);
	document.setResults(this);
	return true;
    }
    
    XmlEventWriter writer_ = null;
    public XmlEventWriter asEventWriter() throws XmlException {
        writer_ = asEventWriterInternal();
        return writer_;
    }

    protected XmlResults resultsMapGet(Long key){
	if(resultsMap == null) return null;
	return (XmlResults)resultsMap.get(key);
    }
    protected void resultsMapPut(Long key, XmlResults value){
	if(resultsMap == null) resultsMap = new HashMap<Long, XmlResults>();
	if (resultsMap.get(key) == null)
		resultsMap.put(key, value);
	else
		value.delete();
    }
    
  public boolean hasNext() throws XmlException {
    return dbxml_javaJNI.XmlResults_hasNext(swigCPtr, this);
  }

  public boolean hasPrevious() throws XmlException {
    return dbxml_javaJNI.XmlResults_hasPrevious(swigCPtr, this);
  }

  public boolean isNull() throws XmlException {
    return dbxml_javaJNI.XmlResults_isNull(swigCPtr, this);
  }

  public int getEvaluationType() throws XmlException {
    return dbxml_javaJNI.XmlResults_getEvaluationType(swigCPtr, this);
  }

  public int size() throws XmlException { return dbxml_javaJNI.XmlResults_size(swigCPtr, this); }

  public void resetInternal() throws XmlException {
    dbxml_javaJNI.XmlResults_resetInternal(swigCPtr, this);
  }

  public XmlResults copyResults() throws XmlException {
    return new XmlResults(dbxml_javaJNI.XmlResults_copyResults(swigCPtr, this), true);
  }

  public void concatResults(XmlResults from) throws XmlException {
    dbxml_javaJNI.XmlResults_concatResults(swigCPtr, this, XmlResults.getCPtr(from), from);
  }

  protected static XmlResults copy(XmlResults results) {
    long cPtr = dbxml_javaJNI.XmlResults_copy(XmlResults.getCPtr(results), results);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  protected XmlValue nextInternal() { return dbxml_javaJNI.XmlResults_nextInternal(swigCPtr, this); }

  protected XmlValue previousInternal() { return dbxml_javaJNI.XmlResults_previousInternal(swigCPtr, this); }

  protected XmlValue peekInternal() { return dbxml_javaJNI.XmlResults_peekInternal(swigCPtr, this); }

  protected void addInternal(XmlValue value) {
    dbxml_javaJNI.XmlResults_addInternal(swigCPtr, this, value);
  }

  protected XmlDocument nextDocumentInternal() { return dbxml_javaJNI.XmlResults_nextDocumentInternal(swigCPtr, this); }

  protected XmlDocument previousDocumentInternal() { return dbxml_javaJNI.XmlResults_previousDocumentInternal(swigCPtr, this); }

  protected XmlDocument peekDocumentInternal() { return dbxml_javaJNI.XmlResults_peekDocumentInternal(swigCPtr, this); }

  protected XmlEventWriter asEventWriterInternal() {
    return new XmlEventWriter(dbxml_javaJNI.XmlResults_asEventWriterInternal(swigCPtr, this), false);
  }

}
