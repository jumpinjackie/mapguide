/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sleepycat.dbxml;

public class XmlDebugListener {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected XmlDebugListener(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XmlDebugListener obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public void delete() /* no exception */ {
    if(swigCPtr != 0 && swigCMemOwn) {
	swigCMemOwn = false;
	dbxml_javaJNI.delete_XmlDebugListener(swigCPtr);
    }
    swigCPtr = 0;
 }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() throws XmlException {
    swigCMemOwn = false;
    dbxml_javaJNI.XmlDebugListener_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() throws XmlException {
    swigCMemOwn = true;
    dbxml_javaJNI.XmlDebugListener_change_ownership(this, swigCPtr, true);
  }

  protected XmlDebugListener() {
    this(dbxml_javaJNI.new_XmlDebugListener(), true);
    dbxml_javaJNI.XmlDebugListener_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void start(XmlStackFrame stack) throws XmlException {
    if (getClass() == XmlDebugListener.class) dbxml_javaJNI.XmlDebugListener_start(swigCPtr, this, XmlStackFrame.getCPtr(stack), stack); else dbxml_javaJNI.XmlDebugListener_startSwigExplicitXmlDebugListener(swigCPtr, this, XmlStackFrame.getCPtr(stack), stack);
  }

  public void end(XmlStackFrame stack) throws XmlException {
    if (getClass() == XmlDebugListener.class) dbxml_javaJNI.XmlDebugListener_end(swigCPtr, this, XmlStackFrame.getCPtr(stack), stack); else dbxml_javaJNI.XmlDebugListener_endSwigExplicitXmlDebugListener(swigCPtr, this, XmlStackFrame.getCPtr(stack), stack);
  }

  public void enter(XmlStackFrame stack) throws XmlException {
    if (getClass() == XmlDebugListener.class) dbxml_javaJNI.XmlDebugListener_enter(swigCPtr, this, XmlStackFrame.getCPtr(stack), stack); else dbxml_javaJNI.XmlDebugListener_enterSwigExplicitXmlDebugListener(swigCPtr, this, XmlStackFrame.getCPtr(stack), stack);
  }

  public void exit(XmlStackFrame stack) throws XmlException {
    if (getClass() == XmlDebugListener.class) dbxml_javaJNI.XmlDebugListener_exit(swigCPtr, this, XmlStackFrame.getCPtr(stack), stack); else dbxml_javaJNI.XmlDebugListener_exitSwigExplicitXmlDebugListener(swigCPtr, this, XmlStackFrame.getCPtr(stack), stack);
  }

  public void error(XmlException error, XmlStackFrame stack) throws XmlException {
    if (getClass() == XmlDebugListener.class) dbxml_javaJNI.XmlDebugListener_error(swigCPtr, this,  error , XmlStackFrame.getCPtr(stack), stack); else dbxml_javaJNI.XmlDebugListener_errorSwigExplicitXmlDebugListener(swigCPtr, this,  error , XmlStackFrame.getCPtr(stack), stack);
  }

}
