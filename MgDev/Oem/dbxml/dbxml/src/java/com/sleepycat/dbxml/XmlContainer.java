/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sleepycat.dbxml;

public class XmlContainer {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected XmlContainer(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XmlContainer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public void delete() /* no exception */ {
    if(swigCPtr != 0 && swigCMemOwn) {
	swigCMemOwn = false;
	dbxml_javaJNI.delete_XmlContainer(swigCPtr);
    }
    swigCPtr = 0;
 }

    private XmlContainerConfig config;
    private XmlManager manager;

    public XmlContainerConfig getContainerConfig() throws XmlException {
	return config;
    }

    public XmlManager getManager() throws XmlException {
	return manager;
    }

    public void close() throws XmlException {
	delete(); // delete the C++ object, as well
    }
    
    // Start XmlDocument-based putDocument methods
    public void putDocument(XmlDocument document)
	throws XmlException {
	putDocument(null, document, null, null);
    }
    
    public void putDocument(XmlDocument document,
			    XmlUpdateContext context)
	throws XmlException {
	putDocument(null, document, null, null);
    }
    
    public void putDocument(XmlDocument document,
			    XmlDocumentConfig config)
	throws XmlException {
	putDocument(null, document, null, config);
    }

    public void putDocument(XmlDocument document,
			    XmlUpdateContext context,
			    XmlDocumentConfig config)
	throws XmlException {
	putDocument(null, document, null, config);
    }
    
    public void putDocument(XmlTransaction txn, XmlDocument document)
	throws XmlException {
	putDocument(txn, document, null, null);
    }
    
    public void putDocument(XmlTransaction txn, XmlDocument document,
			    XmlUpdateContext context)
	throws XmlException {
	putDocument(txn, document, null, null);
    }
    
    public void putDocument(XmlTransaction txn, XmlDocument document,
			    XmlDocumentConfig config)
	throws XmlException {
	putDocument(txn, document, null, config);
    }

    // all putDocument calls funnel through this one
    public void putDocument(XmlTransaction txn, XmlDocument document,
			    XmlUpdateContext context,
			    XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	XmlDocument doc;
	if (txn != null)
	    doc = putDocumentInternal(txn, document, flags);
	else
	    doc = putDocumentInternal(document, flags);
	document.copy(doc);
	document.setManager(manager);
	if (txn != null)
	    document.setTransaction(txn);
    }
    
    // Start XmlInputStream-based putDocument methods
    public String putDocument(String name,
			      XmlInputStream input)
	throws XmlException {
	return putDocument(null, name, input, null, null);
    }
    
    public String putDocument(String name,
			      XmlInputStream input,
			      XmlUpdateContext context)
	throws XmlException {
	return putDocument(null, name, input, null, null);
    }
    
    public String putDocument(String name,
			      XmlInputStream input,
			      XmlDocumentConfig config)
	throws XmlException {
	return putDocument(null, name, input, null, config);
    }

    public String putDocument(String name,
			      XmlInputStream input,
			      XmlUpdateContext context,
			      XmlDocumentConfig config)
	throws XmlException {
	return putDocument(null, name, input, null, config);
    }
    
    public String putDocument(XmlTransaction txn,
			      String name,
			      XmlInputStream input)
	throws XmlException {
	return putDocument(txn, name, input, null, null);
    }
    
    public String putDocument(XmlTransaction txn,
			      String name,
			      XmlInputStream input,
			      XmlUpdateContext context)
	throws XmlException {
	return putDocument(txn, name, input, null, null);
    }
    
    public String putDocument(XmlTransaction txn,
			      String name,
			      XmlInputStream input,
			      XmlDocumentConfig config)
	throws XmlException {
	return putDocument(txn, name, input, null, config);
    }

    // XmlInputStream putDocument methods funnel through here
    public String putDocument(XmlTransaction txn,
			      String name,
			      XmlInputStream input,
			      XmlUpdateContext context,
			      XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	String docName = "";
	try{
	    if (txn != null)
		docName = putDocument(txn, name, input, flags);
	    else
		docName = putDocument(name, input, flags);
	}catch(XmlException e){
	    input.release();
	    throw e;
	}
	input.release();
	return docName;
    }
    
    // Start String-based putDocument methods
    public String putDocument(String name,
			      String content)
	throws XmlException {
	return putDocument(null, name, content, null, null);
    }
    
    public String putDocument(String name,
			      String content,
			      XmlUpdateContext context)
	throws XmlException {
	return putDocument(null, name, content, null, null);
    }
    
    public String putDocument(String name,
			      String content,
			      XmlDocumentConfig config)
	throws XmlException {
	return putDocument(null, name, content, null, config);
    }

    public String putDocument(String name,
			      String content,
			      XmlUpdateContext context,
			      XmlDocumentConfig config)
	throws XmlException {
	return putDocument(null, name, content, null, config);
    }
    
    public String putDocument(XmlTransaction txn,
			      String name,
			      String content)
	throws XmlException {
	return putDocument(txn, name, content, null, null);
    }
    
    public String putDocument(XmlTransaction txn,
			      String name,
			      String content,
			      XmlUpdateContext context)
	throws XmlException {
	return putDocument(txn, name, content, null, null);
    }
    
    public String putDocument(XmlTransaction txn,
			      String name,
			      String content,
			      XmlDocumentConfig config)
	throws XmlException {
	return putDocument(txn, name, content, null, config);
    }

    // String-based putDocument calls funnel through here
    public String putDocument(XmlTransaction txn,
			      String name,
			      String content,
			      XmlUpdateContext context,
			      XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	if (txn != null)
	    return putDocument(txn, name, content, flags);
	else
	    return putDocument(name, content, flags);
    }

    // Start XmlEventReader-based putDocument methods    
    public String putDocument(String name,
			      XmlEventReader reader)
	throws XmlException {
	return putDocument(null, name, reader, null, null);
    }
    
    public String putDocument(String name,
			      XmlEventReader reader,
			      XmlDocumentConfig config)
	throws XmlException {
	return putDocument(null, name, reader, null, config);
    }

    public String putDocument(String name,
			      XmlEventReader reader,
			      XmlUpdateContext context,
			      XmlDocumentConfig config)
	throws XmlException {
	return putDocument(null, name, reader, context, config);
    }

    public String putDocument(String name,
			      XmlEventReader reader,
			      XmlUpdateContext context)
	throws XmlException {
	return putDocument(null, name, reader, context, null);
    }
    
    public String putDocument(XmlTransaction txn,
			      String name,
			      XmlEventReader reader,
			      XmlDocumentConfig config)
	throws XmlException {
	return putDocument(txn, name, reader, null, config);
    }

    public String putDocument(XmlTransaction txn, 
			      String name,
			      XmlEventReader reader)
	throws XmlException {
	return putDocument(txn, name, reader, null, null);
    }

    public String putDocument(XmlTransaction txn, 
			      String name,
			      XmlEventReader reader,
			      XmlUpdateContext context)
	throws XmlException {
	return putDocument(txn, name, reader, context, null);
    }

    // all XmlEventReader-based putDocument methods funnel here
    public String putDocument(XmlTransaction txn,
			      String name,
			      XmlEventReader reader,
			      XmlUpdateContext context,
			      XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	String ret = "";
	try{
	    if (txn != null)
		ret = putDocument(txn, name, reader, flags);
	    else
		ret = putDocument(name, reader, flags);
	}catch(XmlException e){
	    reader.release();
	    throw e;
	}
	reader.release(); /* no further access */
	return ret;
    }
    
    public XmlEventWriter putDocumentAsEventWriter(XmlDocument document)
	throws XmlException {
	return putDocumentAsEventWriter(null, document, null, null);
    }
    
    public XmlEventWriter putDocumentAsEventWriter(XmlDocument document,
						   XmlDocumentConfig config)
	throws XmlException {
	return putDocumentAsEventWriter(null, document, null, config);
    }
    
    public XmlEventWriter putDocumentAsEventWriter(XmlDocument document,
						   XmlUpdateContext context)
	throws XmlException {
	return putDocumentAsEventWriter(null, document, null, null);
    }

    public XmlEventWriter putDocumentAsEventWriter(XmlDocument document,
						   XmlUpdateContext context,
						   XmlDocumentConfig config)
	throws XmlException {
	return putDocumentAsEventWriter(null, document, null, config);
    }
    
    public XmlEventWriter putDocumentAsEventWriter(XmlTransaction txn,
						   XmlDocument document)
	throws XmlException {
	return putDocumentAsEventWriter(txn, document, null, null);
    }
    
    public XmlEventWriter putDocumentAsEventWriter(XmlTransaction txn,
						   XmlDocument document,
						   XmlUpdateContext context)
	throws XmlException {
	return putDocumentAsEventWriter(txn, document, null, null);
    }
    
    public XmlEventWriter putDocumentAsEventWriter(XmlTransaction txn,
						   XmlDocument document,
						   XmlDocumentConfig config)
	throws XmlException {
	return putDocumentAsEventWriter(txn, document, null, config);
    }

    // All calls to putDocumentAsEventWriter funnel through this one
    public XmlEventWriter putDocumentAsEventWriter(XmlTransaction txn,
						   XmlDocument document,
						   XmlUpdateContext context,
						   XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	document.clearContent(); // this call clears any existing content
	long[] ids = new long[2];
	XmlEventWriter writer;
	if (txn != null)
	    writer = putDocumentAsEventWriter(txn, document, flags, ids);
	else
	    writer = putDocumentAsEventWriter(document, flags, ids);
	XmlDocument doc = new XmlDocument(ids[0], (int)ids[1], null);
	document.copy(doc);
	document.setManager(manager);
	if (txn != null)
	    document.setTransaction(txn);;
	return writer;
    }
    
    public void deleteDocument(String name, XmlUpdateContext context)
	throws XmlException {
	deleteDocument(name);
    }
    
    public void deleteDocument(XmlDocument document)
	throws XmlException {
	deleteDocument(document, null);
    }
    
    public void deleteDocument(XmlDocument document, XmlUpdateContext context)
	throws XmlException {
	XmlDocument doc = deleteDocumentInternal(document);
	document.copy(doc);
	document.clearID();
	document.setManager(manager);
    }
    
    public void deleteDocument(XmlTransaction txn, String name, XmlUpdateContext context)
	throws XmlException {
	deleteDocument(txn, name);
    }
    
    public void deleteDocument(XmlTransaction txn, XmlDocument document)
	throws XmlException {
	deleteDocument(txn, document, null);
    }
    
    public void deleteDocument(XmlTransaction txn, XmlDocument document,
			       XmlUpdateContext context)
	throws XmlException {
	XmlDocument doc = deleteDocumentInternal(txn, document);
	document.copy(doc);
	document.clearID();
	document.setManager(manager);
	document.setTransaction(txn);
    }
    
    public void updateDocument(XmlDocument document)
	throws XmlException {
	updateDocument(document, null);
    }
	
    public void updateDocument(XmlDocument document,
			       XmlUpdateContext context)
	throws XmlException {
	XmlDocument doc = updateDocumentInternal(document);
	document.copy(doc);
	document.setManager(manager);
    }
    
    public void updateDocument(XmlTransaction txn, XmlDocument document)
	throws XmlException {
	updateDocument(txn, document, null);
    }
    
    public void updateDocument(XmlTransaction txn, XmlDocument document,
			       XmlUpdateContext context)
	throws XmlException {
	XmlDocument doc = updateDocumentInternal(txn, document);
	document.copy(doc);
	document.setManager(manager);
	document.setTransaction(txn);
    }
    
    public void setIndexSpecification(XmlIndexSpecification index, XmlUpdateContext context) throws XmlException {
	setIndexSpecification(index);
    }

    public void addIndex(String uri, String name, String index, XmlUpdateContext context) throws XmlException {
	addIndex(uri, name, index);
    }

    public void addIndex(String uri, String name, int indexType, int syntaxType, XmlUpdateContext context) throws XmlException {
	addIndex(uri, name, indexType, syntaxType);
    }

    public void deleteIndex(String uri, String name, String index, XmlUpdateContext context) throws XmlException {
	deleteIndex(uri, name, index);
    }

    public void replaceIndex(String uri, String name, String index, XmlUpdateContext context) throws XmlException {
	replaceIndex(uri, name, index);
    }

    public void addDefaultIndex(String index, XmlUpdateContext context) throws XmlException {
	addDefaultIndex(index);
    }

    public void deleteDefaultIndex(String index, XmlUpdateContext context) throws XmlException {
	deleteDefaultIndex(index);
    }

    public void setIndexSpecification(XmlTransaction txn, XmlIndexSpecification index, XmlUpdateContext context) throws XmlException {
	setIndexSpecification(txn, index);
    }

    public void addIndex(XmlTransaction txn, String uri, String name, String index, XmlUpdateContext context) throws XmlException {
	addIndex(txn, uri, name, index);
    }

    public void addIndex(XmlTransaction txn, String uri, String name, int indexType, int syntaxType, XmlUpdateContext context) throws XmlException {
	addIndex(txn, uri, name, indexType, syntaxType);
    }

    public void deleteIndex(XmlTransaction txn, String uri, String name, String index, XmlUpdateContext context) throws XmlException {
	deleteIndex(txn, uri, name, index);
    }

    public void replaceIndex(XmlTransaction txn, String uri, String name, String index, XmlUpdateContext context) throws XmlException {
	replaceIndex(txn, uri, name, index);
    }

    public void addDefaultIndex(XmlTransaction txn, String index, XmlUpdateContext context) throws XmlException {
	addDefaultIndex(txn, index);
    }

    public void deleteDefaultIndex(XmlTransaction txn, String index, XmlUpdateContext context) throws XmlException {
	deleteDefaultIndex(txn, index);
    }
    
    public void replaceDefaultIndex(String index, XmlUpdateContext context) throws XmlException {
	replaceDefaultIndex(index);
    }

    public void replaceDefaultIndex(XmlTransaction txn, String index, XmlUpdateContext context) throws XmlException {
	replaceDefaultIndex(txn, index);
    }

    public XmlDocument getDocument(String name)
	throws XmlException {
	return getDocument(name, null);
    }

    public XmlDocument getDocument(String name,
				   XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	XmlDocument doc = getDocumentInternal(name, flags);
	doc.setManager(manager);
	return doc;
    }

    public XmlDocument getDocument(XmlTransaction txn,
				   String name)
	throws XmlException {
	return getDocument(txn, name, null);
    }

    public XmlDocument getDocument(XmlTransaction txn,
				   String name,
				   XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	XmlDocument doc = getDocumentInternal(txn, name, flags);
	doc.setManager(manager);
	doc.setTransaction(txn);
	return doc;
    }

    public XmlResults getAllDocuments(XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	return getAllDocuments(flags);
    }


    public XmlResults getAllDocuments(XmlTransaction txn,
				      XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	return getAllDocuments(txn, flags);
    }
    
    public XmlResults getNode(XmlTransaction txn, String name, 
			      XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	return getNode(txn, name, flags);
    }
	
    public XmlIndexSpecification getIndexSpecification(XmlTransaction txn,
						       XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	return getIndexSpecification(txn, flags);
    }

    public XmlResults lookupIndex(XmlQueryContext context,
				  String uri, String name,
				  String index,
				  XmlValue value,
				  XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	return lookupIndex(context, uri, name, index, value, flags);
    }

    public XmlResults lookupIndex(XmlTransaction txn,
				  XmlQueryContext context,
				  String uri, String name,
				  String index,
				  XmlValue value,
				  XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	return lookupIndex(txn, context, uri, name, index, value, flags);
    }

    public XmlResults lookupIndex(XmlQueryContext context,
				  String uri, String name,
				  String parentUri, String parentName,
				  String index,
				  XmlValue value,
				  XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	return lookupIndex(context, uri, name,
			   parentUri, parentName, index, value, flags);
    }

    public XmlResults lookupIndex(XmlTransaction txn,
				  XmlQueryContext context,
				  String uri, String name,
				  String parentUri, String parentName,
				  String index,
				  XmlValue value,
				  XmlDocumentConfig config)
	throws XmlException {
	int flags = (config == null) ? 0 : config.makeFlags();
	return lookupIndex(txn, context, uri, name,
			   parentUri, parentName, index, value, flags);
    }

    /* package */
    void setContainerConfig(XmlContainerConfig config) {
	this.config = config;
    }

    /* package */
    void setManager(XmlManager manager) {
	this.manager = manager;
    }

    
  public XmlContainer(XmlContainer o) throws XmlException {
    this(dbxml_javaJNI.new_XmlContainer(XmlContainer.getCPtr(o), o), true);
  }

  public void sync() throws XmlException {
    dbxml_javaJNI.XmlContainer_sync(swigCPtr, this);
  }

  public boolean addAlias(String alias) throws XmlException {
    return dbxml_javaJNI.XmlContainer_addAlias(swigCPtr, this, alias);
  }

  public boolean removeAlias(String alias) throws XmlException {
    return dbxml_javaJNI.XmlContainer_removeAlias(swigCPtr, this, alias);
  }

  public String getName() throws XmlException {
    return dbxml_javaJNI.XmlContainer_getName(swigCPtr, this);
  }

  public int getContainerType() throws XmlException {
    return dbxml_javaJNI.XmlContainer_getContainerType(swigCPtr, this);
  }

  public boolean getIndexNodes() throws XmlException {
    return dbxml_javaJNI.XmlContainer_getIndexNodes(swigCPtr, this);
  }

  public int getPageSize() throws XmlException {
    return dbxml_javaJNI.XmlContainer_getPageSize(swigCPtr, this);
  }

  public boolean getAutoIndexing() throws XmlException {
    return dbxml_javaJNI.XmlContainer_getAutoIndexing__SWIG_0(swigCPtr, this);
  }

  public boolean getAutoIndexing(XmlTransaction txn) throws XmlException {
    return dbxml_javaJNI.XmlContainer_getAutoIndexing__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn);
  }

  public int getNumDocuments() throws XmlException { return dbxml_javaJNI.XmlContainer_getNumDocuments__SWIG_0(swigCPtr, this); }

  public int getNumDocuments(XmlTransaction txn) throws XmlException { return dbxml_javaJNI.XmlContainer_getNumDocuments__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn); }

  public XmlIndexSpecification getIndexSpecification() throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_getIndexSpecification__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new XmlIndexSpecification(cPtr, true);
  }

  public XmlIndexSpecification getIndexSpecification(XmlTransaction txn) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_getIndexSpecification__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn);
    return (cPtr == 0) ? null : new XmlIndexSpecification(cPtr, true);
  }

  protected XmlIndexSpecification getIndexSpecification(XmlTransaction txn, int flags) {
    long cPtr = dbxml_javaJNI.XmlContainer_getIndexSpecification__SWIG_2(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, flags);
    return (cPtr == 0) ? null : new XmlIndexSpecification(cPtr, true);
  }

  protected XmlResults getAllDocuments(int flags) {
    long cPtr = dbxml_javaJNI.XmlContainer_getAllDocuments__SWIG_0(swigCPtr, this, flags);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  protected XmlResults getAllDocuments(XmlTransaction txn, int flags) {
    long cPtr = dbxml_javaJNI.XmlContainer_getAllDocuments__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, flags);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  protected XmlResults lookupIndex(XmlQueryContext context, String uri, String name, String index, XmlValue value, int flags) {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_0(swigCPtr, this,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, index, value, flags);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  public XmlResults lookupIndex(XmlQueryContext context, String uri, String name, String index, XmlValue value) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_1(swigCPtr, this,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, index, value);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  public XmlResults lookupIndex(XmlQueryContext context, String uri, String name, String index) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_2(swigCPtr, this,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, index);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  protected XmlResults lookupIndex(XmlQueryContext context, String uri, String name, String parent_uri, String parent_name, String index, XmlValue value, int flags) {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_3(swigCPtr, this,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, parent_uri, parent_name, index, value, flags);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  public XmlResults lookupIndex(XmlQueryContext context, String uri, String name, String parent_uri, String parent_name, String index, XmlValue value) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_4(swigCPtr, this,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, parent_uri, parent_name, index, value);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  public XmlResults lookupIndex(XmlQueryContext context, String uri, String name, String parent_uri, String parent_name, String index) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_5(swigCPtr, this,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, parent_uri, parent_name, index);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  protected XmlResults lookupIndex(XmlTransaction txn, XmlQueryContext context, String uri, String name, String index, XmlValue value, int flags) {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_6(swigCPtr, this, XmlTransaction.getCPtr(txn), txn,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, index, value, flags);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  public XmlResults lookupIndex(XmlTransaction txn, XmlQueryContext context, String uri, String name, String index, XmlValue value) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_7(swigCPtr, this, XmlTransaction.getCPtr(txn), txn,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, index, value);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  public XmlResults lookupIndex(XmlTransaction txn, XmlQueryContext context, String uri, String name, String index) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_8(swigCPtr, this, XmlTransaction.getCPtr(txn), txn,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, index);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  protected XmlResults lookupIndex(XmlTransaction txn, XmlQueryContext context, String uri, String name, String parent_uri, String parent_name, String index, XmlValue value, int flags) {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_9(swigCPtr, this, XmlTransaction.getCPtr(txn), txn,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, parent_uri, parent_name, index, value, flags);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  public XmlResults lookupIndex(XmlTransaction txn, XmlQueryContext context, String uri, String name, String parent_uri, String parent_name, String index, XmlValue value) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_10(swigCPtr, this, XmlTransaction.getCPtr(txn), txn,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, parent_uri, parent_name, index, value);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  public XmlResults lookupIndex(XmlTransaction txn, XmlQueryContext context, String uri, String name, String parent_uri, String parent_name, String index) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupIndex__SWIG_11(swigCPtr, this, XmlTransaction.getCPtr(txn), txn,  context.getManagerPtr(), context.getDebugListenerCPtr(), context.evaluationType, context.queryInterruptSec, context.pack(), context , uri, name, parent_uri, parent_name, index);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  public XmlStatistics lookupStatistics(String uri, String name, String index, XmlValue value) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupStatistics__SWIG_0(swigCPtr, this, uri, name, index, value);
    return (cPtr == 0) ? null : new XmlStatistics(cPtr, true);
  }

  public XmlStatistics lookupStatistics(String uri, String name, String index) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupStatistics__SWIG_1(swigCPtr, this, uri, name, index);
    return (cPtr == 0) ? null : new XmlStatistics(cPtr, true);
  }

  public XmlStatistics lookupStatistics(String uri, String name, String parent_uri, String parent_name, String index, XmlValue value) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupStatistics__SWIG_2(swigCPtr, this, uri, name, parent_uri, parent_name, index, value);
    return (cPtr == 0) ? null : new XmlStatistics(cPtr, true);
  }

  public XmlStatistics lookupStatistics(String uri, String name, String parent_uri, String parent_name, String index) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupStatistics__SWIG_3(swigCPtr, this, uri, name, parent_uri, parent_name, index);
    return (cPtr == 0) ? null : new XmlStatistics(cPtr, true);
  }

  public XmlStatistics lookupStatistics(XmlTransaction txn, String uri, String name, String index, XmlValue value) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupStatistics__SWIG_4(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, uri, name, index, value);
    return (cPtr == 0) ? null : new XmlStatistics(cPtr, true);
  }

  public XmlStatistics lookupStatistics(XmlTransaction txn, String uri, String name, String index) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupStatistics__SWIG_5(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, uri, name, index);
    return (cPtr == 0) ? null : new XmlStatistics(cPtr, true);
  }

  public XmlStatistics lookupStatistics(XmlTransaction txn, String uri, String name, String parent_uri, String parent_name, String index, XmlValue value) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupStatistics__SWIG_6(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, uri, name, parent_uri, parent_name, index, value);
    return (cPtr == 0) ? null : new XmlStatistics(cPtr, true);
  }

  public XmlStatistics lookupStatistics(XmlTransaction txn, String uri, String name, String parent_uri, String parent_name, String index) throws XmlException {
    long cPtr = dbxml_javaJNI.XmlContainer_lookupStatistics__SWIG_7(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, uri, name, parent_uri, parent_name, index);
    return (cPtr == 0) ? null : new XmlStatistics(cPtr, true);
  }

  protected String getContainerConfigData(int[] data) {
    return dbxml_javaJNI.XmlContainer_getContainerConfigData(swigCPtr, this, data);
  }

  public void setAutoIndexing(boolean value) throws XmlException {
    dbxml_javaJNI.XmlContainer_setAutoIndexing__SWIG_0(swigCPtr, this, value);
  }

  public void setAutoIndexing(XmlTransaction txn, boolean value) throws XmlException {
    dbxml_javaJNI.XmlContainer_setAutoIndexing__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, value);
  }

  public void setIndexSpecification(XmlIndexSpecification index) throws XmlException {
    dbxml_javaJNI.XmlContainer_setIndexSpecification__SWIG_0(swigCPtr, this, XmlIndexSpecification.getCPtr(index), index);
  }

  public void addIndex(String uri, String name, String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_addIndex__SWIG_0(swigCPtr, this, uri, name, index);
  }

  public void addIndex(String uri, String name, int indexType, int syntaxType) throws XmlException {
    dbxml_javaJNI.XmlContainer_addIndex__SWIG_1(swigCPtr, this, uri, name, indexType, syntaxType);
  }

  public void deleteIndex(String uri, String name, String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_deleteIndex__SWIG_0(swigCPtr, this, uri, name, index);
  }

  public void replaceIndex(String uri, String name, String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_replaceIndex__SWIG_0(swigCPtr, this, uri, name, index);
  }

  public void addDefaultIndex(String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_addDefaultIndex__SWIG_0(swigCPtr, this, index);
  }

  public void deleteDefaultIndex(String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_deleteDefaultIndex__SWIG_0(swigCPtr, this, index);
  }

  public void replaceDefaultIndex(String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_replaceDefaultIndex__SWIG_0(swigCPtr, this, index);
  }

  public void setIndexSpecification(XmlTransaction txn, XmlIndexSpecification index) throws XmlException {
    dbxml_javaJNI.XmlContainer_setIndexSpecification__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, XmlIndexSpecification.getCPtr(index), index);
  }

  public void addIndex(XmlTransaction txn, String uri, String name, String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_addIndex__SWIG_2(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, uri, name, index);
  }

  public void addIndex(XmlTransaction txn, String uri, String name, int indexType, int syntaxType) throws XmlException {
    dbxml_javaJNI.XmlContainer_addIndex__SWIG_3(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, uri, name, indexType, syntaxType);
  }

  public void deleteIndex(XmlTransaction txn, String uri, String name, String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_deleteIndex__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, uri, name, index);
  }

  public void replaceIndex(XmlTransaction txn, String uri, String name, String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_replaceIndex__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, uri, name, index);
  }

  public void addDefaultIndex(XmlTransaction txn, String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_addDefaultIndex__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, index);
  }

  public void deleteDefaultIndex(XmlTransaction txn, String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_deleteDefaultIndex__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, index);
  }

  public void replaceDefaultIndex(XmlTransaction txn, String index) throws XmlException {
    dbxml_javaJNI.XmlContainer_replaceDefaultIndex__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, index);
  }

  protected String putDocument(String name, String contents, int flags) throws XmlException {
    return dbxml_javaJNI.XmlContainer_putDocument__SWIG_0(swigCPtr, this, name, contents, flags);
  }

  protected String putDocument(String name, XmlEventReader reader, int flags) throws XmlException {
    return dbxml_javaJNI.XmlContainer_putDocument__SWIG_1(swigCPtr, this, name, XmlEventReader.getCPtr(reader), reader, flags);
  }

  protected String putDocument(String name, XmlInputStream input, int flags) throws XmlException {
    return dbxml_javaJNI.XmlContainer_putDocument__SWIG_2(swigCPtr, this, name, XmlInputStream.getCPtr(input), input, flags);
  }

  protected String putDocument(XmlTransaction txn, String name, XmlInputStream input, int flags) throws XmlException {
    return dbxml_javaJNI.XmlContainer_putDocument__SWIG_3(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, name, XmlInputStream.getCPtr(input), input, flags);
  }

  protected String putDocument(XmlTransaction txn, String name, String contents, int flags) throws XmlException {
    return dbxml_javaJNI.XmlContainer_putDocument__SWIG_4(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, name, contents, flags);
  }

  protected String putDocument(XmlTransaction txn, String name, XmlEventReader reader, int flags) throws XmlException {
    return dbxml_javaJNI.XmlContainer_putDocument__SWIG_5(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, name, XmlEventReader.getCPtr(reader), reader, flags);
  }

  protected XmlDocument getDocumentInternal(String name, int flags) { return dbxml_javaJNI.XmlContainer_getDocumentInternal__SWIG_0(swigCPtr, this, name, flags); }

  protected XmlDocument getDocumentInternal(XmlTransaction txn, String name, int flags) { return dbxml_javaJNI.XmlContainer_getDocumentInternal__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, name, flags); }

  protected XmlDocument putDocumentInternal(XmlDocument document, int flags) { return dbxml_javaJNI.XmlContainer_putDocumentInternal__SWIG_0(swigCPtr, this, document, flags); }

  protected XmlDocument putDocumentInternal(XmlTransaction txn, XmlDocument document, int flags) { return dbxml_javaJNI.XmlContainer_putDocumentInternal__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, document, flags); }

  protected XmlEventWriter putDocumentAsEventWriter(XmlDocument document, int flags, long[] ids) {
    return new XmlEventWriter(dbxml_javaJNI.XmlContainer_putDocumentAsEventWriter__SWIG_0(swigCPtr, this, document, flags, ids), false);
  }

  protected XmlEventWriter putDocumentAsEventWriter(XmlTransaction txn, XmlDocument document, int flags, long[] ids) {
    return new XmlEventWriter(dbxml_javaJNI.XmlContainer_putDocumentAsEventWriter__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, document, flags, ids), false);
  }

  public void deleteDocument(String name) throws XmlException {
    dbxml_javaJNI.XmlContainer_deleteDocument__SWIG_0(swigCPtr, this, name);
  }

  public void deleteDocument(XmlTransaction txn, String name) throws XmlException {
    dbxml_javaJNI.XmlContainer_deleteDocument__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, name);
  }

  protected XmlDocument deleteDocumentInternal(XmlDocument document) { return dbxml_javaJNI.XmlContainer_deleteDocumentInternal__SWIG_0(swigCPtr, this, document); }

  protected XmlDocument deleteDocumentInternal(XmlTransaction txn, XmlDocument document) { return dbxml_javaJNI.XmlContainer_deleteDocumentInternal__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, document); }

  protected XmlDocument updateDocumentInternal(XmlDocument document) { return dbxml_javaJNI.XmlContainer_updateDocumentInternal__SWIG_0(swigCPtr, this, document); }

  protected XmlDocument updateDocumentInternal(XmlTransaction txn, XmlDocument document) { return dbxml_javaJNI.XmlContainer_updateDocumentInternal__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, document); }

  public XmlResults getNode(String name) throws XmlException {
    return new XmlResults(dbxml_javaJNI.XmlContainer_getNode__SWIG_0(swigCPtr, this, name), true);
  }

  protected XmlResults getNode(XmlTransaction txn, String name, int flags) {
    return new XmlResults(dbxml_javaJNI.XmlContainer_getNode__SWIG_1(swigCPtr, this, XmlTransaction.getCPtr(txn), txn, name, flags), true);
  }

  public final static int WholedocContainer = 0;
  public final static int NodeContainer = WholedocContainer + 1;

}
