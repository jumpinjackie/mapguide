/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sleepycat.dbxml;

     import com.sleepycat.db.DatabaseException;
     
class dbxml_javaJNI {

     static {
	 // An alternate library name can be specified via a property.
	 //
	 String override;

	 if ((override = System.getProperty("sleepycat.dbxml.libfile")) != null) {
	     System.load(override);
	 }
	 else if ((override = System.getProperty("sleepycat.dbxml.libname")) != null) {
	     System.loadLibrary(override);
	 }
	 else {
	     String os = System.getProperty("os.name");
	     if (os != null && os.startsWith("Windows")) {
		 // library name is "libdbxml_javaXX.dll" (for example) on Windows
		 String libname = "libdbxml_java" +
		     XmlConstants.DBXML_VERSION_MAJOR + XmlConstants.DBXML_VERSION_MINOR;

		 // first try to load the release version. If that fails try debug
		 try {
		     System.loadLibrary(libname);
		 } catch (UnsatisfiedLinkError e) {
		     try {
			 libname += "d";
			 System.loadLibrary(libname);
		     } catch (UnsatisfiedLinkError e2) {
			 throw e;
		     }
		 }
	     }
	     else {
		 // library name is "libdbxml_java-Major.Minor.so" (for example) on UNIX
		 // Note: "dbxml_java" isn't good enough;
		 // some Unixes require us to use the explicit SONAME.
		 System.loadLibrary("dbxml_java-" +
				    XmlConstants.DBXML_VERSION_MAJOR + "." +
				    XmlConstants.DBXML_VERSION_MINOR);
	     }
	 }

	 initialize();
     }

     static native final void initialize();
     public final static native long new_XmlResults(long jarg1, XmlResults jarg1_);
     public final static native void materializeMetaData(XmlDocument document);
     public final static native void interruptQuery(long queryContext);
     public static final native byte[] get_data(long cptr);
     public static final native byte[] getContent(XmlDocument document);
     public static final native void set_data(long cptr, byte[] bytes);
     
  public final static native boolean HelperFunctions_testXmlData();
  public final static native boolean HelperFunctions_testConfigDefault(int[] data1, String jarg1);
  public final static native boolean HelperFunctions_testConfigBitOperator(long jarg1, XmlManager jarg1_);
  public final static native boolean HelperFunctions_testNullTxn(long jarg1, XmlManager jarg1_);
  public final static native int HelperFunctions_getType(String jarg1, String jarg2, String jarg3);
  public final static native String HelperFunctions_getTypeURI(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native String HelperFunctions_getTypeName(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native String HelperFunctions_asString(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native XmlDocument HelperFunctions_asDocument(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native long HelperFunctions_asEventReader(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native String HelperFunctions_getNodeHandle(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native String HelperFunctions_getNodeName(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native String HelperFunctions_getNodeValue(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native String HelperFunctions_getNamespaceURI(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native String HelperFunctions_getPrefix(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native String HelperFunctions_getLocalName(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native XmlValue HelperFunctions_getParentNode(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native XmlValue HelperFunctions_getFirstChild(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native XmlValue HelperFunctions_getLastChild(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native XmlValue HelperFunctions_getPreviousSibling(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native XmlValue HelperFunctions_getNextSibling(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native long HelperFunctions_getAttributes(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native XmlValue HelperFunctions_getOwnerElement(byte[] jarg1, long jarg2, XmlResults jarg2_);
  public final static native XmlValue HelperFunctions_createDocumentValue(XmlDocument jarg1);
  public final static native long HelperFunctions_createResults(long jarg1, XmlTransaction jarg1_, long jarg2, XmlManager jarg2_);
  public final static native String HelperFunctions_getAtomicTypeName(int jarg1, String jarg2);
  public final static native String HelperFunctions_getAtomicTypeURI(int jarg1, String jarg2);
  public final static native void HelperFunctions_validateString(int jarg1, String jarg2);
  public final static native long HelperFunctions_getContentAsXmlInputStream(XmlDocument jarg1);
  public final static native long HelperFunctions_getContentAsEventReader(XmlDocument jarg1);
  public final static native void HelperFunctions_getContentAsEventWriter(XmlDocument jarg1, long jarg2, XmlEventWriter jarg2_) throws XmlException;
  public final static native String HelperFunctions_getContentAsString(XmlDocument jarg1);
  public final static native XmlValue HelperFunctions_getMetaData(String jarg1, String jarg2, XmlDocument jarg3);
  public final static native String HelperFunctions_verifyDefaultCollection(long jarg1, XmlManager jarg1_, String jarg2, String jarg3);
  public final static native void HelperFunctions_verifyBaseURI(long jarg1, XmlManager jarg1_, String jarg2);
  public final static native int XmlData_get_size(long jarg1, XmlData jarg1_);
  public final static native void XmlData_set_size(long jarg1, XmlData jarg1_, int jarg2);
  public final static native void XmlData_reserve(long jarg1, XmlData jarg1_, int jarg2);
  public final static native int XmlData_getReservedSize(long jarg1, XmlData jarg1_);
  public final static native void XmlData_adoptBuffer(long jarg1, XmlData jarg1_, long jarg2, XmlData jarg2_);
  public final static native void XmlData_append(long jarg1, XmlData jarg1_, byte[] jarg2);
  public final static native void XmlData_set(long jarg1, XmlData jarg1_, byte[] jarg2);
  public final static native long new_XmlManager(com.sleepycat.db.internal.DbEnv jarg1, int jarg2);
  public final static native void delete_XmlManager(long jarg1);
  public final static native String XmlManager_getHome(long jarg1, XmlManager jarg1_);
  public final static native int XmlManager_getImplicitTimezone(long jarg1, XmlManager jarg1_);
  public final static native void XmlManager_setImplicitTimezone(long jarg1, XmlManager jarg1_, int jarg2);
  public final static native int XmlManager_existsContainer(long jarg1, XmlManager jarg1_, String jarg2);
  /* package */ final static native void XmlManager_removeContainer__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2);
  public final static native void XmlManager_removeContainer__SWIG_1(long jarg1, XmlManager jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3);
  /* package */ final static native void XmlManager_renameContainer__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2, String jarg3);
  public final static native void XmlManager_renameContainer__SWIG_1(long jarg1, XmlManager jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, String jarg4);
  public final static native long XmlManager_createStdInInputStream(long jarg1, XmlManager jarg1_);
  public final static native long XmlManager_createLocalFileInputStream(long jarg1, XmlManager jarg1_, String jarg2);
  /* package */ final static native long XmlManager_createMemBufInputStream__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2, long jarg3, String jarg4, boolean jarg5);
  public final static native long XmlManager_createMemBufInputStream__SWIG_1(long jarg1, XmlManager jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native long XmlManager_createMemBufInputStream__SWIG_2(long jarg1, XmlManager jarg1_, String jarg2, long jarg3, boolean jarg4);
  /* package */ final static native long XmlManager_createURLInputStream__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native long XmlManager_createURLInputStream__SWIG_1(long jarg1, XmlManager jarg1_, String jarg2, String jarg3);
  public final static native void XmlManager_dumpContainer(long jarg1, XmlManager jarg1_, String jarg2, String jarg3);
  /* package */ final static native void XmlManager_verifyContainer__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native void XmlManager_verifyContainer__SWIG_1(long jarg1, XmlManager jarg1_, String jarg2, String jarg3);
  /* package */ final static native long XmlManager_prepare__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3);
  public final static native long XmlManager_prepare__SWIG_1(long jarg1, XmlManager jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, long mgrPtr4, long dbgPtr4, int eval4, int querySec4, Object[] data4, XmlQueryContext jarg4);
  /* package */ final static native long XmlManager_query__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3, int jarg4);
  public final static native long XmlManager_query__SWIG_1(long jarg1, XmlManager jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, long mgrPtr4, long dbgPtr4, int eval4, int querySec4, Object[] data4, XmlQueryContext jarg4, int jarg5);
  public final static native long XmlManager_query__SWIG_2(long jarg1, XmlManager jarg1_, String jarg2, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3);
  public final static native long XmlManager_query__SWIG_3(long jarg1, XmlManager jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, long mgrPtr4, long dbgPtr4, int eval4, int querySec4, Object[] data4, XmlQueryContext jarg4);
  public final static native long XmlManager_createResults(long jarg1, XmlManager jarg1_);
  public final static native long XmlManager_createTransaction(long jarg1, XmlManager jarg1_, com.sleepycat.db.internal.DbTxn jarg2);
  /* package */ final static native long XmlManager_createIndexLookupInternal__SWIG_0(long jarg1, XmlManager jarg1_, long jarg2, XmlContainer jarg2_, String jarg3, String jarg4, String jarg5, XmlValue jarg6, int jarg7);
  public final static native long XmlManager_createIndexLookupInternal__SWIG_1(long jarg1, XmlManager jarg1_, long jarg2, XmlContainer jarg2_, String jarg3, String jarg4, String jarg5, XmlValue jarg6);
  public final static native long XmlManager_createIndexLookupInternal__SWIG_2(long jarg1, XmlManager jarg1_, long jarg2, XmlContainer jarg2_, String jarg3, String jarg4, String jarg5);
  public final static native void XmlManager_setLogLevel(int jarg1, boolean jarg2);
  public final static native void XmlManager_setLogCategory(int jarg1, boolean jarg2);
  public final static native int XmlManager_get_version_major();
  public final static native int XmlManager_get_version_minor();
  public final static native int XmlManager_get_version_patch();
  public final static native String XmlManager_get_version_string();
  /* package */ final static native long XmlManager_createContainerInternal__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2, int[] data3, String jarg3);
  public final static native long XmlManager_createContainerInternal__SWIG_1(long jarg1, XmlManager jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, int[] data4, String jarg4);
  /* package */ final static native long XmlManager_openContainerInternal__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2, int[] data3, String jarg3);
  public final static native long XmlManager_openContainerInternal__SWIG_1(long jarg1, XmlManager jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, int[] data4, String jarg4);
  public final static native XmlDocument XmlManager_createDocumentInternal(long jarg1, XmlManager jarg1_);
  public final static native void XmlManager_upgradeContainer(long jarg1, XmlManager jarg1_, String jarg2);
  /* package */ final static native void XmlManager_compactContainer__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2);
  public final static native void XmlManager_compactContainer__SWIG_1(long jarg1, XmlManager jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3);
  /* package */ final static native void XmlManager_truncateContainer__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2);
  public final static native void XmlManager_truncateContainer__SWIG_1(long jarg1, XmlManager jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3);
  /* package */ final static native void XmlManager_reindexContainer__SWIG_0(long jarg1, XmlManager jarg1_, String jarg2, int[] data3, String jarg3);
  public final static native void XmlManager_reindexContainer__SWIG_1(long jarg1, XmlManager jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, int[] data4, String jarg4);
  public final static native void XmlManager_loadContainer(long jarg1, XmlManager jarg1_, String jarg2, String jarg3);
  public final static native void XmlManager_registerCompressionInternal(long jarg1, XmlManager jarg1_, String jarg2, long jarg3, XmlCompression jarg3_);
  public final static native void XmlManager_registerResolverInternal(long jarg1, XmlManager jarg1_, long jarg2, XmlResolver jarg2_);
  public final static native void delete_XmlIndexLookup(long jarg1);
  public final static native boolean XmlIndexLookup_isNull(long jarg1, XmlIndexLookup jarg1_);
  public final static native String XmlIndexLookup_getIndex(long jarg1, XmlIndexLookup jarg1_);
  public final static native void XmlIndexLookup_setIndex(long jarg1, XmlIndexLookup jarg1_, String jarg2);
  public final static native String XmlIndexLookup_getNodeURI(long jarg1, XmlIndexLookup jarg1_);
  public final static native String XmlIndexLookup_getNodeName(long jarg1, XmlIndexLookup jarg1_);
  public final static native void XmlIndexLookup_setNode(long jarg1, XmlIndexLookup jarg1_, String jarg2, String jarg3);
  public final static native String XmlIndexLookup_getParentURI(long jarg1, XmlIndexLookup jarg1_);
  public final static native String XmlIndexLookup_getParentName(long jarg1, XmlIndexLookup jarg1_);
  public final static native void XmlIndexLookup_setParent(long jarg1, XmlIndexLookup jarg1_, String jarg2, String jarg3);
  public final static native int XmlIndexLookup_getLowBoundOperation(long jarg1, XmlIndexLookup jarg1_);
  public final static native void XmlIndexLookup_setLowBoundInternal(long jarg1, XmlIndexLookup jarg1_, XmlValue jarg2, int jarg3);
  public final static native int XmlIndexLookup_getHighBoundOperation(long jarg1, XmlIndexLookup jarg1_);
  public final static native void XmlIndexLookup_setHighBoundInternal(long jarg1, XmlIndexLookup jarg1_, XmlValue jarg2, int jarg3);
  public final static native void XmlIndexLookup_setContainerInternal(long jarg1, XmlIndexLookup jarg1_, long jarg2, XmlContainer jarg2_);
  /* package */ final static native long XmlIndexLookup_execute__SWIG_0(long jarg1, XmlIndexLookup jarg1_, long mgrPtr2, long dbgPtr2, int eval2, int querySec2, Object[] data2, XmlQueryContext jarg2, int jarg3);
  public final static native long XmlIndexLookup_execute__SWIG_1(long jarg1, XmlIndexLookup jarg1_, long mgrPtr2, long dbgPtr2, int eval2, int querySec2, Object[] data2, XmlQueryContext jarg2);
  public final static native long XmlIndexLookup_execute__SWIG_2(long jarg1, XmlIndexLookup jarg1_, long jarg2, XmlTransaction jarg2_, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3, int jarg4);
  public final static native long XmlIndexLookup_execute__SWIG_3(long jarg1, XmlIndexLookup jarg1_, long jarg2, XmlTransaction jarg2_, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3);
  public final static native long XmlIndexLookup_copy(long jarg1, XmlIndexLookup jarg1_);
  public final static native long new_XmlContainer(long jarg1, XmlContainer jarg1_);
  public final static native void delete_XmlContainer(long jarg1);
  public final static native void XmlContainer_sync(long jarg1, XmlContainer jarg1_);
  public final static native boolean XmlContainer_addAlias(long jarg1, XmlContainer jarg1_, String jarg2);
  public final static native boolean XmlContainer_removeAlias(long jarg1, XmlContainer jarg1_, String jarg2);
  public final static native String XmlContainer_getName(long jarg1, XmlContainer jarg1_);
  public final static native int XmlContainer_getContainerType(long jarg1, XmlContainer jarg1_);
  public final static native boolean XmlContainer_getIndexNodes(long jarg1, XmlContainer jarg1_);
  public final static native int XmlContainer_getPageSize(long jarg1, XmlContainer jarg1_);
  /* package */ final static native boolean XmlContainer_getAutoIndexing__SWIG_0(long jarg1, XmlContainer jarg1_);
  public final static native boolean XmlContainer_getAutoIndexing__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_);
  /* package */ final static native int XmlContainer_getNumDocuments__SWIG_0(long jarg1, XmlContainer jarg1_);
  public final static native int XmlContainer_getNumDocuments__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_);
  /* package */ final static native long XmlContainer_getIndexSpecification__SWIG_0(long jarg1, XmlContainer jarg1_);
  public final static native long XmlContainer_getIndexSpecification__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_);
  public final static native long XmlContainer_getIndexSpecification__SWIG_2(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, int jarg3);
  /* package */ final static native long XmlContainer_getAllDocuments__SWIG_0(long jarg1, XmlContainer jarg1_, int jarg2);
  public final static native long XmlContainer_getAllDocuments__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, int jarg3);
  /* package */ final static native long XmlContainer_lookupIndex__SWIG_0(long jarg1, XmlContainer jarg1_, long mgrPtr2, long dbgPtr2, int eval2, int querySec2, Object[] data2, XmlQueryContext jarg2, String jarg3, String jarg4, String jarg5, XmlValue jarg6, int jarg7);
  public final static native long XmlContainer_lookupIndex__SWIG_1(long jarg1, XmlContainer jarg1_, long mgrPtr2, long dbgPtr2, int eval2, int querySec2, Object[] data2, XmlQueryContext jarg2, String jarg3, String jarg4, String jarg5, XmlValue jarg6);
  public final static native long XmlContainer_lookupIndex__SWIG_2(long jarg1, XmlContainer jarg1_, long mgrPtr2, long dbgPtr2, int eval2, int querySec2, Object[] data2, XmlQueryContext jarg2, String jarg3, String jarg4, String jarg5);
  public final static native long XmlContainer_lookupIndex__SWIG_3(long jarg1, XmlContainer jarg1_, long mgrPtr2, long dbgPtr2, int eval2, int querySec2, Object[] data2, XmlQueryContext jarg2, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7, XmlValue jarg8, int jarg9);
  public final static native long XmlContainer_lookupIndex__SWIG_4(long jarg1, XmlContainer jarg1_, long mgrPtr2, long dbgPtr2, int eval2, int querySec2, Object[] data2, XmlQueryContext jarg2, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7, XmlValue jarg8);
  public final static native long XmlContainer_lookupIndex__SWIG_5(long jarg1, XmlContainer jarg1_, long mgrPtr2, long dbgPtr2, int eval2, int querySec2, Object[] data2, XmlQueryContext jarg2, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7);
  public final static native long XmlContainer_lookupIndex__SWIG_6(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3, String jarg4, String jarg5, String jarg6, XmlValue jarg7, int jarg8);
  public final static native long XmlContainer_lookupIndex__SWIG_7(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3, String jarg4, String jarg5, String jarg6, XmlValue jarg7);
  public final static native long XmlContainer_lookupIndex__SWIG_8(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3, String jarg4, String jarg5, String jarg6);
  public final static native long XmlContainer_lookupIndex__SWIG_9(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3, String jarg4, String jarg5, String jarg6, String jarg7, String jarg8, XmlValue jarg9, int jarg10);
  /* package */ final static native long XmlContainer_lookupIndex__SWIG_10(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3, String jarg4, String jarg5, String jarg6, String jarg7, String jarg8, XmlValue jarg9);
  public final static native long XmlContainer_lookupIndex__SWIG_11(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3, String jarg4, String jarg5, String jarg6, String jarg7, String jarg8);
  /* package */ final static native long XmlContainer_lookupStatistics__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2, String jarg3, String jarg4, XmlValue jarg5);
  public final static native long XmlContainer_lookupStatistics__SWIG_1(long jarg1, XmlContainer jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native long XmlContainer_lookupStatistics__SWIG_2(long jarg1, XmlContainer jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6, XmlValue jarg7);
  public final static native long XmlContainer_lookupStatistics__SWIG_3(long jarg1, XmlContainer jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6);
  public final static native long XmlContainer_lookupStatistics__SWIG_4(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, String jarg4, String jarg5, XmlValue jarg6);
  public final static native long XmlContainer_lookupStatistics__SWIG_5(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, String jarg4, String jarg5);
  public final static native long XmlContainer_lookupStatistics__SWIG_6(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7, XmlValue jarg8);
  public final static native long XmlContainer_lookupStatistics__SWIG_7(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7);
  public final static native String XmlContainer_getContainerConfigData(long jarg1, XmlContainer jarg1_, int[] jarg2);
  /* package */ final static native void XmlContainer_setAutoIndexing__SWIG_0(long jarg1, XmlContainer jarg1_, boolean jarg2);
  public final static native void XmlContainer_setAutoIndexing__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, boolean jarg3);
  /* package */ final static native void XmlContainer_setIndexSpecification__SWIG_0(long jarg1, XmlContainer jarg1_, long jarg2, XmlIndexSpecification jarg2_);
  /* package */ final static native void XmlContainer_addIndex__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void XmlContainer_addIndex__SWIG_1(long jarg1, XmlContainer jarg1_, String jarg2, String jarg3, int jarg4, int jarg5);
  /* package */ final static native void XmlContainer_deleteIndex__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2, String jarg3, String jarg4);
  /* package */ final static native void XmlContainer_replaceIndex__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2, String jarg3, String jarg4);
  /* package */ final static native void XmlContainer_addDefaultIndex__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2);
  /* package */ final static native void XmlContainer_deleteDefaultIndex__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2);
  /* package */ final static native void XmlContainer_replaceDefaultIndex__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2);
  public final static native void XmlContainer_setIndexSpecification__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlIndexSpecification jarg3_);
  public final static native void XmlContainer_addIndex__SWIG_2(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, String jarg4, String jarg5);
  public final static native void XmlContainer_addIndex__SWIG_3(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, String jarg4, int jarg5, int jarg6);
  public final static native void XmlContainer_deleteIndex__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, String jarg4, String jarg5);
  public final static native void XmlContainer_replaceIndex__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, String jarg4, String jarg5);
  public final static native void XmlContainer_addDefaultIndex__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3);
  public final static native void XmlContainer_deleteDefaultIndex__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3);
  public final static native void XmlContainer_replaceDefaultIndex__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3);
  /* package */ final static native String XmlContainer_putDocument__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2, String jarg3, int jarg4) throws XmlException;
  public final static native String XmlContainer_putDocument__SWIG_1(long jarg1, XmlContainer jarg1_, String jarg2, long jarg3, XmlEventReader jarg3_, int jarg4) throws XmlException;
  public final static native String XmlContainer_putDocument__SWIG_2(long jarg1, XmlContainer jarg1_, String jarg2, long jarg3, XmlInputStream jarg3_, int jarg4) throws XmlException;
  public final static native String XmlContainer_putDocument__SWIG_3(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, long jarg4, XmlInputStream jarg4_, int jarg5) throws XmlException;
  public final static native String XmlContainer_putDocument__SWIG_4(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, String jarg4, int jarg5) throws XmlException;
  public final static native String XmlContainer_putDocument__SWIG_5(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, long jarg4, XmlEventReader jarg4_, int jarg5) throws XmlException;
  /* package */ final static native XmlDocument XmlContainer_getDocumentInternal__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2, int jarg3);
  public final static native XmlDocument XmlContainer_getDocumentInternal__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, int jarg4);
  /* package */ final static native XmlDocument XmlContainer_putDocumentInternal__SWIG_0(long jarg1, XmlContainer jarg1_, XmlDocument jarg2, int jarg3);
  public final static native XmlDocument XmlContainer_putDocumentInternal__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, XmlDocument jarg3, int jarg4);
  /* package */ final static native long XmlContainer_putDocumentAsEventWriter__SWIG_0(long jarg1, XmlContainer jarg1_, XmlDocument jarg2, int jarg3, long[] jarg4);
  public final static native long XmlContainer_putDocumentAsEventWriter__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, XmlDocument jarg3, int jarg4, long[] jarg5);
  /* package */ final static native void XmlContainer_deleteDocument__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2);
  public final static native void XmlContainer_deleteDocument__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3);
  /* package */ final static native XmlDocument XmlContainer_deleteDocumentInternal__SWIG_0(long jarg1, XmlContainer jarg1_, XmlDocument jarg2);
  public final static native XmlDocument XmlContainer_deleteDocumentInternal__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, XmlDocument jarg3);
  /* package */ final static native XmlDocument XmlContainer_updateDocumentInternal__SWIG_0(long jarg1, XmlContainer jarg1_, XmlDocument jarg2);
  public final static native XmlDocument XmlContainer_updateDocumentInternal__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, XmlDocument jarg3);
  /* package */ final static native long XmlContainer_getNode__SWIG_0(long jarg1, XmlContainer jarg1_, String jarg2);
  public final static native long XmlContainer_getNode__SWIG_1(long jarg1, XmlContainer jarg1_, long jarg2, XmlTransaction jarg2_, String jarg3, int jarg4);
  public final static native void delete_XmlResults(long jarg1);
  public final static native boolean XmlResults_hasNext(long jarg1, XmlResults jarg1_);
  public final static native boolean XmlResults_hasPrevious(long jarg1, XmlResults jarg1_);
  public final static native boolean XmlResults_isNull(long jarg1, XmlResults jarg1_);
  public final static native int XmlResults_getEvaluationType(long jarg1, XmlResults jarg1_);
  public final static native int XmlResults_size(long jarg1, XmlResults jarg1_);
  public final static native void XmlResults_resetInternal(long jarg1, XmlResults jarg1_);
  public final static native long XmlResults_copyResults(long jarg1, XmlResults jarg1_);
  public final static native void XmlResults_concatResults(long jarg1, XmlResults jarg1_, long jarg2, XmlResults jarg2_);
  public final static native long XmlResults_copy(long jarg1, XmlResults jarg1_);
  public final static native XmlValue XmlResults_nextInternal(long jarg1, XmlResults jarg1_);
  public final static native XmlValue XmlResults_previousInternal(long jarg1, XmlResults jarg1_);
  public final static native XmlValue XmlResults_peekInternal(long jarg1, XmlResults jarg1_);
  public final static native void XmlResults_addInternal(long jarg1, XmlResults jarg1_, XmlValue jarg2);
  public final static native XmlDocument XmlResults_nextDocumentInternal(long jarg1, XmlResults jarg1_);
  public final static native XmlDocument XmlResults_previousDocumentInternal(long jarg1, XmlResults jarg1_);
  public final static native XmlDocument XmlResults_peekDocumentInternal(long jarg1, XmlResults jarg1_);
  public final static native long XmlResults_asEventWriterInternal(long jarg1, XmlResults jarg1_);
  public final static native void delete_XmlIndexSpecification(long jarg1);
  /* package */ final static native void XmlIndexSpecification_addIndex__SWIG_0(long jarg1, XmlIndexSpecification jarg1_, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native void XmlIndexSpecification_addIndex__SWIG_1(long jarg1, XmlIndexSpecification jarg1_, String jarg2, String jarg3, String jarg4);
  /* package */ final static native void XmlIndexSpecification_deleteIndex__SWIG_0(long jarg1, XmlIndexSpecification jarg1_, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native void XmlIndexSpecification_deleteIndex__SWIG_1(long jarg1, XmlIndexSpecification jarg1_, String jarg2, String jarg3, String jarg4);
  /* package */ final static native void XmlIndexSpecification_replaceIndex__SWIG_0(long jarg1, XmlIndexSpecification jarg1_, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native void XmlIndexSpecification_replaceIndex__SWIG_1(long jarg1, XmlIndexSpecification jarg1_, String jarg2, String jarg3, String jarg4);
  /* package */ final static native void XmlIndexSpecification_addDefaultIndex__SWIG_0(long jarg1, XmlIndexSpecification jarg1_, int jarg2, int jarg3);
  public final static native void XmlIndexSpecification_addDefaultIndex__SWIG_1(long jarg1, XmlIndexSpecification jarg1_, String jarg2);
  /* package */ final static native void XmlIndexSpecification_deleteDefaultIndex__SWIG_0(long jarg1, XmlIndexSpecification jarg1_, int jarg2, int jarg3);
  public final static native void XmlIndexSpecification_deleteDefaultIndex__SWIG_1(long jarg1, XmlIndexSpecification jarg1_, String jarg2);
  /* package */ final static native void XmlIndexSpecification_replaceDefaultIndex__SWIG_0(long jarg1, XmlIndexSpecification jarg1_, int jarg2, int jarg3);
  public final static native void XmlIndexSpecification_replaceDefaultIndex__SWIG_1(long jarg1, XmlIndexSpecification jarg1_, String jarg2);
  public final static native void XmlIndexSpecification_reset(long jarg1, XmlIndexSpecification jarg1_);
  public final static native boolean XmlIndexSpecification_getAutoIndexing(long jarg1, XmlIndexSpecification jarg1_);
  public final static native void XmlIndexSpecification_setAutoIndexing(long jarg1, XmlIndexSpecification jarg1_, boolean jarg2);
  public final static native XmlIndexDeclaration XmlIndexSpecification_find(long jarg1, XmlIndexSpecification jarg1_, String jarg2, String jarg3);
  public final static native XmlIndexDeclaration XmlIndexSpecification_next(long jarg1, XmlIndexSpecification jarg1_);
  public final static native String XmlIndexSpecification_getDefaultIndex(long jarg1, XmlIndexSpecification jarg1_);
  public final static native int XmlIndexSpecification_getValueType(String jarg1);
  public final static native long new_XmlQueryExpression(long jarg1, XmlQueryExpression jarg1_);
  public final static native void delete_XmlQueryExpression(long jarg1);
  public final static native String XmlQueryExpression_getQuery(long jarg1, XmlQueryExpression jarg1_);
  public final static native String XmlQueryExpression_getQueryPlan(long jarg1, XmlQueryExpression jarg1_);
  public final static native boolean XmlQueryExpression_isUpdateExpression(long jarg1, XmlQueryExpression jarg1_);
  /* package */ final static native long XmlQueryExpression_execute__SWIG_0(long jarg1, XmlQueryExpression jarg1_, long mgrPtr2, long dbgPtr2, int eval2, int querySec2, Object[] data2, XmlQueryContext jarg2, int jarg3);
  public final static native long XmlQueryExpression_execute__SWIG_1(long jarg1, XmlQueryExpression jarg1_, long mgrPtr2, long dbgPtr2, int eval2, int querySec2, Object[] data2, XmlQueryContext jarg2);
  public final static native long XmlQueryExpression_execute__SWIG_2(long jarg1, XmlQueryExpression jarg1_, XmlValue jarg2, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3, int jarg4);
  public final static native long XmlQueryExpression_execute__SWIG_3(long jarg1, XmlQueryExpression jarg1_, XmlValue jarg2, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3);
  public final static native long XmlQueryExpression_execute__SWIG_4(long jarg1, XmlQueryExpression jarg1_, long jarg2, XmlTransaction jarg2_, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3, int jarg4);
  public final static native long XmlQueryExpression_execute__SWIG_5(long jarg1, XmlQueryExpression jarg1_, long jarg2, XmlTransaction jarg2_, long mgrPtr3, long dbgPtr3, int eval3, int querySec3, Object[] data3, XmlQueryContext jarg3);
  public final static native long XmlQueryExpression_execute__SWIG_6(long jarg1, XmlQueryExpression jarg1_, long jarg2, XmlTransaction jarg2_, XmlValue jarg3, long mgrPtr4, long dbgPtr4, int eval4, int querySec4, Object[] data4, XmlQueryContext jarg4, int jarg5);
  public final static native long XmlQueryExpression_execute__SWIG_7(long jarg1, XmlQueryExpression jarg1_, long jarg2, XmlTransaction jarg2_, XmlValue jarg3, long mgrPtr4, long dbgPtr4, int eval4, int querySec4, Object[] data4, XmlQueryContext jarg4);
  public final static native long new_XmlInputStream();
  public final static native void delete_XmlInputStream(long jarg1);
  public final static native long XmlInputStream_curPos(long jarg1, XmlInputStream jarg1_);
  public final static native long XmlInputStream_readBytes(long jarg1, XmlInputStream jarg1_, byte[] jarg2, long jarg3);
  public final static native void XmlInputStream_freeMemory(long jarg1, XmlInputStream jarg1_);
  public final static native void XmlInputStream_director_connect(XmlInputStream obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void XmlInputStream_change_ownership(XmlInputStream obj, long cptr, boolean take_or_release);
  public final static native long new_XmlResolver();
  public final static native void delete_XmlResolver(long jarg1);
  public final static native boolean XmlResolver_resolveDocument(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, XmlValue jarg5);
  public final static native boolean XmlResolver_resolveDocumentSwigExplicitXmlResolver(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, XmlValue jarg5);
  public final static native boolean XmlResolver_resolveCollection(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, long jarg5, XmlResults jarg5_);
  public final static native boolean XmlResolver_resolveCollectionSwigExplicitXmlResolver(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, long jarg5, XmlResults jarg5_);
  public final static native long XmlResolver_resolveSchema(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, String jarg5);
  public final static native long XmlResolver_resolveSchemaSwigExplicitXmlResolver(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, String jarg5);
  public final static native long XmlResolver_resolveEntity(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, String jarg5);
  public final static native long XmlResolver_resolveEntitySwigExplicitXmlResolver(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, String jarg5);
  public final static native boolean XmlResolver_resolveModuleLocation(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, long jarg5, XmlResults jarg5_);
  public final static native boolean XmlResolver_resolveModuleLocationSwigExplicitXmlResolver(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, long jarg5, XmlResults jarg5_);
  public final static native long XmlResolver_resolveModule(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, String jarg5);
  public final static native long XmlResolver_resolveModuleSwigExplicitXmlResolver(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, String jarg5);
  public final static native long XmlResolver_resolveExternalFunction(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, String jarg5, int jarg6);
  public final static native long XmlResolver_resolveExternalFunctionSwigExplicitXmlResolver(long jarg1, XmlResolver jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, String jarg4, String jarg5, int jarg6);
  public final static native void XmlResolver_director_connect(XmlResolver obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void XmlResolver_change_ownership(XmlResolver obj, long cptr, boolean take_or_release);
  public final static native void delete_XmlArguments(long jarg1);
  public final static native long XmlArguments_getArgument(long jarg1, XmlArguments jarg1_, int jarg2);
  public final static native long XmlArguments_getNumberOfArgs(long jarg1, XmlArguments jarg1_);
  public final static native long new_XmlExternalFunctionBase();
  public final static native void delete_XmlExternalFunctionBase(long jarg1);
  public final static native long XmlExternalFunctionBase_execute(long jarg1, XmlExternalFunctionBase jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlManager jarg3_, long jarg4, XmlArguments jarg4_);
  public final static native void XmlExternalFunctionBase_close(long jarg1, XmlExternalFunctionBase jarg1_);
  public final static native void XmlExternalFunctionBase_director_connect(XmlExternalFunctionBase obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void XmlExternalFunctionBase_change_ownership(XmlExternalFunctionBase obj, long cptr, boolean take_or_release);
  public final static native String XmlStackFrame_getQueryFile(long jarg1, XmlStackFrame jarg1_);
  public final static native int XmlStackFrame_getQueryLine(long jarg1, XmlStackFrame jarg1_);
  public final static native int XmlStackFrame_getQueryColumn(long jarg1, XmlStackFrame jarg1_);
  public final static native long XmlStackFrame_query(long jarg1, XmlStackFrame jarg1_, String jarg2);
  public final static native String XmlStackFrame_getQueryPlan(long jarg1, XmlStackFrame jarg1_);
  public final static native long XmlStackFrame_getPreviousStackFrame(long jarg1, XmlStackFrame jarg1_);
  public final static native long new_XmlDebugListener();
  public final static native void delete_XmlDebugListener(long jarg1);
  public final static native void XmlDebugListener_start(long jarg1, XmlDebugListener jarg1_, long jarg2, XmlStackFrame jarg2_);
  public final static native void XmlDebugListener_startSwigExplicitXmlDebugListener(long jarg1, XmlDebugListener jarg1_, long jarg2, XmlStackFrame jarg2_);
  public final static native void XmlDebugListener_end(long jarg1, XmlDebugListener jarg1_, long jarg2, XmlStackFrame jarg2_);
  public final static native void XmlDebugListener_endSwigExplicitXmlDebugListener(long jarg1, XmlDebugListener jarg1_, long jarg2, XmlStackFrame jarg2_);
  public final static native void XmlDebugListener_enter(long jarg1, XmlDebugListener jarg1_, long jarg2, XmlStackFrame jarg2_);
  public final static native void XmlDebugListener_enterSwigExplicitXmlDebugListener(long jarg1, XmlDebugListener jarg1_, long jarg2, XmlStackFrame jarg2_);
  public final static native void XmlDebugListener_exit(long jarg1, XmlDebugListener jarg1_, long jarg2, XmlStackFrame jarg2_);
  public final static native void XmlDebugListener_exitSwigExplicitXmlDebugListener(long jarg1, XmlDebugListener jarg1_, long jarg2, XmlStackFrame jarg2_);
  public final static native void XmlDebugListener_error(long jarg1, XmlDebugListener jarg1_, XmlException jarg2, long jarg3, XmlStackFrame jarg3_);
  public final static native void XmlDebugListener_errorSwigExplicitXmlDebugListener(long jarg1, XmlDebugListener jarg1_, XmlException jarg2, long jarg3, XmlStackFrame jarg3_);
  public final static native void XmlDebugListener_director_connect(XmlDebugListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void XmlDebugListener_change_ownership(XmlDebugListener obj, long cptr, boolean take_or_release);
  public final static native long new_XmlCompression();
  public final static native void delete_XmlCompression(long jarg1);
  public final static native boolean XmlCompression_compress(long jarg1, XmlCompression jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlData jarg3_, long jarg4, XmlData jarg4_);
  public final static native boolean XmlCompression_decompress(long jarg1, XmlCompression jarg1_, long jarg2, XmlTransaction jarg2_, long jarg3, XmlData jarg3_, long jarg4, XmlData jarg4_);
  public final static native void XmlCompression_director_connect(XmlCompression obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void XmlCompression_change_ownership(XmlCompression obj, long cptr, boolean take_or_release);
  public final static native void delete_XmlTransaction(long jarg1);
  public final static native long new_XmlStatistics(long jarg1, XmlStatistics jarg1_);
  public final static native void delete_XmlStatistics(long jarg1);
  public final static native double XmlStatistics_getNumberOfIndexedKeys(long jarg1, XmlStatistics jarg1_);
  public final static native double XmlStatistics_getNumberOfUniqueKeys(long jarg1, XmlStatistics jarg1_);
  public final static native double XmlStatistics_getSumKeyValueSize(long jarg1, XmlStatistics jarg1_);
  public final static native void delete_XmlEventReader(long jarg1);
  public final static native void XmlEventReader_closeInternal(long jarg1, XmlEventReader jarg1_);
  public final static native void XmlEventReader_setReportEntityInfo(long jarg1, XmlEventReader jarg1_, boolean jarg2);
  public final static native boolean XmlEventReader_getReportEntityInfo(long jarg1, XmlEventReader jarg1_);
  public final static native void XmlEventReader_setExpandEntities(long jarg1, XmlEventReader jarg1_, boolean jarg2);
  public final static native boolean XmlEventReader_getExpandEntities(long jarg1, XmlEventReader jarg1_);
  public final static native int XmlEventReader_next(long jarg1, XmlEventReader jarg1_);
  public final static native int XmlEventReader_nextTag(long jarg1, XmlEventReader jarg1_);
  public final static native boolean XmlEventReader_hasNext(long jarg1, XmlEventReader jarg1_);
  public final static native int XmlEventReader_getEventType(long jarg1, XmlEventReader jarg1_);
  public final static native String XmlEventReader_getNamespaceURI(long jarg1, XmlEventReader jarg1_);
  public final static native String XmlEventReader_getLocalName(long jarg1, XmlEventReader jarg1_);
  public final static native String XmlEventReader_getPrefix(long jarg1, XmlEventReader jarg1_);
  public final static native String XmlEventReader_getValue(long jarg1, XmlEventReader jarg1_);
  public final static native int XmlEventReader_getAttributeCount(long jarg1, XmlEventReader jarg1_);
  public final static native boolean XmlEventReader_isAttributeSpecified(long jarg1, XmlEventReader jarg1_, int jarg2);
  public final static native String XmlEventReader_getAttributeLocalName(long jarg1, XmlEventReader jarg1_, int jarg2);
  public final static native String XmlEventReader_getAttributeNamespaceURI(long jarg1, XmlEventReader jarg1_, int jarg2);
  public final static native String XmlEventReader_getAttributePrefix(long jarg1, XmlEventReader jarg1_, int jarg2);
  public final static native String XmlEventReader_getAttributeValue(long jarg1, XmlEventReader jarg1_, int jarg2);
  public final static native String XmlEventReader_getEncoding(long jarg1, XmlEventReader jarg1_);
  public final static native String XmlEventReader_getVersion(long jarg1, XmlEventReader jarg1_);
  public final static native String XmlEventReader_getSystemId(long jarg1, XmlEventReader jarg1_);
  public final static native boolean XmlEventReader_isStandalone(long jarg1, XmlEventReader jarg1_);
  public final static native boolean XmlEventReader_standaloneSet(long jarg1, XmlEventReader jarg1_);
  public final static native boolean XmlEventReader_encodingSet(long jarg1, XmlEventReader jarg1_);
  public final static native boolean XmlEventReader_hasEntityEscapeInfo(long jarg1, XmlEventReader jarg1_);
  /* package */ final static native boolean XmlEventReader_needsEntityEscape__SWIG_0(long jarg1, XmlEventReader jarg1_, int jarg2);
  public final static native boolean XmlEventReader_needsEntityEscape__SWIG_1(long jarg1, XmlEventReader jarg1_);
  public final static native boolean XmlEventReader_hasEmptyElementInfo(long jarg1, XmlEventReader jarg1_);
  public final static native boolean XmlEventReader_isEmptyElement(long jarg1, XmlEventReader jarg1_);
  public final static native boolean XmlEventReader_isWhiteSpace(long jarg1, XmlEventReader jarg1_);
  public final static native void delete_XmlEventWriter(long jarg1);
  public final static native void XmlEventWriter_closeInternal(long jarg1, XmlEventWriter jarg1_);
  public final static native void XmlEventWriter_writeAttribute(long jarg1, XmlEventWriter jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, boolean jarg6);
  /* package */ final static native void XmlEventWriter_writeText__SWIG_0(long jarg1, XmlEventWriter jarg1_, int jarg2, String jarg3, int jarg4);
  /* package */ final static native void XmlEventWriter_writeDTD__SWIG_0(long jarg1, XmlEventWriter jarg1_, String jarg2, int jarg3);
  public final static native void XmlEventWriter_writeText__SWIG_1(long jarg1, XmlEventWriter jarg1_, int jarg2, String jarg3);
  public final static native void XmlEventWriter_writeDTD__SWIG_1(long jarg1, XmlEventWriter jarg1_, String jarg2);
  public final static native void XmlEventWriter_writeProcessingInstruction(long jarg1, XmlEventWriter jarg1_, String jarg2, String jarg3);
  public final static native void XmlEventWriter_writeStartElement(long jarg1, XmlEventWriter jarg1_, String jarg2, String jarg3, String jarg4, int jarg5, boolean jarg6);
  public final static native void XmlEventWriter_writeEndElement(long jarg1, XmlEventWriter jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void XmlEventWriter_writeStartDocument(long jarg1, XmlEventWriter jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void XmlEventWriter_writeEndDocument(long jarg1, XmlEventWriter jarg1_);
  public final static native void XmlEventWriter_writeStartEntity(long jarg1, XmlEventWriter jarg1_, String jarg2, boolean jarg3);
  public final static native void XmlEventWriter_writeEndEntity(long jarg1, XmlEventWriter jarg1_, String jarg2);
  public final static native long new_XmlEventReaderToWriter(long jarg1, XmlEventReader jarg1_, long jarg2, XmlEventWriter jarg2_, boolean jarg3, boolean jarg4);
  public final static native void delete_XmlEventReaderToWriter(long jarg1);
  public final static native void XmlEventReaderToWriter_start(long jarg1, XmlEventReaderToWriter jarg1_);

  public static long SwigDirector_XmlInputStream_curPos(XmlInputStream self) throws XmlException {
    return self.curPos();
  }
  public static long SwigDirector_XmlInputStream_readBytes(XmlInputStream self, byte[] toFill, long maxToRead) throws XmlException {
    return self.readBytes(toFill, maxToRead);
  }
  public static boolean SwigDirector_XmlResolver_resolveDocument(XmlResolver self, long txn, long mgr, String uri, XmlValue reslt) throws XmlException {
    return self.resolveDocument((txn == 0) ? null : new XmlTransaction(txn, false), new XmlManager(mgr, false), uri, reslt);
  }
  public static boolean SwigDirector_XmlResolver_resolveCollection(XmlResolver self, long txn, long mgr, String uri, long reslt) throws XmlException {
    return self.resolveCollection((txn == 0) ? null : new XmlTransaction(txn, false), new XmlManager(mgr, false), uri, new XmlResults(reslt, false));
  }
  public static long SwigDirector_XmlResolver_resolveSchema(XmlResolver self, long txn, long mgr, String schemaLocation, String nameSpace) throws XmlException {
    return XmlInputStream.getCPtr(self.resolveSchema((txn == 0) ? null : new XmlTransaction(txn, false), new XmlManager(mgr, false), schemaLocation, nameSpace));
  }
  public static long SwigDirector_XmlResolver_resolveEntity(XmlResolver self, long txn, long mgr, String systemId, String publicId) throws XmlException {
    return XmlInputStream.getCPtr(self.resolveEntity((txn == 0) ? null : new XmlTransaction(txn, false), new XmlManager(mgr, false), systemId, publicId));
  }
  public static boolean SwigDirector_XmlResolver_resolveModuleLocation(XmlResolver self, long txn, long mgr, String nameSpace, long reslt) throws XmlException {
    return self.resolveModuleLocation((txn == 0) ? null : new XmlTransaction(txn, false), new XmlManager(mgr, false), nameSpace, new XmlResults(reslt, false));
  }
  public static long SwigDirector_XmlResolver_resolveModule(XmlResolver self, long txn, long mgr, String moduleLocation, String nameSpace) throws XmlException {
    return XmlInputStream.getCPtr(self.resolveModule((txn == 0) ? null : new XmlTransaction(txn, false), new XmlManager(mgr, false), moduleLocation, nameSpace));
  }
  public static long SwigDirector_XmlResolver_resolveExternalFunction(XmlResolver self, long txn, long mgr, String uri, String name, int numberOfArgs) throws XmlException {
    return XmlExternalFunctionBase.getCPtr(self.resolveExternalFunction((txn == 0) ? null : new XmlTransaction(txn, false), new XmlManager(mgr, false), uri, name, numberOfArgs));
  }
  public static long SwigDirector_XmlExternalFunctionBase_execute(XmlExternalFunctionBase self, long txn, long mgr, long args) throws XmlException {
    return XmlResults.getCPtr(self.execute(new XmlTransaction(txn, false), new XmlManager(mgr, false), new XmlArguments(args, false)));
  }
  public static void SwigDirector_XmlExternalFunctionBase_close(XmlExternalFunctionBase self) throws XmlException {
    self.close();
  }
  public static void SwigDirector_XmlDebugListener_start(XmlDebugListener self, long stack) throws XmlException {
    self.start((stack == 0) ? null : new XmlStackFrame(stack, false));
  }
  public static void SwigDirector_XmlDebugListener_end(XmlDebugListener self, long stack) throws XmlException {
    self.end((stack == 0) ? null : new XmlStackFrame(stack, false));
  }
  public static void SwigDirector_XmlDebugListener_enter(XmlDebugListener self, long stack) throws XmlException {
    self.enter((stack == 0) ? null : new XmlStackFrame(stack, false));
  }
  public static void SwigDirector_XmlDebugListener_exit(XmlDebugListener self, long stack) throws XmlException {
    self.exit((stack == 0) ? null : new XmlStackFrame(stack, false));
  }
  public static void SwigDirector_XmlDebugListener_error(XmlDebugListener self, XmlException error, long stack) throws XmlException {
    self.error(error, (stack == 0) ? null : new XmlStackFrame(stack, false));
  }
  public static boolean SwigDirector_XmlCompression_compress(XmlCompression self, long txn, long source, long dest) throws XmlException {
    return self.compress(new XmlTransaction(txn, false), new XmlData(source, false), new XmlData(dest, false));
  }
  public static boolean SwigDirector_XmlCompression_decompress(XmlCompression self, long txn, long source, long dest) throws XmlException {
    return self.decompress(new XmlTransaction(txn, false), new XmlData(source, false), new XmlData(dest, false));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
