/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class GCP : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal GCP(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(GCP obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~GCP() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      gdalPINVOKE.delete_GCP(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public double GCPX {
    set {
      gdalPINVOKE.set_GCP_GCPX(swigCPtr, value);
    } 
    get {
      double ret = gdalPINVOKE.get_GCP_GCPX(swigCPtr);
      return ret;
    } 
  }

  public double GCPY {
    set {
      gdalPINVOKE.set_GCP_GCPY(swigCPtr, value);
    } 
    get {
      double ret = gdalPINVOKE.get_GCP_GCPY(swigCPtr);
      return ret;
    } 
  }

  public double GCPZ {
    set {
      gdalPINVOKE.set_GCP_GCPZ(swigCPtr, value);
    } 
    get {
      double ret = gdalPINVOKE.get_GCP_GCPZ(swigCPtr);
      return ret;
    } 
  }

  public double GCPPixel {
    set {
      gdalPINVOKE.set_GCP_GCPPixel(swigCPtr, value);
    } 
    get {
      double ret = gdalPINVOKE.get_GCP_GCPPixel(swigCPtr);
      return ret;
    } 
  }

  public double GCPLine {
    set {
      gdalPINVOKE.set_GCP_GCPLine(swigCPtr, value);
    } 
    get {
      double ret = gdalPINVOKE.get_GCP_GCPLine(swigCPtr);
      return ret;
    } 
  }

  public string Info {
    set {
      gdalPINVOKE.set_GCP_Info(swigCPtr, value);
    } 
    get {
      string ret = gdalPINVOKE.get_GCP_Info(swigCPtr);
      return ret;
    } 
  }

  public string Id {
    set {
      gdalPINVOKE.set_GCP_Id(swigCPtr, value);
    } 
    get {
      string ret = gdalPINVOKE.get_GCP_Id(swigCPtr);
      return ret;
    } 
  }

  public GCP(double x, double y, double z, double pixel, double line, string info, string id) : this(gdalPINVOKE.new_GCP(x, y, z, pixel, line, info, id), true) {
  }

}
