/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sleepycat.dbxml;

import com.sleepycat.db.*;
import com.sleepycat.db.internal.DbEnv;
import com.sleepycat.db.internal.DbConstants;

public class XmlValue {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected XmlValue(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XmlValue obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() /* no exception */ {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      dbxml_javaJNI.delete_XmlValue(swigCPtr);
    }
    swigCPtr = 0;
  }

  public XmlValue() throws XmlException {
    this(dbxml_javaJNI.new_XmlValue__SWIG_0(), true);
  }

  public XmlValue(XmlValue other) throws XmlException {
    this(dbxml_javaJNI.new_XmlValue__SWIG_1(XmlValue.getCPtr(other)), true);
  }

  public XmlValue(String v) throws XmlException {
    this(dbxml_javaJNI.new_XmlValue__SWIG_2(v), true);
  }

  public XmlValue(double v) throws XmlException {
    this(dbxml_javaJNI.new_XmlValue__SWIG_3(v), true);
  }

  public XmlValue(boolean v) throws XmlException {
    this(dbxml_javaJNI.new_XmlValue__SWIG_4(v), true);
  }

  public XmlValue(XmlDocument document) throws XmlException {
    this(dbxml_javaJNI.new_XmlValue__SWIG_5(XmlDocument.getCPtr(document)), true);
  }

  public XmlValue(int type, String v) throws XmlException {
    this(dbxml_javaJNI.new_XmlValue__SWIG_6(type, v), true);
  }

  public XmlValue(int type, byte[] dbt) throws XmlException {
    this(dbxml_javaJNI.new_XmlValue__SWIG_7(type, dbt), true);
  }

  public int getType() throws XmlException {
    return dbxml_javaJNI.XmlValue_getType(swigCPtr);
  }

  public boolean isNull() throws XmlException {
    return dbxml_javaJNI.XmlValue_isNull(swigCPtr);
  }

  public boolean isType(int type) throws XmlException {
    return dbxml_javaJNI.XmlValue_isType(swigCPtr, type);
  }

  public boolean isNumber() throws XmlException {
    return dbxml_javaJNI.XmlValue_isNumber(swigCPtr);
  }

  public boolean isString() throws XmlException {
    return dbxml_javaJNI.XmlValue_isString(swigCPtr);
  }

  public boolean isBoolean() throws XmlException {
    return dbxml_javaJNI.XmlValue_isBoolean(swigCPtr);
  }

  public boolean isBinary() throws XmlException {
    return dbxml_javaJNI.XmlValue_isBinary(swigCPtr);
  }

  public boolean isNode() throws XmlException {
    return dbxml_javaJNI.XmlValue_isNode(swigCPtr);
  }

  public double asNumber() throws XmlException {
    return dbxml_javaJNI.XmlValue_asNumber(swigCPtr);
  }

  public String asString() throws XmlException {
    return dbxml_javaJNI.XmlValue_asString__SWIG_0(swigCPtr);
  }

  public String asString(String encoding) throws XmlException {
    return dbxml_javaJNI.XmlValue_asString__SWIG_1(swigCPtr, encoding);
  }

  public boolean asBoolean() throws XmlException {
    return dbxml_javaJNI.XmlValue_asBoolean(swigCPtr);
  }

  public byte[] asBinary() throws XmlException { return dbxml_javaJNI.XmlValue_asBinary(swigCPtr); }

  public XmlDocument asDocument() throws XmlException {
    return new XmlDocument(dbxml_javaJNI.XmlValue_asDocument(swigCPtr), true);
  }

  public boolean equals(XmlValue value) throws XmlException {
    return dbxml_javaJNI.XmlValue_equals(swigCPtr, XmlValue.getCPtr(value));
  }

  public String getNodeName() throws XmlException {
    return dbxml_javaJNI.XmlValue_getNodeName(swigCPtr);
  }

  public String getNodeValue() throws XmlException {
    return dbxml_javaJNI.XmlValue_getNodeValue(swigCPtr);
  }

  public String getNamespaceURI() throws XmlException {
    return dbxml_javaJNI.XmlValue_getNamespaceURI(swigCPtr);
  }

  public String getPrefix() throws XmlException {
    return dbxml_javaJNI.XmlValue_getPrefix(swigCPtr);
  }

  public String getLocalName() throws XmlException {
    return dbxml_javaJNI.XmlValue_getLocalName(swigCPtr);
  }

  public short getNodeType() throws XmlException {
    return dbxml_javaJNI.XmlValue_getNodeType(swigCPtr);
  }

  public XmlValue getParentNode() throws XmlException {
    long cPtr = dbxml_javaJNI.XmlValue_getParentNode(swigCPtr);
    return (cPtr == 0) ? null : new XmlValue(cPtr, true);
  }

  public XmlValue getFirstChild() throws XmlException {
    long cPtr = dbxml_javaJNI.XmlValue_getFirstChild(swigCPtr);
    return (cPtr == 0) ? null : new XmlValue(cPtr, true);
  }

  public XmlValue getLastChild() throws XmlException {
    long cPtr = dbxml_javaJNI.XmlValue_getLastChild(swigCPtr);
    return (cPtr == 0) ? null : new XmlValue(cPtr, true);
  }

  public XmlValue getPreviousSibling() throws XmlException {
    long cPtr = dbxml_javaJNI.XmlValue_getPreviousSibling(swigCPtr);
    return (cPtr == 0) ? null : new XmlValue(cPtr, true);
  }

  public XmlValue getNextSibling() throws XmlException {
    long cPtr = dbxml_javaJNI.XmlValue_getNextSibling(swigCPtr);
    return (cPtr == 0) ? null : new XmlValue(cPtr, true);
  }

  public XmlResults getAttributes() throws XmlException {
    long cPtr = dbxml_javaJNI.XmlValue_getAttributes(swigCPtr);
    return (cPtr == 0) ? null : new XmlResults(cPtr, true);
  }

  public XmlValue getOwnerElement() throws XmlException {
    long cPtr = dbxml_javaJNI.XmlValue_getOwnerElement(swigCPtr);
    return (cPtr == 0) ? null : new XmlValue(cPtr, true);
  }

  public static void setValue(XmlValue to, XmlValue from) throws XmlException {
    dbxml_javaJNI.XmlValue_setValue(XmlValue.getCPtr(to), XmlValue.getCPtr(from));
  }

  public final static int ELEMENT_NODE = 1;
  public final static int ATTRIBUTE_NODE = 2;
  public final static int TEXT_NODE = 3;
  public final static int CDATA_SECTION_NODE = 4;
  public final static int ENTITY_REFERENCE_NODE = 5;
  public final static int ENTITY_NODE = 6;
  public final static int PROCESSING_INSTRUCTION_NODE = 7;
  public final static int COMMENT_NODE = 8;
  public final static int DOCUMENT_NODE = 9;
  public final static int DOCUMENT_TYPE_NODE = 10;
  public final static int DOCUMENT_FRAGMENT_NODE = 11;
  public final static int NOTATION_NODE = 12;

  public final static int NONE = 0;
  public final static int NODE = 3;
  public final static int ANY_SIMPLE_TYPE = 10;
  public final static int ANY_URI = 11;
  public final static int BASE_64_BINARY = 12;
  public final static int BOOLEAN = 13;
  public final static int DATE = 14;
  public final static int DATE_TIME = 15;
  public final static int DAY_TIME_DURATION = 16;
  public final static int DECIMAL = 17;
  public final static int DOUBLE = 18;
  public final static int DURATION = 19;
  public final static int FLOAT = 20;
  public final static int G_DAY = 21;
  public final static int G_MONTH = 22;
  public final static int G_MONTH_DAY = 23;
  public final static int G_YEAR = 24;
  public final static int G_YEAR_MONTH = 25;
  public final static int HEX_BINARY = 26;
  public final static int NOTATION = 27;
  public final static int QNAME = 28;
  public final static int STRING = 29;
  public final static int TIME = 30;
  public final static int YEAR_MONTH_DURATION = 31;
  public final static int UNTYPED_ATOMIC = 32;
  public final static int BINARY = 40;

}
