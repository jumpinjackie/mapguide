<?xml version="1.0" encoding="utf-8"?>
<test purpose="functions">
  <policies>
    <policy name="numeric"/>
    <default>
      <program>../../../samples/evaluator/eval</program>
    </default>
  </policies>
  <base type="pass">
    <arg>floor(1.1)</arg>
    <output>1
</output>
  </base>
  <base type="pass">
    <arg>floor(1.9)</arg>
    <output>1
</output>
  </base>
  <base type="pass">
    <arg>floor(99999999999999.9)</arg>
    <output>99999999999999
</output>
  </base>
  <base type="pass">
    <arg>floor(9.999999999999999999E17) </arg>
    <output>9.99999999999999999E17
</output>
  </base>
  <base type="pass">
    <arg>floor(-1.1)</arg>
    <output>-2
</output>
  </base>
  <base type="pass">
    <arg>floor(-1.9)</arg>
    <output>-2
</output>
  </base>
  <base type="pass">
    <arg>floor(xs:double(-999999999999999.9))</arg>
    <output>-1.0E15
</output>
  </base>
  <base type="pass">
    <arg>floor(0.0E0)</arg>
    <output>0
</output>
  </base>
  <base type="pass">
    <arg>5 div floor(xs:double(&quot;-0.0E0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>floor(1 div 0e0)</arg>
    <output>INF
</output>
  </base>
  <base type="pass">
    <arg>floor(1 div xs:double(&quot;-0e0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>floor(1 div xs:float(&quot;-0e0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>floor(2 mod 0.0e0)</arg>
    <output>NaN
</output>
  </base>
  <base type="pass">
    <arg>5 div (-10e0 mod 5)</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>5 div (10e0 mod -5)</arg>
    <output>INF
</output>
  </base>
  <base type="pass">
    <arg>5 div (-10e0 mod -5)</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>floor("string")</arg>
    <output>Non-numeric argument in numeric function.
</output>
  </base>
  <base type="pass">
    <arg>floor(xs:integer(1)) instance of xs:integer</arg>
    <output>true
</output>
  </base>
  <base type="pass">
    <arg>floor(xs:decimal(1)) instance of xs:decimal</arg>
    <output>true
</output>
  </base>
  <base type="pass">
    <arg>floor(xs:float(1)) instance of xs:float</arg>
    <output>true
</output>
  </base>
  <base type="pass">
    <arg>floor(xs:double(1)) instance of xs:double</arg>
    <output>true
</output>
  </base>
  <base type="pass">
    <arg>abs(1.1)</arg>
    <output>1.1
</output>
  </base>
  <base type="pass">
    <arg>abs(-1E2)</arg>
    <output>100
</output>
  </base>
  <base type="fail">
    <arg>abs(NaN)</arg>
    <output>NaN
</output>
  </base>
  <base type="fail">
    <arg>abs(INF)</arg>
    <output>INF
</output>
  </base>
  <base type="fail">
    <arg>abs(-INF)</arg>
    <output>INF
</output>
  </base>
  <base type="pass">
    <arg>abs(-67)</arg>
    <output>67
</output>
  </base>
  <base type="pass">
    <arg>ceiling(1.1)</arg>
    <output>2
</output>
  </base>
  <base type="pass">
    <arg>ceiling(1.9)</arg>
    <output>2
</output>
  </base>
  <base type="pass">
    <arg>ceiling(999999999999999.9)</arg>
    <output>1000000000000000
</output>
  </base>
  <base type="pass">
    <arg>ceiling(-1.1)</arg>
    <output>-1
</output>
  </base>
  <base type="pass">
    <arg>ceiling(-1.9)</arg>
    <output>-1
</output>
  </base>
  <base type="pass">
    <arg>ceiling(-99999999999999.9)</arg>
    <output>-99999999999999
</output>
  </base>
  <base type="pass">
    <arg>ceiling(0.0E0)</arg>
    <output>0
</output>
  </base>
  <base type="pass">
    <arg>ceiling(-0.0E0)</arg>
    <output>-0
</output>
  </base>
  <base type="pass">
    <arg>ceiling(1 div 0e0)</arg>
    <output>INF
</output>
  </base>
  <base type="pass">
    <arg>ceiling(1 div xs:double(&quot;-0e0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>ceiling(1 div xs:float(&quot;-0e0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>ceiling(2 mod 0.0e0)</arg>
    <output>NaN
</output>
  </base>
  <base type="pass">
    <arg>ceiling("string")</arg>
    <output>Non-numeric argument in numeric function.
</output>
  </base>
  <base type="pass">
    <arg>ceiling(xs:integer(1)) instance of xs:integer</arg>
    <output>true
</output>
  </base>
  <base type="pass">
    <arg>ceiling(xs:decimal(1)) instance of xs:decimal</arg>
    <output>true
</output>
  </base>
  <base type="pass">
    <arg>ceiling(xs:float(1)) instance of xs:float</arg>
    <output>true
</output>
  </base>
  <base type="pass">
    <arg>ceiling(xs:double(1)) instance of xs:double</arg>
    <output>true
</output>
  </base>
  <base type="pass">
    <arg>round(2.1)</arg>
    <output>2
</output>
  </base>
  <base type="pass">
    <arg>round(1.9)</arg>
    <output>2
</output>
  </base>
  <base type="pass">
    <arg>round(999999999999999.9)</arg>
    <output>1000000000000000
</output>
  </base>
  <base type="pass">
    <arg>round(-1.1)</arg>
    <output>-1
</output>
  </base>
  <base type="pass">
    <arg>round(-1.9)</arg>
    <output>-2
</output>
  </base>
  <base type="pass">
    <arg>round(-0.5)</arg>
    <output>0
</output>
  </base>
  <base type="pass">
    <arg>round(0.5)</arg>
    <output>1
</output>
  </base>
  <base type="pass">
    <arg>round(-999999999999999.9)</arg>
    <output>-1000000000000000
</output>
  </base>
  <base type="pass">
    <arg>round(0.0E0)</arg>
    <output>0
</output>
  </base>
  <base type="pass">
    <arg>5 div round(xs:double(&quot;-0.0E0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>1 div round(xs:double(&quot;-0.5E0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>5 div round(xs:float(&quot;-0.0E0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>1 div round(xs:float(&quot;-0.124325E0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>round(1 div 0e0)</arg>
    <output>INF
</output>
  </base>
  <base type="pass">
    <arg>round(1 div xs:double(&quot;-0e0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>round(2 mod 0)</arg>
    <output>Division by zero [err:FOAR0001]
</output>
  </base>
  <base type="pass">
    <arg>round(2 mod 0.0e0)</arg>
    <output>NaN
</output>
  </base>
  <base type="pass">
    <arg>round("string")</arg>
    <output>Non-numeric argument in numeric function.
</output>
  </base>
<base type="pass">
  <arg>round(xs:integer(1)) instance of xs:integer</arg>
  <output>true
</output>
</base>
<base type="pass">
  <arg>round(xs:decimal(1)) instance of xs:decimal</arg>
  <output>true
</output>
</base>
<base type="pass">
  <arg>round(xs:float(1)) instance of xs:float</arg>
  <output>true
</output>
</base>
<base type="pass">
  <arg>round(xs:double(1)) instance of xs:double</arg>
  <output>true
</output>
</base>
  <base type="pass">
    <arg>round-half-to-even(0.0E0)</arg>
    <output>0
</output>
  </base>
  <base type="pass">
    <arg>5 div round-half-to-even(xs:double(&quot;-0.0E0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>5 div round-half-to-even(xs:float(&quot;-0.0E0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base comment="this is believed to be the appropriate behaviour, but the spec doesn't currently say so" type="fail">
    <arg>1 div round-half-to-even(xs:double(&quot;-0.5E0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>round-half-to-even(-0.5E0)</arg>
    <output>0
</output>
  </base>
  <base type="pass">
    <arg>round-half-to-even(1 div 0.0e0)</arg>
    <output>INF
</output>
  </base>
  <base type="pass">
    <arg>round-half-to-even(1 div xs:double(&quot;-0.0e0&quot;))</arg>
    <output>-INF
</output>
  </base>
  <base type="pass">
    <arg>round-half-to-even(2 mod 0)</arg>
    <output>Division by zero [err:FOAR0001]
</output>
  </base>
<base type="pass">
  <arg>round-half-to-even(0.55, 1)</arg>
  <output>0.6</output>
</base>
<base type="pass">
  <arg>round-half-to-even(0.65, 1)</arg>
  <output>0.6</output>
</base>
<base type="pass">
  <arg>round-half-to-even(3.567812E+3, 2)</arg>
  <output>3567.81</output>
</base>
<base type="pass">
  <arg>round-half-to-even(4.7564E-3, 2)</arg>
  <output>0</output>
</base>
<base type="pass">
  <arg>round-half-to-even(35612.25, -2)</arg>
  <output>35600</output>
</base>
<base type="pass">
  <arg>round-half-to-even(35612.25E0, -2)</arg>
  <output>35600</output>
</base>
<base type="pass">
  <arg>round-half-to-even(35550.0, -2)</arg>
  <output>35600</output>
</base>
<base type="pass">
  <arg>round-half-to-even(xs:integer(1)) instance of xs:integer</arg>
  <output>true</output>
</base>
<base type="pass">
  <arg>round-half-to-even(xs:integer(1)) instance of xs:integer</arg>
  <output>true
</output>
</base>
<base type="pass">
  <arg>round-half-to-even(xs:decimal(1)) instance of xs:decimal</arg>
  <output>true
</output>
</base>
<base type="pass">
  <arg>round-half-to-even(xs:float(1)) instance of xs:float</arg>
  <output>true
</output>
</base>
<base type="pass">
  <arg>round-half-to-even(xs:double(1)) instance of xs:double</arg>
  <output>true
</output>
</base>
</test>