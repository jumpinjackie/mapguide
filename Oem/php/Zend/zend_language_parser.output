Conflict in state 99 between rule 410 and token T_LOGICAL_OR resolved as shift.
Conflict in state 99 between rule 410 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 99 between rule 410 and token T_LOGICAL_AND resolved as shift.
Conflict in state 99 between rule 410 and token '?' resolved as shift.
Conflict in state 99 between rule 410 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 99 between rule 410 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 99 between rule 410 and token '|' resolved as shift.
Conflict in state 99 between rule 410 and token '^' resolved as shift.
Conflict in state 99 between rule 410 and token '&' resolved as shift.
Conflict in state 99 between rule 410 and token T_IS_EQUAL resolved as shift.
Conflict in state 99 between rule 410 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 99 between rule 410 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 99 between rule 410 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 99 between rule 410 and token '<' resolved as shift.
Conflict in state 99 between rule 410 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 99 between rule 410 and token '>' resolved as shift.
Conflict in state 99 between rule 410 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 99 between rule 410 and token T_SL resolved as shift.
Conflict in state 99 between rule 410 and token T_SR resolved as shift.
Conflict in state 99 between rule 410 and token '+' resolved as shift.
Conflict in state 99 between rule 410 and token '-' resolved as shift.
Conflict in state 99 between rule 410 and token '.' resolved as shift.
Conflict in state 99 between rule 410 and token '*' resolved as shift.
Conflict in state 99 between rule 410 and token '/' resolved as shift.
Conflict in state 99 between rule 410 and token '%' resolved as shift.
Conflict in state 99 between rule 410 and token T_INSTANCEOF resolved as shift.
Conflict in state 100 between rule 411 and token T_LOGICAL_OR resolved as shift.
Conflict in state 100 between rule 411 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 100 between rule 411 and token T_LOGICAL_AND resolved as shift.
Conflict in state 100 between rule 411 and token '?' resolved as shift.
Conflict in state 100 between rule 411 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 100 between rule 411 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 100 between rule 411 and token '|' resolved as shift.
Conflict in state 100 between rule 411 and token '^' resolved as shift.
Conflict in state 100 between rule 411 and token '&' resolved as shift.
Conflict in state 100 between rule 411 and token T_IS_EQUAL resolved as shift.
Conflict in state 100 between rule 411 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 100 between rule 411 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 100 between rule 411 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 100 between rule 411 and token '<' resolved as shift.
Conflict in state 100 between rule 411 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 100 between rule 411 and token '>' resolved as shift.
Conflict in state 100 between rule 411 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 100 between rule 411 and token T_SL resolved as shift.
Conflict in state 100 between rule 411 and token T_SR resolved as shift.
Conflict in state 100 between rule 411 and token '+' resolved as shift.
Conflict in state 100 between rule 411 and token '-' resolved as shift.
Conflict in state 100 between rule 411 and token '.' resolved as shift.
Conflict in state 100 between rule 411 and token '*' resolved as shift.
Conflict in state 100 between rule 411 and token '/' resolved as shift.
Conflict in state 100 between rule 411 and token '%' resolved as shift.
Conflict in state 100 between rule 411 and token T_INSTANCEOF resolved as shift.
Conflict in state 102 between rule 413 and token T_LOGICAL_OR resolved as shift.
Conflict in state 102 between rule 413 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 102 between rule 413 and token T_LOGICAL_AND resolved as shift.
Conflict in state 102 between rule 413 and token '?' resolved as shift.
Conflict in state 102 between rule 413 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 102 between rule 413 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 102 between rule 413 and token '|' resolved as shift.
Conflict in state 102 between rule 413 and token '^' resolved as shift.
Conflict in state 102 between rule 413 and token '&' resolved as shift.
Conflict in state 102 between rule 413 and token T_IS_EQUAL resolved as shift.
Conflict in state 102 between rule 413 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 102 between rule 413 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 102 between rule 413 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 102 between rule 413 and token '<' resolved as shift.
Conflict in state 102 between rule 413 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 102 between rule 413 and token '>' resolved as shift.
Conflict in state 102 between rule 413 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 102 between rule 413 and token T_SL resolved as shift.
Conflict in state 102 between rule 413 and token T_SR resolved as shift.
Conflict in state 102 between rule 413 and token '+' resolved as shift.
Conflict in state 102 between rule 413 and token '-' resolved as shift.
Conflict in state 102 between rule 413 and token '.' resolved as shift.
Conflict in state 102 between rule 413 and token '*' resolved as shift.
Conflict in state 102 between rule 413 and token '/' resolved as shift.
Conflict in state 102 between rule 413 and token '%' resolved as shift.
Conflict in state 102 between rule 413 and token T_INSTANCEOF resolved as shift.
Conflict in state 103 between rule 414 and token T_LOGICAL_OR resolved as shift.
Conflict in state 103 between rule 414 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 103 between rule 414 and token T_LOGICAL_AND resolved as shift.
Conflict in state 103 between rule 414 and token '?' resolved as shift.
Conflict in state 103 between rule 414 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 103 between rule 414 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 103 between rule 414 and token '|' resolved as shift.
Conflict in state 103 between rule 414 and token '^' resolved as shift.
Conflict in state 103 between rule 414 and token '&' resolved as shift.
Conflict in state 103 between rule 414 and token T_IS_EQUAL resolved as shift.
Conflict in state 103 between rule 414 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 103 between rule 414 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 103 between rule 414 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 103 between rule 414 and token '<' resolved as shift.
Conflict in state 103 between rule 414 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 103 between rule 414 and token '>' resolved as shift.
Conflict in state 103 between rule 414 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 103 between rule 414 and token T_SL resolved as shift.
Conflict in state 103 between rule 414 and token T_SR resolved as shift.
Conflict in state 103 between rule 414 and token '+' resolved as shift.
Conflict in state 103 between rule 414 and token '-' resolved as shift.
Conflict in state 103 between rule 414 and token '.' resolved as shift.
Conflict in state 103 between rule 414 and token '*' resolved as shift.
Conflict in state 103 between rule 414 and token '/' resolved as shift.
Conflict in state 103 between rule 414 and token '%' resolved as shift.
Conflict in state 103 between rule 414 and token T_INSTANCEOF resolved as shift.
Conflict in state 104 between rule 273 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 104 between rule 273 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 104 between rule 273 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 104 between rule 273 and token '?' resolved as shift.
Conflict in state 104 between rule 273 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 104 between rule 273 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 104 between rule 273 and token '|' resolved as shift.
Conflict in state 104 between rule 273 and token '^' resolved as shift.
Conflict in state 104 between rule 273 and token '&' resolved as shift.
Conflict in state 104 between rule 273 and token T_IS_EQUAL resolved as shift.
Conflict in state 104 between rule 273 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 104 between rule 273 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 104 between rule 273 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 104 between rule 273 and token '<' resolved as shift.
Conflict in state 104 between rule 273 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 104 between rule 273 and token '>' resolved as shift.
Conflict in state 104 between rule 273 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 104 between rule 273 and token T_SL resolved as shift.
Conflict in state 104 between rule 273 and token T_SR resolved as shift.
Conflict in state 104 between rule 273 and token '+' resolved as shift.
Conflict in state 104 between rule 273 and token '-' resolved as shift.
Conflict in state 104 between rule 273 and token '.' resolved as shift.
Conflict in state 104 between rule 273 and token '*' resolved as shift.
Conflict in state 104 between rule 273 and token '/' resolved as shift.
Conflict in state 104 between rule 273 and token '%' resolved as shift.
Conflict in state 104 between rule 273 and token T_INSTANCEOF resolved as shift.
Conflict in state 105 between rule 242 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 105 between rule 242 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 105 between rule 242 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 105 between rule 242 and token '?' resolved as reduce.
Conflict in state 105 between rule 242 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 105 between rule 242 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 105 between rule 242 and token '|' resolved as reduce.
Conflict in state 105 between rule 242 and token '^' resolved as reduce.
Conflict in state 105 between rule 242 and token '&' resolved as reduce.
Conflict in state 105 between rule 242 and token T_IS_EQUAL resolved as reduce.
Conflict in state 105 between rule 242 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 105 between rule 242 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 105 between rule 242 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 105 between rule 242 and token '<' resolved as reduce.
Conflict in state 105 between rule 242 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 105 between rule 242 and token '>' resolved as reduce.
Conflict in state 105 between rule 242 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 105 between rule 242 and token T_SL resolved as reduce.
Conflict in state 105 between rule 242 and token T_SR resolved as reduce.
Conflict in state 105 between rule 242 and token '+' resolved as reduce.
Conflict in state 105 between rule 242 and token '-' resolved as reduce.
Conflict in state 105 between rule 242 and token '.' resolved as reduce.
Conflict in state 105 between rule 242 and token '*' resolved as shift.
Conflict in state 105 between rule 242 and token '/' resolved as shift.
Conflict in state 105 between rule 242 and token '%' resolved as shift.
Conflict in state 105 between rule 242 and token T_INSTANCEOF resolved as shift.
Conflict in state 106 between rule 243 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 106 between rule 243 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 106 between rule 243 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 106 between rule 243 and token '?' resolved as reduce.
Conflict in state 106 between rule 243 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 106 between rule 243 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 106 between rule 243 and token '|' resolved as reduce.
Conflict in state 106 between rule 243 and token '^' resolved as reduce.
Conflict in state 106 between rule 243 and token '&' resolved as reduce.
Conflict in state 106 between rule 243 and token T_IS_EQUAL resolved as reduce.
Conflict in state 106 between rule 243 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 106 between rule 243 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 106 between rule 243 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 106 between rule 243 and token '<' resolved as reduce.
Conflict in state 106 between rule 243 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 106 between rule 243 and token '>' resolved as reduce.
Conflict in state 106 between rule 243 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 106 between rule 243 and token T_SL resolved as reduce.
Conflict in state 106 between rule 243 and token T_SR resolved as reduce.
Conflict in state 106 between rule 243 and token '+' resolved as reduce.
Conflict in state 106 between rule 243 and token '-' resolved as reduce.
Conflict in state 106 between rule 243 and token '.' resolved as reduce.
Conflict in state 106 between rule 243 and token '*' resolved as shift.
Conflict in state 106 between rule 243 and token '/' resolved as shift.
Conflict in state 106 between rule 243 and token '%' resolved as shift.
Conflict in state 106 between rule 243 and token T_INSTANCEOF resolved as shift.
Conflict in state 107 between rule 244 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 107 between rule 244 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 107 between rule 244 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 107 between rule 244 and token '?' resolved as reduce.
Conflict in state 107 between rule 244 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 107 between rule 244 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 107 between rule 244 and token '|' resolved as reduce.
Conflict in state 107 between rule 244 and token '^' resolved as reduce.
Conflict in state 107 between rule 244 and token '&' resolved as reduce.
Conflict in state 107 between rule 244 and token T_IS_EQUAL resolved as reduce.
Conflict in state 107 between rule 244 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 107 between rule 244 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 107 between rule 244 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 107 between rule 244 and token '<' resolved as reduce.
Conflict in state 107 between rule 244 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 107 between rule 244 and token '>' resolved as reduce.
Conflict in state 107 between rule 244 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 107 between rule 244 and token T_SL resolved as reduce.
Conflict in state 107 between rule 244 and token T_SR resolved as reduce.
Conflict in state 107 between rule 244 and token '+' resolved as reduce.
Conflict in state 107 between rule 244 and token '-' resolved as reduce.
Conflict in state 107 between rule 244 and token '.' resolved as reduce.
Conflict in state 107 between rule 244 and token '*' resolved as reduce.
Conflict in state 107 between rule 244 and token '/' resolved as reduce.
Conflict in state 107 between rule 244 and token '%' resolved as reduce.
Conflict in state 107 between rule 244 and token T_INSTANCEOF resolved as shift.
Conflict in state 108 between rule 245 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 108 between rule 245 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 108 between rule 245 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 108 between rule 245 and token '?' resolved as reduce.
Conflict in state 108 between rule 245 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 108 between rule 245 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 108 between rule 245 and token '|' resolved as reduce.
Conflict in state 108 between rule 245 and token '^' resolved as reduce.
Conflict in state 108 between rule 245 and token '&' resolved as reduce.
Conflict in state 108 between rule 245 and token T_IS_EQUAL resolved as reduce.
Conflict in state 108 between rule 245 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 108 between rule 245 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 108 between rule 245 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 108 between rule 245 and token '<' resolved as reduce.
Conflict in state 108 between rule 245 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 108 between rule 245 and token '>' resolved as reduce.
Conflict in state 108 between rule 245 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 108 between rule 245 and token T_SL resolved as reduce.
Conflict in state 108 between rule 245 and token T_SR resolved as reduce.
Conflict in state 108 between rule 245 and token '+' resolved as reduce.
Conflict in state 108 between rule 245 and token '-' resolved as reduce.
Conflict in state 108 between rule 245 and token '.' resolved as reduce.
Conflict in state 108 between rule 245 and token '*' resolved as reduce.
Conflict in state 108 between rule 245 and token '/' resolved as reduce.
Conflict in state 108 between rule 245 and token '%' resolved as reduce.
Conflict in state 108 between rule 245 and token T_INSTANCEOF resolved as reduce.
Conflict in state 114 between rule 260 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 114 between rule 260 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 114 between rule 260 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 114 between rule 260 and token '?' resolved as reduce.
Conflict in state 114 between rule 260 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 114 between rule 260 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 114 between rule 260 and token '|' resolved as reduce.
Conflict in state 114 between rule 260 and token '^' resolved as reduce.
Conflict in state 114 between rule 260 and token '&' resolved as reduce.
Conflict in state 114 between rule 260 and token T_IS_EQUAL resolved as reduce.
Conflict in state 114 between rule 260 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 114 between rule 260 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 114 between rule 260 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 114 between rule 260 and token '<' resolved as reduce.
Conflict in state 114 between rule 260 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 114 between rule 260 and token '>' resolved as reduce.
Conflict in state 114 between rule 260 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 114 between rule 260 and token T_SL resolved as reduce.
Conflict in state 114 between rule 260 and token T_SR resolved as reduce.
Conflict in state 114 between rule 260 and token '+' resolved as reduce.
Conflict in state 114 between rule 260 and token '-' resolved as reduce.
Conflict in state 114 between rule 260 and token '.' resolved as reduce.
Conflict in state 114 between rule 260 and token '*' resolved as reduce.
Conflict in state 114 between rule 260 and token '/' resolved as reduce.
Conflict in state 114 between rule 260 and token '%' resolved as reduce.
Conflict in state 114 between rule 260 and token T_INSTANCEOF resolved as reduce.
Conflict in state 115 between rule 261 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 115 between rule 261 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 115 between rule 261 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 115 between rule 261 and token '?' resolved as reduce.
Conflict in state 115 between rule 261 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 115 between rule 261 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 115 between rule 261 and token '|' resolved as reduce.
Conflict in state 115 between rule 261 and token '^' resolved as reduce.
Conflict in state 115 between rule 261 and token '&' resolved as reduce.
Conflict in state 115 between rule 261 and token T_IS_EQUAL resolved as reduce.
Conflict in state 115 between rule 261 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 115 between rule 261 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 115 between rule 261 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 115 between rule 261 and token '<' resolved as reduce.
Conflict in state 115 between rule 261 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 115 between rule 261 and token '>' resolved as reduce.
Conflict in state 115 between rule 261 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 115 between rule 261 and token T_SL resolved as reduce.
Conflict in state 115 between rule 261 and token T_SR resolved as reduce.
Conflict in state 115 between rule 261 and token '+' resolved as reduce.
Conflict in state 115 between rule 261 and token '-' resolved as reduce.
Conflict in state 115 between rule 261 and token '.' resolved as reduce.
Conflict in state 115 between rule 261 and token '*' resolved as reduce.
Conflict in state 115 between rule 261 and token '/' resolved as reduce.
Conflict in state 115 between rule 261 and token '%' resolved as reduce.
Conflict in state 115 between rule 261 and token T_INSTANCEOF resolved as reduce.
Conflict in state 116 between rule 262 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 116 between rule 262 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 116 between rule 262 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 116 between rule 262 and token '?' resolved as reduce.
Conflict in state 116 between rule 262 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 116 between rule 262 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 116 between rule 262 and token '|' resolved as reduce.
Conflict in state 116 between rule 262 and token '^' resolved as reduce.
Conflict in state 116 between rule 262 and token '&' resolved as reduce.
Conflict in state 116 between rule 262 and token T_IS_EQUAL resolved as reduce.
Conflict in state 116 between rule 262 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 116 between rule 262 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 116 between rule 262 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 116 between rule 262 and token '<' resolved as reduce.
Conflict in state 116 between rule 262 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 116 between rule 262 and token '>' resolved as reduce.
Conflict in state 116 between rule 262 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 116 between rule 262 and token T_SL resolved as reduce.
Conflict in state 116 between rule 262 and token T_SR resolved as reduce.
Conflict in state 116 between rule 262 and token '+' resolved as reduce.
Conflict in state 116 between rule 262 and token '-' resolved as reduce.
Conflict in state 116 between rule 262 and token '.' resolved as reduce.
Conflict in state 116 between rule 262 and token '*' resolved as reduce.
Conflict in state 116 between rule 262 and token '/' resolved as reduce.
Conflict in state 116 between rule 262 and token '%' resolved as reduce.
Conflict in state 116 between rule 262 and token T_INSTANCEOF resolved as reduce.
Conflict in state 117 between rule 263 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 117 between rule 263 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 117 between rule 263 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 117 between rule 263 and token '?' resolved as reduce.
Conflict in state 117 between rule 263 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 117 between rule 263 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 117 between rule 263 and token '|' resolved as reduce.
Conflict in state 117 between rule 263 and token '^' resolved as reduce.
Conflict in state 117 between rule 263 and token '&' resolved as reduce.
Conflict in state 117 between rule 263 and token T_IS_EQUAL resolved as reduce.
Conflict in state 117 between rule 263 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 117 between rule 263 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 117 between rule 263 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 117 between rule 263 and token '<' resolved as reduce.
Conflict in state 117 between rule 263 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 117 between rule 263 and token '>' resolved as reduce.
Conflict in state 117 between rule 263 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 117 between rule 263 and token T_SL resolved as reduce.
Conflict in state 117 between rule 263 and token T_SR resolved as reduce.
Conflict in state 117 between rule 263 and token '+' resolved as reduce.
Conflict in state 117 between rule 263 and token '-' resolved as reduce.
Conflict in state 117 between rule 263 and token '.' resolved as reduce.
Conflict in state 117 between rule 263 and token '*' resolved as reduce.
Conflict in state 117 between rule 263 and token '/' resolved as reduce.
Conflict in state 117 between rule 263 and token '%' resolved as reduce.
Conflict in state 117 between rule 263 and token T_INSTANCEOF resolved as reduce.
Conflict in state 118 between rule 264 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 118 between rule 264 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 118 between rule 264 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 118 between rule 264 and token '?' resolved as reduce.
Conflict in state 118 between rule 264 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 118 between rule 264 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 118 between rule 264 and token '|' resolved as reduce.
Conflict in state 118 between rule 264 and token '^' resolved as reduce.
Conflict in state 118 between rule 264 and token '&' resolved as reduce.
Conflict in state 118 between rule 264 and token T_IS_EQUAL resolved as reduce.
Conflict in state 118 between rule 264 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 118 between rule 264 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 118 between rule 264 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 118 between rule 264 and token '<' resolved as reduce.
Conflict in state 118 between rule 264 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 118 between rule 264 and token '>' resolved as reduce.
Conflict in state 118 between rule 264 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 118 between rule 264 and token T_SL resolved as reduce.
Conflict in state 118 between rule 264 and token T_SR resolved as reduce.
Conflict in state 118 between rule 264 and token '+' resolved as reduce.
Conflict in state 118 between rule 264 and token '-' resolved as reduce.
Conflict in state 118 between rule 264 and token '.' resolved as reduce.
Conflict in state 118 between rule 264 and token '*' resolved as reduce.
Conflict in state 118 between rule 264 and token '/' resolved as reduce.
Conflict in state 118 between rule 264 and token '%' resolved as reduce.
Conflict in state 118 between rule 264 and token T_INSTANCEOF resolved as reduce.
Conflict in state 119 between rule 265 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 119 between rule 265 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 119 between rule 265 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 119 between rule 265 and token '?' resolved as reduce.
Conflict in state 119 between rule 265 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 119 between rule 265 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 119 between rule 265 and token '|' resolved as reduce.
Conflict in state 119 between rule 265 and token '^' resolved as reduce.
Conflict in state 119 between rule 265 and token '&' resolved as reduce.
Conflict in state 119 between rule 265 and token T_IS_EQUAL resolved as reduce.
Conflict in state 119 between rule 265 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 119 between rule 265 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 119 between rule 265 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 119 between rule 265 and token '<' resolved as reduce.
Conflict in state 119 between rule 265 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 119 between rule 265 and token '>' resolved as reduce.
Conflict in state 119 between rule 265 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 119 between rule 265 and token T_SL resolved as reduce.
Conflict in state 119 between rule 265 and token T_SR resolved as reduce.
Conflict in state 119 between rule 265 and token '+' resolved as reduce.
Conflict in state 119 between rule 265 and token '-' resolved as reduce.
Conflict in state 119 between rule 265 and token '.' resolved as reduce.
Conflict in state 119 between rule 265 and token '*' resolved as reduce.
Conflict in state 119 between rule 265 and token '/' resolved as reduce.
Conflict in state 119 between rule 265 and token '%' resolved as reduce.
Conflict in state 119 between rule 265 and token T_INSTANCEOF resolved as reduce.
Conflict in state 120 between rule 266 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 120 between rule 266 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 120 between rule 266 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 120 between rule 266 and token '?' resolved as reduce.
Conflict in state 120 between rule 266 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 120 between rule 266 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 120 between rule 266 and token '|' resolved as reduce.
Conflict in state 120 between rule 266 and token '^' resolved as reduce.
Conflict in state 120 between rule 266 and token '&' resolved as reduce.
Conflict in state 120 between rule 266 and token T_IS_EQUAL resolved as reduce.
Conflict in state 120 between rule 266 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 120 between rule 266 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 120 between rule 266 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 120 between rule 266 and token '<' resolved as reduce.
Conflict in state 120 between rule 266 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 120 between rule 266 and token '>' resolved as reduce.
Conflict in state 120 between rule 266 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 120 between rule 266 and token T_SL resolved as reduce.
Conflict in state 120 between rule 266 and token T_SR resolved as reduce.
Conflict in state 120 between rule 266 and token '+' resolved as reduce.
Conflict in state 120 between rule 266 and token '-' resolved as reduce.
Conflict in state 120 between rule 266 and token '.' resolved as reduce.
Conflict in state 120 between rule 266 and token '*' resolved as reduce.
Conflict in state 120 between rule 266 and token '/' resolved as reduce.
Conflict in state 120 between rule 266 and token '%' resolved as reduce.
Conflict in state 120 between rule 266 and token T_INSTANCEOF resolved as reduce.
Conflict in state 129 between rule 206 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 129 between rule 206 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 129 between rule 206 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 129 between rule 206 and token '?' resolved as reduce.
Conflict in state 129 between rule 206 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 129 between rule 206 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 129 between rule 206 and token '|' resolved as reduce.
Conflict in state 129 between rule 206 and token '^' resolved as reduce.
Conflict in state 129 between rule 206 and token '&' resolved as reduce.
Conflict in state 129 between rule 206 and token T_IS_EQUAL resolved as reduce.
Conflict in state 129 between rule 206 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 129 between rule 206 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 129 between rule 206 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 129 between rule 206 and token '<' resolved as reduce.
Conflict in state 129 between rule 206 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 129 between rule 206 and token '>' resolved as reduce.
Conflict in state 129 between rule 206 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 129 between rule 206 and token T_SL resolved as reduce.
Conflict in state 129 between rule 206 and token T_SR resolved as reduce.
Conflict in state 129 between rule 206 and token '+' resolved as reduce.
Conflict in state 129 between rule 206 and token '-' resolved as reduce.
Conflict in state 129 between rule 206 and token '.' resolved as reduce.
Conflict in state 129 between rule 206 and token '*' resolved as reduce.
Conflict in state 129 between rule 206 and token '/' resolved as reduce.
Conflict in state 129 between rule 206 and token '%' resolved as reduce.
Conflict in state 129 between rule 206 and token T_INSTANCEOF resolved as reduce.
Conflict in state 229 between rule 269 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 229 between rule 269 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 229 between rule 269 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 229 between rule 269 and token '?' resolved as reduce.
Conflict in state 229 between rule 269 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 229 between rule 269 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 229 between rule 269 and token '|' resolved as reduce.
Conflict in state 229 between rule 269 and token '^' resolved as reduce.
Conflict in state 229 between rule 269 and token '&' resolved as reduce.
Conflict in state 229 between rule 269 and token T_IS_EQUAL resolved as reduce.
Conflict in state 229 between rule 269 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 229 between rule 269 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 229 between rule 269 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 229 between rule 269 and token '<' resolved as reduce.
Conflict in state 229 between rule 269 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 229 between rule 269 and token '>' resolved as reduce.
Conflict in state 229 between rule 269 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 229 between rule 269 and token T_SL resolved as reduce.
Conflict in state 229 between rule 269 and token T_SR resolved as reduce.
Conflict in state 229 between rule 269 and token '+' resolved as reduce.
Conflict in state 229 between rule 269 and token '-' resolved as reduce.
Conflict in state 229 between rule 269 and token '.' resolved as reduce.
Conflict in state 229 between rule 269 and token '*' resolved as reduce.
Conflict in state 229 between rule 269 and token '/' resolved as reduce.
Conflict in state 229 between rule 269 and token '%' resolved as reduce.
Conflict in state 229 between rule 269 and token T_INSTANCEOF resolved as reduce.
Conflict in state 308 between rule 230 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 308 between rule 230 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 308 between rule 230 and token T_LOGICAL_AND resolved as shift.
Conflict in state 308 between rule 230 and token '?' resolved as shift.
Conflict in state 308 between rule 230 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 308 between rule 230 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 308 between rule 230 and token '|' resolved as shift.
Conflict in state 308 between rule 230 and token '^' resolved as shift.
Conflict in state 308 between rule 230 and token '&' resolved as shift.
Conflict in state 308 between rule 230 and token T_IS_EQUAL resolved as shift.
Conflict in state 308 between rule 230 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 308 between rule 230 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 308 between rule 230 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 308 between rule 230 and token '<' resolved as shift.
Conflict in state 308 between rule 230 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 308 between rule 230 and token '>' resolved as shift.
Conflict in state 308 between rule 230 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 308 between rule 230 and token T_SL resolved as shift.
Conflict in state 308 between rule 230 and token T_SR resolved as shift.
Conflict in state 308 between rule 230 and token '+' resolved as shift.
Conflict in state 308 between rule 230 and token '-' resolved as shift.
Conflict in state 308 between rule 230 and token '.' resolved as shift.
Conflict in state 308 between rule 230 and token '*' resolved as shift.
Conflict in state 308 between rule 230 and token '/' resolved as shift.
Conflict in state 308 between rule 230 and token '%' resolved as shift.
Conflict in state 308 between rule 230 and token T_INSTANCEOF resolved as shift.
Conflict in state 313 between rule 231 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 313 between rule 231 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 313 between rule 231 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 313 between rule 231 and token '?' resolved as reduce.
Conflict in state 313 between rule 231 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 313 between rule 231 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 313 between rule 231 and token '|' resolved as reduce.
Conflict in state 313 between rule 231 and token '^' resolved as shift.
Conflict in state 313 between rule 231 and token '&' resolved as shift.
Conflict in state 313 between rule 231 and token T_IS_EQUAL resolved as shift.
Conflict in state 313 between rule 231 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 313 between rule 231 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 313 between rule 231 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 313 between rule 231 and token '<' resolved as shift.
Conflict in state 313 between rule 231 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 313 between rule 231 and token '>' resolved as shift.
Conflict in state 313 between rule 231 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 313 between rule 231 and token T_SL resolved as shift.
Conflict in state 313 between rule 231 and token T_SR resolved as shift.
Conflict in state 313 between rule 231 and token '+' resolved as shift.
Conflict in state 313 between rule 231 and token '-' resolved as shift.
Conflict in state 313 between rule 231 and token '.' resolved as shift.
Conflict in state 313 between rule 231 and token '*' resolved as shift.
Conflict in state 313 between rule 231 and token '/' resolved as shift.
Conflict in state 313 between rule 231 and token '%' resolved as shift.
Conflict in state 313 between rule 231 and token T_INSTANCEOF resolved as shift.
Conflict in state 314 between rule 233 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 314 between rule 233 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 314 between rule 233 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 314 between rule 233 and token '?' resolved as reduce.
Conflict in state 314 between rule 233 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 314 between rule 233 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 314 between rule 233 and token '|' resolved as reduce.
Conflict in state 314 between rule 233 and token '^' resolved as reduce.
Conflict in state 314 between rule 233 and token '&' resolved as shift.
Conflict in state 314 between rule 233 and token T_IS_EQUAL resolved as shift.
Conflict in state 314 between rule 233 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 314 between rule 233 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 314 between rule 233 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 314 between rule 233 and token '<' resolved as shift.
Conflict in state 314 between rule 233 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 314 between rule 233 and token '>' resolved as shift.
Conflict in state 314 between rule 233 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 314 between rule 233 and token T_SL resolved as shift.
Conflict in state 314 between rule 233 and token T_SR resolved as shift.
Conflict in state 314 between rule 233 and token '+' resolved as shift.
Conflict in state 314 between rule 233 and token '-' resolved as shift.
Conflict in state 314 between rule 233 and token '.' resolved as shift.
Conflict in state 314 between rule 233 and token '*' resolved as shift.
Conflict in state 314 between rule 233 and token '/' resolved as shift.
Conflict in state 314 between rule 233 and token '%' resolved as shift.
Conflict in state 314 between rule 233 and token T_INSTANCEOF resolved as shift.
Conflict in state 315 between rule 232 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 315 between rule 232 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 315 between rule 232 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 315 between rule 232 and token '?' resolved as reduce.
Conflict in state 315 between rule 232 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 315 between rule 232 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 315 between rule 232 and token '|' resolved as reduce.
Conflict in state 315 between rule 232 and token '^' resolved as reduce.
Conflict in state 315 between rule 232 and token '&' resolved as reduce.
Conflict in state 315 between rule 232 and token T_IS_EQUAL resolved as shift.
Conflict in state 315 between rule 232 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 315 between rule 232 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 315 between rule 232 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 315 between rule 232 and token '<' resolved as shift.
Conflict in state 315 between rule 232 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 315 between rule 232 and token '>' resolved as shift.
Conflict in state 315 between rule 232 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 315 between rule 232 and token T_SL resolved as shift.
Conflict in state 315 between rule 232 and token T_SR resolved as shift.
Conflict in state 315 between rule 232 and token '+' resolved as shift.
Conflict in state 315 between rule 232 and token '-' resolved as shift.
Conflict in state 315 between rule 232 and token '.' resolved as shift.
Conflict in state 315 between rule 232 and token '*' resolved as shift.
Conflict in state 315 between rule 232 and token '/' resolved as shift.
Conflict in state 315 between rule 232 and token '%' resolved as shift.
Conflict in state 315 between rule 232 and token T_INSTANCEOF resolved as shift.
Conflict in state 316 between rule 248 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 316 between rule 248 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 316 between rule 248 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 316 between rule 248 and token '?' resolved as reduce.
Conflict in state 316 between rule 248 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 316 between rule 248 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 316 between rule 248 and token '|' resolved as reduce.
Conflict in state 316 between rule 248 and token '^' resolved as reduce.
Conflict in state 316 between rule 248 and token '&' resolved as reduce.
Conflict in state 316 between rule 248 and token T_IS_EQUAL resolved as an error.
Conflict in state 316 between rule 248 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 316 between rule 248 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 316 between rule 248 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 316 between rule 248 and token '<' resolved as shift.
Conflict in state 316 between rule 248 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 316 between rule 248 and token '>' resolved as shift.
Conflict in state 316 between rule 248 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 316 between rule 248 and token T_SL resolved as shift.
Conflict in state 316 between rule 248 and token T_SR resolved as shift.
Conflict in state 316 between rule 248 and token '+' resolved as shift.
Conflict in state 316 between rule 248 and token '-' resolved as shift.
Conflict in state 316 between rule 248 and token '.' resolved as shift.
Conflict in state 316 between rule 248 and token '*' resolved as shift.
Conflict in state 316 between rule 248 and token '/' resolved as shift.
Conflict in state 316 between rule 248 and token '%' resolved as shift.
Conflict in state 316 between rule 248 and token T_INSTANCEOF resolved as shift.
Conflict in state 317 between rule 249 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 317 between rule 249 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 317 between rule 249 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 317 between rule 249 and token '?' resolved as reduce.
Conflict in state 317 between rule 249 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 317 between rule 249 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 317 between rule 249 and token '|' resolved as reduce.
Conflict in state 317 between rule 249 and token '^' resolved as reduce.
Conflict in state 317 between rule 249 and token '&' resolved as reduce.
Conflict in state 317 between rule 249 and token T_IS_EQUAL resolved as an error.
Conflict in state 317 between rule 249 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 317 between rule 249 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 317 between rule 249 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 317 between rule 249 and token '<' resolved as shift.
Conflict in state 317 between rule 249 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 317 between rule 249 and token '>' resolved as shift.
Conflict in state 317 between rule 249 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 317 between rule 249 and token T_SL resolved as shift.
Conflict in state 317 between rule 249 and token T_SR resolved as shift.
Conflict in state 317 between rule 249 and token '+' resolved as shift.
Conflict in state 317 between rule 249 and token '-' resolved as shift.
Conflict in state 317 between rule 249 and token '.' resolved as shift.
Conflict in state 317 between rule 249 and token '*' resolved as shift.
Conflict in state 317 between rule 249 and token '/' resolved as shift.
Conflict in state 317 between rule 249 and token '%' resolved as shift.
Conflict in state 317 between rule 249 and token T_INSTANCEOF resolved as shift.
Conflict in state 318 between rule 246 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 318 between rule 246 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 318 between rule 246 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 318 between rule 246 and token '?' resolved as reduce.
Conflict in state 318 between rule 246 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 318 between rule 246 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 318 between rule 246 and token '|' resolved as reduce.
Conflict in state 318 between rule 246 and token '^' resolved as reduce.
Conflict in state 318 between rule 246 and token '&' resolved as reduce.
Conflict in state 318 between rule 246 and token T_IS_EQUAL resolved as an error.
Conflict in state 318 between rule 246 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 318 between rule 246 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 318 between rule 246 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 318 between rule 246 and token '<' resolved as shift.
Conflict in state 318 between rule 246 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 318 between rule 246 and token '>' resolved as shift.
Conflict in state 318 between rule 246 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 318 between rule 246 and token T_SL resolved as shift.
Conflict in state 318 between rule 246 and token T_SR resolved as shift.
Conflict in state 318 between rule 246 and token '+' resolved as shift.
Conflict in state 318 between rule 246 and token '-' resolved as shift.
Conflict in state 318 between rule 246 and token '.' resolved as shift.
Conflict in state 318 between rule 246 and token '*' resolved as shift.
Conflict in state 318 between rule 246 and token '/' resolved as shift.
Conflict in state 318 between rule 246 and token '%' resolved as shift.
Conflict in state 318 between rule 246 and token T_INSTANCEOF resolved as shift.
Conflict in state 319 between rule 247 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 319 between rule 247 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 319 between rule 247 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 319 between rule 247 and token '?' resolved as reduce.
Conflict in state 319 between rule 247 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 319 between rule 247 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 319 between rule 247 and token '|' resolved as reduce.
Conflict in state 319 between rule 247 and token '^' resolved as reduce.
Conflict in state 319 between rule 247 and token '&' resolved as reduce.
Conflict in state 319 between rule 247 and token T_IS_EQUAL resolved as an error.
Conflict in state 319 between rule 247 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 319 between rule 247 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 319 between rule 247 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 319 between rule 247 and token '<' resolved as shift.
Conflict in state 319 between rule 247 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 319 between rule 247 and token '>' resolved as shift.
Conflict in state 319 between rule 247 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 319 between rule 247 and token T_SL resolved as shift.
Conflict in state 319 between rule 247 and token T_SR resolved as shift.
Conflict in state 319 between rule 247 and token '+' resolved as shift.
Conflict in state 319 between rule 247 and token '-' resolved as shift.
Conflict in state 319 between rule 247 and token '.' resolved as shift.
Conflict in state 319 between rule 247 and token '*' resolved as shift.
Conflict in state 319 between rule 247 and token '/' resolved as shift.
Conflict in state 319 between rule 247 and token '%' resolved as shift.
Conflict in state 319 between rule 247 and token T_INSTANCEOF resolved as shift.
Conflict in state 320 between rule 250 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 320 between rule 250 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 320 between rule 250 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 320 between rule 250 and token '?' resolved as reduce.
Conflict in state 320 between rule 250 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 320 between rule 250 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 320 between rule 250 and token '|' resolved as reduce.
Conflict in state 320 between rule 250 and token '^' resolved as reduce.
Conflict in state 320 between rule 250 and token '&' resolved as reduce.
Conflict in state 320 between rule 250 and token T_IS_EQUAL resolved as reduce.
Conflict in state 320 between rule 250 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 320 between rule 250 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 320 between rule 250 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 320 between rule 250 and token '<' resolved as an error.
Conflict in state 320 between rule 250 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 320 between rule 250 and token '>' resolved as an error.
Conflict in state 320 between rule 250 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 320 between rule 250 and token T_SL resolved as shift.
Conflict in state 320 between rule 250 and token T_SR resolved as shift.
Conflict in state 320 between rule 250 and token '+' resolved as shift.
Conflict in state 320 between rule 250 and token '-' resolved as shift.
Conflict in state 320 between rule 250 and token '.' resolved as shift.
Conflict in state 320 between rule 250 and token '*' resolved as shift.
Conflict in state 320 between rule 250 and token '/' resolved as shift.
Conflict in state 320 between rule 250 and token '%' resolved as shift.
Conflict in state 320 between rule 250 and token T_INSTANCEOF resolved as shift.
Conflict in state 321 between rule 251 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 321 between rule 251 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 321 between rule 251 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 321 between rule 251 and token '?' resolved as reduce.
Conflict in state 321 between rule 251 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 321 between rule 251 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 321 between rule 251 and token '|' resolved as reduce.
Conflict in state 321 between rule 251 and token '^' resolved as reduce.
Conflict in state 321 between rule 251 and token '&' resolved as reduce.
Conflict in state 321 between rule 251 and token T_IS_EQUAL resolved as reduce.
Conflict in state 321 between rule 251 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 321 between rule 251 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 321 between rule 251 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 321 between rule 251 and token '<' resolved as an error.
Conflict in state 321 between rule 251 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 321 between rule 251 and token '>' resolved as an error.
Conflict in state 321 between rule 251 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 321 between rule 251 and token T_SL resolved as shift.
Conflict in state 321 between rule 251 and token T_SR resolved as shift.
Conflict in state 321 between rule 251 and token '+' resolved as shift.
Conflict in state 321 between rule 251 and token '-' resolved as shift.
Conflict in state 321 between rule 251 and token '.' resolved as shift.
Conflict in state 321 between rule 251 and token '*' resolved as shift.
Conflict in state 321 between rule 251 and token '/' resolved as shift.
Conflict in state 321 between rule 251 and token '%' resolved as shift.
Conflict in state 321 between rule 251 and token T_INSTANCEOF resolved as shift.
Conflict in state 322 between rule 252 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 322 between rule 252 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 322 between rule 252 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 322 between rule 252 and token '?' resolved as reduce.
Conflict in state 322 between rule 252 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 322 between rule 252 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 322 between rule 252 and token '|' resolved as reduce.
Conflict in state 322 between rule 252 and token '^' resolved as reduce.
Conflict in state 322 between rule 252 and token '&' resolved as reduce.
Conflict in state 322 between rule 252 and token T_IS_EQUAL resolved as reduce.
Conflict in state 322 between rule 252 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 322 between rule 252 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 322 between rule 252 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 322 between rule 252 and token '<' resolved as an error.
Conflict in state 322 between rule 252 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 322 between rule 252 and token '>' resolved as an error.
Conflict in state 322 between rule 252 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 322 between rule 252 and token T_SL resolved as shift.
Conflict in state 322 between rule 252 and token T_SR resolved as shift.
Conflict in state 322 between rule 252 and token '+' resolved as shift.
Conflict in state 322 between rule 252 and token '-' resolved as shift.
Conflict in state 322 between rule 252 and token '.' resolved as shift.
Conflict in state 322 between rule 252 and token '*' resolved as shift.
Conflict in state 322 between rule 252 and token '/' resolved as shift.
Conflict in state 322 between rule 252 and token '%' resolved as shift.
Conflict in state 322 between rule 252 and token T_INSTANCEOF resolved as shift.
Conflict in state 323 between rule 253 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 323 between rule 253 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 323 between rule 253 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 323 between rule 253 and token '?' resolved as reduce.
Conflict in state 323 between rule 253 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 323 between rule 253 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 323 between rule 253 and token '|' resolved as reduce.
Conflict in state 323 between rule 253 and token '^' resolved as reduce.
Conflict in state 323 between rule 253 and token '&' resolved as reduce.
Conflict in state 323 between rule 253 and token T_IS_EQUAL resolved as reduce.
Conflict in state 323 between rule 253 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 323 between rule 253 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 323 between rule 253 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 323 between rule 253 and token '<' resolved as an error.
Conflict in state 323 between rule 253 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 323 between rule 253 and token '>' resolved as an error.
Conflict in state 323 between rule 253 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 323 between rule 253 and token T_SL resolved as shift.
Conflict in state 323 between rule 253 and token T_SR resolved as shift.
Conflict in state 323 between rule 253 and token '+' resolved as shift.
Conflict in state 323 between rule 253 and token '-' resolved as shift.
Conflict in state 323 between rule 253 and token '.' resolved as shift.
Conflict in state 323 between rule 253 and token '*' resolved as shift.
Conflict in state 323 between rule 253 and token '/' resolved as shift.
Conflict in state 323 between rule 253 and token '%' resolved as shift.
Conflict in state 323 between rule 253 and token T_INSTANCEOF resolved as shift.
Conflict in state 324 between rule 240 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 324 between rule 240 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 324 between rule 240 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 324 between rule 240 and token '?' resolved as reduce.
Conflict in state 324 between rule 240 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 324 between rule 240 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 324 between rule 240 and token '|' resolved as reduce.
Conflict in state 324 between rule 240 and token '^' resolved as reduce.
Conflict in state 324 between rule 240 and token '&' resolved as reduce.
Conflict in state 324 between rule 240 and token T_IS_EQUAL resolved as reduce.
Conflict in state 324 between rule 240 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 324 between rule 240 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 324 between rule 240 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 324 between rule 240 and token '<' resolved as reduce.
Conflict in state 324 between rule 240 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 324 between rule 240 and token '>' resolved as reduce.
Conflict in state 324 between rule 240 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 324 between rule 240 and token T_SL resolved as reduce.
Conflict in state 324 between rule 240 and token T_SR resolved as reduce.
Conflict in state 324 between rule 240 and token '+' resolved as shift.
Conflict in state 324 between rule 240 and token '-' resolved as shift.
Conflict in state 324 between rule 240 and token '.' resolved as shift.
Conflict in state 324 between rule 240 and token '*' resolved as shift.
Conflict in state 324 between rule 240 and token '/' resolved as shift.
Conflict in state 324 between rule 240 and token '%' resolved as shift.
Conflict in state 324 between rule 240 and token T_INSTANCEOF resolved as shift.
Conflict in state 325 between rule 241 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 325 between rule 241 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 325 between rule 241 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 325 between rule 241 and token '?' resolved as reduce.
Conflict in state 325 between rule 241 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 325 between rule 241 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 325 between rule 241 and token '|' resolved as reduce.
Conflict in state 325 between rule 241 and token '^' resolved as reduce.
Conflict in state 325 between rule 241 and token '&' resolved as reduce.
Conflict in state 325 between rule 241 and token T_IS_EQUAL resolved as reduce.
Conflict in state 325 between rule 241 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 325 between rule 241 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 325 between rule 241 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 325 between rule 241 and token '<' resolved as reduce.
Conflict in state 325 between rule 241 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 325 between rule 241 and token '>' resolved as reduce.
Conflict in state 325 between rule 241 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 325 between rule 241 and token T_SL resolved as reduce.
Conflict in state 325 between rule 241 and token T_SR resolved as reduce.
Conflict in state 325 between rule 241 and token '+' resolved as shift.
Conflict in state 325 between rule 241 and token '-' resolved as shift.
Conflict in state 325 between rule 241 and token '.' resolved as shift.
Conflict in state 325 between rule 241 and token '*' resolved as shift.
Conflict in state 325 between rule 241 and token '/' resolved as shift.
Conflict in state 325 between rule 241 and token '%' resolved as shift.
Conflict in state 325 between rule 241 and token T_INSTANCEOF resolved as shift.
Conflict in state 326 between rule 235 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 326 between rule 235 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 326 between rule 235 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 326 between rule 235 and token '?' resolved as reduce.
Conflict in state 326 between rule 235 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 326 between rule 235 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 326 between rule 235 and token '|' resolved as reduce.
Conflict in state 326 between rule 235 and token '^' resolved as reduce.
Conflict in state 326 between rule 235 and token '&' resolved as reduce.
Conflict in state 326 between rule 235 and token T_IS_EQUAL resolved as reduce.
Conflict in state 326 between rule 235 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 326 between rule 235 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 326 between rule 235 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 326 between rule 235 and token '<' resolved as reduce.
Conflict in state 326 between rule 235 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 326 between rule 235 and token '>' resolved as reduce.
Conflict in state 326 between rule 235 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 326 between rule 235 and token T_SL resolved as reduce.
Conflict in state 326 between rule 235 and token T_SR resolved as reduce.
Conflict in state 326 between rule 235 and token '+' resolved as reduce.
Conflict in state 326 between rule 235 and token '-' resolved as reduce.
Conflict in state 326 between rule 235 and token '.' resolved as reduce.
Conflict in state 326 between rule 235 and token '*' resolved as shift.
Conflict in state 326 between rule 235 and token '/' resolved as shift.
Conflict in state 326 between rule 235 and token '%' resolved as shift.
Conflict in state 326 between rule 235 and token T_INSTANCEOF resolved as shift.
Conflict in state 327 between rule 236 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 327 between rule 236 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 327 between rule 236 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 327 between rule 236 and token '?' resolved as reduce.
Conflict in state 327 between rule 236 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 327 between rule 236 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 327 between rule 236 and token '|' resolved as reduce.
Conflict in state 327 between rule 236 and token '^' resolved as reduce.
Conflict in state 327 between rule 236 and token '&' resolved as reduce.
Conflict in state 327 between rule 236 and token T_IS_EQUAL resolved as reduce.
Conflict in state 327 between rule 236 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 327 between rule 236 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 327 between rule 236 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 327 between rule 236 and token '<' resolved as reduce.
Conflict in state 327 between rule 236 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 327 between rule 236 and token '>' resolved as reduce.
Conflict in state 327 between rule 236 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 327 between rule 236 and token T_SL resolved as reduce.
Conflict in state 327 between rule 236 and token T_SR resolved as reduce.
Conflict in state 327 between rule 236 and token '+' resolved as reduce.
Conflict in state 327 between rule 236 and token '-' resolved as reduce.
Conflict in state 327 between rule 236 and token '.' resolved as reduce.
Conflict in state 327 between rule 236 and token '*' resolved as shift.
Conflict in state 327 between rule 236 and token '/' resolved as shift.
Conflict in state 327 between rule 236 and token '%' resolved as shift.
Conflict in state 327 between rule 236 and token T_INSTANCEOF resolved as shift.
Conflict in state 328 between rule 234 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 328 between rule 234 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 328 between rule 234 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 328 between rule 234 and token '?' resolved as reduce.
Conflict in state 328 between rule 234 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 328 between rule 234 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 328 between rule 234 and token '|' resolved as reduce.
Conflict in state 328 between rule 234 and token '^' resolved as reduce.
Conflict in state 328 between rule 234 and token '&' resolved as reduce.
Conflict in state 328 between rule 234 and token T_IS_EQUAL resolved as reduce.
Conflict in state 328 between rule 234 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 328 between rule 234 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 328 between rule 234 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 328 between rule 234 and token '<' resolved as reduce.
Conflict in state 328 between rule 234 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 328 between rule 234 and token '>' resolved as reduce.
Conflict in state 328 between rule 234 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 328 between rule 234 and token T_SL resolved as reduce.
Conflict in state 328 between rule 234 and token T_SR resolved as reduce.
Conflict in state 328 between rule 234 and token '+' resolved as reduce.
Conflict in state 328 between rule 234 and token '-' resolved as reduce.
Conflict in state 328 between rule 234 and token '.' resolved as reduce.
Conflict in state 328 between rule 234 and token '*' resolved as shift.
Conflict in state 328 between rule 234 and token '/' resolved as shift.
Conflict in state 328 between rule 234 and token '%' resolved as shift.
Conflict in state 328 between rule 234 and token T_INSTANCEOF resolved as shift.
Conflict in state 329 between rule 237 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 329 between rule 237 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 329 between rule 237 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 329 between rule 237 and token '?' resolved as reduce.
Conflict in state 329 between rule 237 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 329 between rule 237 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 329 between rule 237 and token '|' resolved as reduce.
Conflict in state 329 between rule 237 and token '^' resolved as reduce.
Conflict in state 329 between rule 237 and token '&' resolved as reduce.
Conflict in state 329 between rule 237 and token T_IS_EQUAL resolved as reduce.
Conflict in state 329 between rule 237 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 329 between rule 237 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 329 between rule 237 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 329 between rule 237 and token '<' resolved as reduce.
Conflict in state 329 between rule 237 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 329 between rule 237 and token '>' resolved as reduce.
Conflict in state 329 between rule 237 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 329 between rule 237 and token T_SL resolved as reduce.
Conflict in state 329 between rule 237 and token T_SR resolved as reduce.
Conflict in state 329 between rule 237 and token '+' resolved as reduce.
Conflict in state 329 between rule 237 and token '-' resolved as reduce.
Conflict in state 329 between rule 237 and token '.' resolved as reduce.
Conflict in state 329 between rule 237 and token '*' resolved as reduce.
Conflict in state 329 between rule 237 and token '/' resolved as reduce.
Conflict in state 329 between rule 237 and token '%' resolved as reduce.
Conflict in state 329 between rule 237 and token T_INSTANCEOF resolved as shift.
Conflict in state 330 between rule 238 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 330 between rule 238 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 330 between rule 238 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 330 between rule 238 and token '?' resolved as reduce.
Conflict in state 330 between rule 238 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 330 between rule 238 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 330 between rule 238 and token '|' resolved as reduce.
Conflict in state 330 between rule 238 and token '^' resolved as reduce.
Conflict in state 330 between rule 238 and token '&' resolved as reduce.
Conflict in state 330 between rule 238 and token T_IS_EQUAL resolved as reduce.
Conflict in state 330 between rule 238 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 330 between rule 238 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 330 between rule 238 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 330 between rule 238 and token '<' resolved as reduce.
Conflict in state 330 between rule 238 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 330 between rule 238 and token '>' resolved as reduce.
Conflict in state 330 between rule 238 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 330 between rule 238 and token T_SL resolved as reduce.
Conflict in state 330 between rule 238 and token T_SR resolved as reduce.
Conflict in state 330 between rule 238 and token '+' resolved as reduce.
Conflict in state 330 between rule 238 and token '-' resolved as reduce.
Conflict in state 330 between rule 238 and token '.' resolved as reduce.
Conflict in state 330 between rule 238 and token '*' resolved as reduce.
Conflict in state 330 between rule 238 and token '/' resolved as reduce.
Conflict in state 330 between rule 238 and token '%' resolved as reduce.
Conflict in state 330 between rule 238 and token T_INSTANCEOF resolved as shift.
Conflict in state 331 between rule 239 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 331 between rule 239 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 331 between rule 239 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 331 between rule 239 and token '?' resolved as reduce.
Conflict in state 331 between rule 239 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 331 between rule 239 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 331 between rule 239 and token '|' resolved as reduce.
Conflict in state 331 between rule 239 and token '^' resolved as reduce.
Conflict in state 331 between rule 239 and token '&' resolved as reduce.
Conflict in state 331 between rule 239 and token T_IS_EQUAL resolved as reduce.
Conflict in state 331 between rule 239 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 331 between rule 239 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 331 between rule 239 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 331 between rule 239 and token '<' resolved as reduce.
Conflict in state 331 between rule 239 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 331 between rule 239 and token '>' resolved as reduce.
Conflict in state 331 between rule 239 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 331 between rule 239 and token T_SL resolved as reduce.
Conflict in state 331 between rule 239 and token T_SR resolved as reduce.
Conflict in state 331 between rule 239 and token '+' resolved as reduce.
Conflict in state 331 between rule 239 and token '-' resolved as reduce.
Conflict in state 331 between rule 239 and token '.' resolved as reduce.
Conflict in state 331 between rule 239 and token '*' resolved as reduce.
Conflict in state 331 between rule 239 and token '/' resolved as reduce.
Conflict in state 331 between rule 239 and token '%' resolved as reduce.
Conflict in state 331 between rule 239 and token T_INSTANCEOF resolved as shift.
Conflict in state 334 between rule 200 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 334 between rule 200 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 334 between rule 200 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 334 between rule 200 and token '?' resolved as shift.
Conflict in state 334 between rule 200 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 334 between rule 200 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 334 between rule 200 and token '|' resolved as shift.
Conflict in state 334 between rule 200 and token '^' resolved as shift.
Conflict in state 334 between rule 200 and token '&' resolved as shift.
Conflict in state 334 between rule 200 and token T_IS_EQUAL resolved as shift.
Conflict in state 334 between rule 200 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 334 between rule 200 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 334 between rule 200 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 334 between rule 200 and token '<' resolved as shift.
Conflict in state 334 between rule 200 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 334 between rule 200 and token '>' resolved as shift.
Conflict in state 334 between rule 200 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 334 between rule 200 and token T_SL resolved as shift.
Conflict in state 334 between rule 200 and token T_SR resolved as shift.
Conflict in state 334 between rule 200 and token '+' resolved as shift.
Conflict in state 334 between rule 200 and token '-' resolved as shift.
Conflict in state 334 between rule 200 and token '.' resolved as shift.
Conflict in state 334 between rule 200 and token '*' resolved as shift.
Conflict in state 334 between rule 200 and token '/' resolved as shift.
Conflict in state 334 between rule 200 and token '%' resolved as shift.
Conflict in state 334 between rule 200 and token T_INSTANCEOF resolved as shift.
Conflict in state 335 between rule 207 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 335 between rule 207 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 335 between rule 207 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 335 between rule 207 and token '?' resolved as shift.
Conflict in state 335 between rule 207 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 335 between rule 207 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 335 between rule 207 and token '|' resolved as shift.
Conflict in state 335 between rule 207 and token '^' resolved as shift.
Conflict in state 335 between rule 207 and token '&' resolved as shift.
Conflict in state 335 between rule 207 and token T_IS_EQUAL resolved as shift.
Conflict in state 335 between rule 207 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 335 between rule 207 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 335 between rule 207 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 335 between rule 207 and token '<' resolved as shift.
Conflict in state 335 between rule 207 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 335 between rule 207 and token '>' resolved as shift.
Conflict in state 335 between rule 207 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 335 between rule 207 and token T_SL resolved as shift.
Conflict in state 335 between rule 207 and token T_SR resolved as shift.
Conflict in state 335 between rule 207 and token '+' resolved as shift.
Conflict in state 335 between rule 207 and token '-' resolved as shift.
Conflict in state 335 between rule 207 and token '.' resolved as shift.
Conflict in state 335 between rule 207 and token '*' resolved as shift.
Conflict in state 335 between rule 207 and token '/' resolved as shift.
Conflict in state 335 between rule 207 and token '%' resolved as shift.
Conflict in state 335 between rule 207 and token T_INSTANCEOF resolved as shift.
Conflict in state 336 between rule 208 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 336 between rule 208 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 336 between rule 208 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 336 between rule 208 and token '?' resolved as shift.
Conflict in state 336 between rule 208 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 336 between rule 208 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 336 between rule 208 and token '|' resolved as shift.
Conflict in state 336 between rule 208 and token '^' resolved as shift.
Conflict in state 336 between rule 208 and token '&' resolved as shift.
Conflict in state 336 between rule 208 and token T_IS_EQUAL resolved as shift.
Conflict in state 336 between rule 208 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 336 between rule 208 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 336 between rule 208 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 336 between rule 208 and token '<' resolved as shift.
Conflict in state 336 between rule 208 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 336 between rule 208 and token '>' resolved as shift.
Conflict in state 336 between rule 208 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 336 between rule 208 and token T_SL resolved as shift.
Conflict in state 336 between rule 208 and token T_SR resolved as shift.
Conflict in state 336 between rule 208 and token '+' resolved as shift.
Conflict in state 336 between rule 208 and token '-' resolved as shift.
Conflict in state 336 between rule 208 and token '.' resolved as shift.
Conflict in state 336 between rule 208 and token '*' resolved as shift.
Conflict in state 336 between rule 208 and token '/' resolved as shift.
Conflict in state 336 between rule 208 and token '%' resolved as shift.
Conflict in state 336 between rule 208 and token T_INSTANCEOF resolved as shift.
Conflict in state 337 between rule 209 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 337 between rule 209 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 337 between rule 209 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 337 between rule 209 and token '?' resolved as shift.
Conflict in state 337 between rule 209 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 337 between rule 209 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 337 between rule 209 and token '|' resolved as shift.
Conflict in state 337 between rule 209 and token '^' resolved as shift.
Conflict in state 337 between rule 209 and token '&' resolved as shift.
Conflict in state 337 between rule 209 and token T_IS_EQUAL resolved as shift.
Conflict in state 337 between rule 209 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 337 between rule 209 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 337 between rule 209 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 337 between rule 209 and token '<' resolved as shift.
Conflict in state 337 between rule 209 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 337 between rule 209 and token '>' resolved as shift.
Conflict in state 337 between rule 209 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 337 between rule 209 and token T_SL resolved as shift.
Conflict in state 337 between rule 209 and token T_SR resolved as shift.
Conflict in state 337 between rule 209 and token '+' resolved as shift.
Conflict in state 337 between rule 209 and token '-' resolved as shift.
Conflict in state 337 between rule 209 and token '.' resolved as shift.
Conflict in state 337 between rule 209 and token '*' resolved as shift.
Conflict in state 337 between rule 209 and token '/' resolved as shift.
Conflict in state 337 between rule 209 and token '%' resolved as shift.
Conflict in state 337 between rule 209 and token T_INSTANCEOF resolved as shift.
Conflict in state 338 between rule 210 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 338 between rule 210 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 338 between rule 210 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 338 between rule 210 and token '?' resolved as shift.
Conflict in state 338 between rule 210 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 338 between rule 210 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 338 between rule 210 and token '|' resolved as shift.
Conflict in state 338 between rule 210 and token '^' resolved as shift.
Conflict in state 338 between rule 210 and token '&' resolved as shift.
Conflict in state 338 between rule 210 and token T_IS_EQUAL resolved as shift.
Conflict in state 338 between rule 210 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 338 between rule 210 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 338 between rule 210 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 338 between rule 210 and token '<' resolved as shift.
Conflict in state 338 between rule 210 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 338 between rule 210 and token '>' resolved as shift.
Conflict in state 338 between rule 210 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 338 between rule 210 and token T_SL resolved as shift.
Conflict in state 338 between rule 210 and token T_SR resolved as shift.
Conflict in state 338 between rule 210 and token '+' resolved as shift.
Conflict in state 338 between rule 210 and token '-' resolved as shift.
Conflict in state 338 between rule 210 and token '.' resolved as shift.
Conflict in state 338 between rule 210 and token '*' resolved as shift.
Conflict in state 338 between rule 210 and token '/' resolved as shift.
Conflict in state 338 between rule 210 and token '%' resolved as shift.
Conflict in state 338 between rule 210 and token T_INSTANCEOF resolved as shift.
Conflict in state 339 between rule 211 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 339 between rule 211 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 339 between rule 211 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 339 between rule 211 and token '?' resolved as shift.
Conflict in state 339 between rule 211 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 339 between rule 211 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 339 between rule 211 and token '|' resolved as shift.
Conflict in state 339 between rule 211 and token '^' resolved as shift.
Conflict in state 339 between rule 211 and token '&' resolved as shift.
Conflict in state 339 between rule 211 and token T_IS_EQUAL resolved as shift.
Conflict in state 339 between rule 211 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 339 between rule 211 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 339 between rule 211 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 339 between rule 211 and token '<' resolved as shift.
Conflict in state 339 between rule 211 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 339 between rule 211 and token '>' resolved as shift.
Conflict in state 339 between rule 211 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 339 between rule 211 and token T_SL resolved as shift.
Conflict in state 339 between rule 211 and token T_SR resolved as shift.
Conflict in state 339 between rule 211 and token '+' resolved as shift.
Conflict in state 339 between rule 211 and token '-' resolved as shift.
Conflict in state 339 between rule 211 and token '.' resolved as shift.
Conflict in state 339 between rule 211 and token '*' resolved as shift.
Conflict in state 339 between rule 211 and token '/' resolved as shift.
Conflict in state 339 between rule 211 and token '%' resolved as shift.
Conflict in state 339 between rule 211 and token T_INSTANCEOF resolved as shift.
Conflict in state 340 between rule 212 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 340 between rule 212 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 340 between rule 212 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 340 between rule 212 and token '?' resolved as shift.
Conflict in state 340 between rule 212 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 340 between rule 212 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 340 between rule 212 and token '|' resolved as shift.
Conflict in state 340 between rule 212 and token '^' resolved as shift.
Conflict in state 340 between rule 212 and token '&' resolved as shift.
Conflict in state 340 between rule 212 and token T_IS_EQUAL resolved as shift.
Conflict in state 340 between rule 212 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 340 between rule 212 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 340 between rule 212 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 340 between rule 212 and token '<' resolved as shift.
Conflict in state 340 between rule 212 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 340 between rule 212 and token '>' resolved as shift.
Conflict in state 340 between rule 212 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 340 between rule 212 and token T_SL resolved as shift.
Conflict in state 340 between rule 212 and token T_SR resolved as shift.
Conflict in state 340 between rule 212 and token '+' resolved as shift.
Conflict in state 340 between rule 212 and token '-' resolved as shift.
Conflict in state 340 between rule 212 and token '.' resolved as shift.
Conflict in state 340 between rule 212 and token '*' resolved as shift.
Conflict in state 340 between rule 212 and token '/' resolved as shift.
Conflict in state 340 between rule 212 and token '%' resolved as shift.
Conflict in state 340 between rule 212 and token T_INSTANCEOF resolved as shift.
Conflict in state 341 between rule 213 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 341 between rule 213 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 341 between rule 213 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 341 between rule 213 and token '?' resolved as shift.
Conflict in state 341 between rule 213 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 341 between rule 213 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 341 between rule 213 and token '|' resolved as shift.
Conflict in state 341 between rule 213 and token '^' resolved as shift.
Conflict in state 341 between rule 213 and token '&' resolved as shift.
Conflict in state 341 between rule 213 and token T_IS_EQUAL resolved as shift.
Conflict in state 341 between rule 213 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 341 between rule 213 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 341 between rule 213 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 341 between rule 213 and token '<' resolved as shift.
Conflict in state 341 between rule 213 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 341 between rule 213 and token '>' resolved as shift.
Conflict in state 341 between rule 213 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 341 between rule 213 and token T_SL resolved as shift.
Conflict in state 341 between rule 213 and token T_SR resolved as shift.
Conflict in state 341 between rule 213 and token '+' resolved as shift.
Conflict in state 341 between rule 213 and token '-' resolved as shift.
Conflict in state 341 between rule 213 and token '.' resolved as shift.
Conflict in state 341 between rule 213 and token '*' resolved as shift.
Conflict in state 341 between rule 213 and token '/' resolved as shift.
Conflict in state 341 between rule 213 and token '%' resolved as shift.
Conflict in state 341 between rule 213 and token T_INSTANCEOF resolved as shift.
Conflict in state 342 between rule 214 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 342 between rule 214 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 342 between rule 214 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 342 between rule 214 and token '?' resolved as shift.
Conflict in state 342 between rule 214 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 342 between rule 214 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 342 between rule 214 and token '|' resolved as shift.
Conflict in state 342 between rule 214 and token '^' resolved as shift.
Conflict in state 342 between rule 214 and token '&' resolved as shift.
Conflict in state 342 between rule 214 and token T_IS_EQUAL resolved as shift.
Conflict in state 342 between rule 214 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 342 between rule 214 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 342 between rule 214 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 342 between rule 214 and token '<' resolved as shift.
Conflict in state 342 between rule 214 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 342 between rule 214 and token '>' resolved as shift.
Conflict in state 342 between rule 214 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 342 between rule 214 and token T_SL resolved as shift.
Conflict in state 342 between rule 214 and token T_SR resolved as shift.
Conflict in state 342 between rule 214 and token '+' resolved as shift.
Conflict in state 342 between rule 214 and token '-' resolved as shift.
Conflict in state 342 between rule 214 and token '.' resolved as shift.
Conflict in state 342 between rule 214 and token '*' resolved as shift.
Conflict in state 342 between rule 214 and token '/' resolved as shift.
Conflict in state 342 between rule 214 and token '%' resolved as shift.
Conflict in state 342 between rule 214 and token T_INSTANCEOF resolved as shift.
Conflict in state 343 between rule 215 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 343 between rule 215 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 343 between rule 215 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 343 between rule 215 and token '?' resolved as shift.
Conflict in state 343 between rule 215 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 343 between rule 215 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 343 between rule 215 and token '|' resolved as shift.
Conflict in state 343 between rule 215 and token '^' resolved as shift.
Conflict in state 343 between rule 215 and token '&' resolved as shift.
Conflict in state 343 between rule 215 and token T_IS_EQUAL resolved as shift.
Conflict in state 343 between rule 215 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 343 between rule 215 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 343 between rule 215 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 343 between rule 215 and token '<' resolved as shift.
Conflict in state 343 between rule 215 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 343 between rule 215 and token '>' resolved as shift.
Conflict in state 343 between rule 215 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 343 between rule 215 and token T_SL resolved as shift.
Conflict in state 343 between rule 215 and token T_SR resolved as shift.
Conflict in state 343 between rule 215 and token '+' resolved as shift.
Conflict in state 343 between rule 215 and token '-' resolved as shift.
Conflict in state 343 between rule 215 and token '.' resolved as shift.
Conflict in state 343 between rule 215 and token '*' resolved as shift.
Conflict in state 343 between rule 215 and token '/' resolved as shift.
Conflict in state 343 between rule 215 and token '%' resolved as shift.
Conflict in state 343 between rule 215 and token T_INSTANCEOF resolved as shift.
Conflict in state 344 between rule 216 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 344 between rule 216 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 344 between rule 216 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 344 between rule 216 and token '?' resolved as shift.
Conflict in state 344 between rule 216 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 344 between rule 216 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 344 between rule 216 and token '|' resolved as shift.
Conflict in state 344 between rule 216 and token '^' resolved as shift.
Conflict in state 344 between rule 216 and token '&' resolved as shift.
Conflict in state 344 between rule 216 and token T_IS_EQUAL resolved as shift.
Conflict in state 344 between rule 216 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 344 between rule 216 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 344 between rule 216 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 344 between rule 216 and token '<' resolved as shift.
Conflict in state 344 between rule 216 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 344 between rule 216 and token '>' resolved as shift.
Conflict in state 344 between rule 216 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 344 between rule 216 and token T_SL resolved as shift.
Conflict in state 344 between rule 216 and token T_SR resolved as shift.
Conflict in state 344 between rule 216 and token '+' resolved as shift.
Conflict in state 344 between rule 216 and token '-' resolved as shift.
Conflict in state 344 between rule 216 and token '.' resolved as shift.
Conflict in state 344 between rule 216 and token '*' resolved as shift.
Conflict in state 344 between rule 216 and token '/' resolved as shift.
Conflict in state 344 between rule 216 and token '%' resolved as shift.
Conflict in state 344 between rule 216 and token T_INSTANCEOF resolved as shift.
Conflict in state 345 between rule 217 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 345 between rule 217 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 345 between rule 217 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 345 between rule 217 and token '?' resolved as shift.
Conflict in state 345 between rule 217 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 345 between rule 217 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 345 between rule 217 and token '|' resolved as shift.
Conflict in state 345 between rule 217 and token '^' resolved as shift.
Conflict in state 345 between rule 217 and token '&' resolved as shift.
Conflict in state 345 between rule 217 and token T_IS_EQUAL resolved as shift.
Conflict in state 345 between rule 217 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 345 between rule 217 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 345 between rule 217 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 345 between rule 217 and token '<' resolved as shift.
Conflict in state 345 between rule 217 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 345 between rule 217 and token '>' resolved as shift.
Conflict in state 345 between rule 217 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 345 between rule 217 and token T_SL resolved as shift.
Conflict in state 345 between rule 217 and token T_SR resolved as shift.
Conflict in state 345 between rule 217 and token '+' resolved as shift.
Conflict in state 345 between rule 217 and token '-' resolved as shift.
Conflict in state 345 between rule 217 and token '.' resolved as shift.
Conflict in state 345 between rule 217 and token '*' resolved as shift.
Conflict in state 345 between rule 217 and token '/' resolved as shift.
Conflict in state 345 between rule 217 and token '%' resolved as shift.
Conflict in state 345 between rule 217 and token T_INSTANCEOF resolved as shift.
Conflict in state 420 between rule 227 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 420 between rule 227 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 420 between rule 227 and token T_LOGICAL_AND resolved as shift.
Conflict in state 420 between rule 227 and token '?' resolved as shift.
Conflict in state 420 between rule 227 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 420 between rule 227 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 420 between rule 227 and token '|' resolved as shift.
Conflict in state 420 between rule 227 and token '^' resolved as shift.
Conflict in state 420 between rule 227 and token '&' resolved as shift.
Conflict in state 420 between rule 227 and token T_IS_EQUAL resolved as shift.
Conflict in state 420 between rule 227 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 420 between rule 227 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 420 between rule 227 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 420 between rule 227 and token '<' resolved as shift.
Conflict in state 420 between rule 227 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 420 between rule 227 and token '>' resolved as shift.
Conflict in state 420 between rule 227 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 420 between rule 227 and token T_SL resolved as shift.
Conflict in state 420 between rule 227 and token T_SR resolved as shift.
Conflict in state 420 between rule 227 and token '+' resolved as shift.
Conflict in state 420 between rule 227 and token '-' resolved as shift.
Conflict in state 420 between rule 227 and token '.' resolved as shift.
Conflict in state 420 between rule 227 and token '*' resolved as shift.
Conflict in state 420 between rule 227 and token '/' resolved as shift.
Conflict in state 420 between rule 227 and token '%' resolved as shift.
Conflict in state 420 between rule 227 and token T_INSTANCEOF resolved as shift.
Conflict in state 421 between rule 229 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 421 between rule 229 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 421 between rule 229 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 421 between rule 229 and token '?' resolved as shift.
Conflict in state 421 between rule 229 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 421 between rule 229 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 421 between rule 229 and token '|' resolved as shift.
Conflict in state 421 between rule 229 and token '^' resolved as shift.
Conflict in state 421 between rule 229 and token '&' resolved as shift.
Conflict in state 421 between rule 229 and token T_IS_EQUAL resolved as shift.
Conflict in state 421 between rule 229 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 421 between rule 229 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 421 between rule 229 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 421 between rule 229 and token '<' resolved as shift.
Conflict in state 421 between rule 229 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 421 between rule 229 and token '>' resolved as shift.
Conflict in state 421 between rule 229 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 421 between rule 229 and token T_SL resolved as shift.
Conflict in state 421 between rule 229 and token T_SR resolved as shift.
Conflict in state 421 between rule 229 and token '+' resolved as shift.
Conflict in state 421 between rule 229 and token '-' resolved as shift.
Conflict in state 421 between rule 229 and token '.' resolved as shift.
Conflict in state 421 between rule 229 and token '*' resolved as shift.
Conflict in state 421 between rule 229 and token '/' resolved as shift.
Conflict in state 421 between rule 229 and token '%' resolved as shift.
Conflict in state 421 between rule 229 and token T_INSTANCEOF resolved as shift.
Conflict in state 423 between rule 223 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 423 between rule 223 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 423 between rule 223 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 423 between rule 223 and token '?' resolved as reduce.
Conflict in state 423 between rule 223 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 423 between rule 223 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 423 between rule 223 and token '|' resolved as shift.
Conflict in state 423 between rule 223 and token '^' resolved as shift.
Conflict in state 423 between rule 223 and token '&' resolved as shift.
Conflict in state 423 between rule 223 and token T_IS_EQUAL resolved as shift.
Conflict in state 423 between rule 223 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 423 between rule 223 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 423 between rule 223 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 423 between rule 223 and token '<' resolved as shift.
Conflict in state 423 between rule 223 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 423 between rule 223 and token '>' resolved as shift.
Conflict in state 423 between rule 223 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 423 between rule 223 and token T_SL resolved as shift.
Conflict in state 423 between rule 223 and token T_SR resolved as shift.
Conflict in state 423 between rule 223 and token '+' resolved as shift.
Conflict in state 423 between rule 223 and token '-' resolved as shift.
Conflict in state 423 between rule 223 and token '.' resolved as shift.
Conflict in state 423 between rule 223 and token '*' resolved as shift.
Conflict in state 423 between rule 223 and token '/' resolved as shift.
Conflict in state 423 between rule 223 and token '%' resolved as shift.
Conflict in state 423 between rule 223 and token T_INSTANCEOF resolved as shift.
Conflict in state 424 between rule 225 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 424 between rule 225 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 424 between rule 225 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 424 between rule 225 and token '?' resolved as reduce.
Conflict in state 424 between rule 225 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 424 between rule 225 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 424 between rule 225 and token '|' resolved as shift.
Conflict in state 424 between rule 225 and token '^' resolved as shift.
Conflict in state 424 between rule 225 and token '&' resolved as shift.
Conflict in state 424 between rule 225 and token T_IS_EQUAL resolved as shift.
Conflict in state 424 between rule 225 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 424 between rule 225 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 424 between rule 225 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 424 between rule 225 and token '<' resolved as shift.
Conflict in state 424 between rule 225 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 424 between rule 225 and token '>' resolved as shift.
Conflict in state 424 between rule 225 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 424 between rule 225 and token T_SL resolved as shift.
Conflict in state 424 between rule 225 and token T_SR resolved as shift.
Conflict in state 424 between rule 225 and token '+' resolved as shift.
Conflict in state 424 between rule 225 and token '-' resolved as shift.
Conflict in state 424 between rule 225 and token '.' resolved as shift.
Conflict in state 424 between rule 225 and token '*' resolved as shift.
Conflict in state 424 between rule 225 and token '/' resolved as shift.
Conflict in state 424 between rule 225 and token '%' resolved as shift.
Conflict in state 424 between rule 225 and token T_INSTANCEOF resolved as shift.
Conflict in state 576 between rule 199 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 576 between rule 199 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 576 between rule 199 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 576 between rule 199 and token '?' resolved as shift.
Conflict in state 576 between rule 199 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 576 between rule 199 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 576 between rule 199 and token '|' resolved as shift.
Conflict in state 576 between rule 199 and token '^' resolved as shift.
Conflict in state 576 between rule 199 and token '&' resolved as shift.
Conflict in state 576 between rule 199 and token T_IS_EQUAL resolved as shift.
Conflict in state 576 between rule 199 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 576 between rule 199 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 576 between rule 199 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 576 between rule 199 and token '<' resolved as shift.
Conflict in state 576 between rule 199 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 576 between rule 199 and token '>' resolved as shift.
Conflict in state 576 between rule 199 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 576 between rule 199 and token T_SL resolved as shift.
Conflict in state 576 between rule 199 and token T_SR resolved as shift.
Conflict in state 576 between rule 199 and token '+' resolved as shift.
Conflict in state 576 between rule 199 and token '-' resolved as shift.
Conflict in state 576 between rule 199 and token '.' resolved as shift.
Conflict in state 576 between rule 199 and token '*' resolved as shift.
Conflict in state 576 between rule 199 and token '/' resolved as shift.
Conflict in state 576 between rule 199 and token '%' resolved as shift.
Conflict in state 576 between rule 199 and token T_INSTANCEOF resolved as shift.
Conflict in state 600 between rule 258 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 600 between rule 258 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 600 between rule 258 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 600 between rule 258 and token '?' resolved as reduce.
Conflict in state 600 between rule 258 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 600 between rule 258 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 600 between rule 258 and token '|' resolved as shift.
Conflict in state 600 between rule 258 and token '^' resolved as shift.
Conflict in state 600 between rule 258 and token '&' resolved as shift.
Conflict in state 600 between rule 258 and token T_IS_EQUAL resolved as shift.
Conflict in state 600 between rule 258 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 600 between rule 258 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 600 between rule 258 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 600 between rule 258 and token '<' resolved as shift.
Conflict in state 600 between rule 258 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 600 between rule 258 and token '>' resolved as shift.
Conflict in state 600 between rule 258 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 600 between rule 258 and token T_SL resolved as shift.
Conflict in state 600 between rule 258 and token T_SR resolved as shift.
Conflict in state 600 between rule 258 and token '+' resolved as shift.
Conflict in state 600 between rule 258 and token '-' resolved as shift.
Conflict in state 600 between rule 258 and token '.' resolved as shift.
Conflict in state 600 between rule 258 and token '*' resolved as shift.
Conflict in state 600 between rule 258 and token '/' resolved as shift.
Conflict in state 600 between rule 258 and token '%' resolved as shift.
Conflict in state 600 between rule 258 and token T_INSTANCEOF resolved as shift.


Terminals which are not used:

   T_COMMENT
   T_DOC_COMMENT
   T_OPEN_TAG
   T_OPEN_TAG_WITH_ECHO
   T_CLOSE_TAG
   T_WHITESPACE


State 280 contains 2 shift/reduce conflicts.
State 609 contains 2 shift/reduce conflicts.


Grammar

  Number, Line, Rule
    1 148 start -> top_statement_list
    2 152 @1 -> /* empty */
    3 152 top_statement_list -> top_statement_list @1 top_statement
    4 154 top_statement_list -> /* empty */
    5 158 top_statement -> statement
    6 160 top_statement -> function_declaration_statement
    7 161 top_statement -> class_declaration_statement
    8 165 @2 -> /* empty */
    9 165 inner_statement_list -> inner_statement_list @2 inner_statement
   10 167 inner_statement_list -> /* empty */
   11 171 inner_statement -> statement
   12 173 inner_statement -> function_declaration_statement
   13 174 inner_statement -> class_declaration_statement
   14 178 statement -> unticked_statement
   15 182 unticked_statement -> '{' inner_statement_list '}'
   16 184 @3 -> /* empty */
   17 184 @4 -> /* empty */
   18 184 unticked_statement -> T_IF '(' expr ')' @3 statement @4 elseif_list else_single
   19 185 @5 -> /* empty */
   20 185 @6 -> /* empty */
   21 185 unticked_statement -> T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'
   22 186 @7 -> /* empty */
   23 186 @8 -> /* empty */
   24 186 unticked_statement -> T_WHILE '(' @7 expr ')' @8 while_statement
   25 187 @9 -> /* empty */
   26 187 @10 -> /* empty */
   27 187 unticked_statement -> T_DO @9 statement T_WHILE '(' @10 expr ')' ';'
   28 188 @11 -> /* empty */
   29 188 @12 -> /* empty */
   30 188 @13 -> /* empty */
   31 188 unticked_statement -> T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement
   32 197 @14 -> /* empty */
   33 197 unticked_statement -> T_SWITCH '(' expr ')' @14 switch_case_list
   34 198 unticked_statement -> T_BREAK ';'
   35 199 unticked_statement -> T_BREAK expr ';'
   36 200 unticked_statement -> T_CONTINUE ';'
   37 201 unticked_statement -> T_CONTINUE expr ';'
   38 202 unticked_statement -> T_RETURN ';'
   39 203 unticked_statement -> T_RETURN expr_without_variable ';'
   40 204 unticked_statement -> T_RETURN variable ';'
   41 205 unticked_statement -> T_GLOBAL global_var_list ';'
   42 206 unticked_statement -> T_STATIC static_var_list ';'
   43 207 unticked_statement -> T_ECHO echo_expr_list ';'
   44 208 unticked_statement -> T_INLINE_HTML
   45 209 unticked_statement -> expr ';'
   46 210 unticked_statement -> T_USE use_filename ';'
   47 211 unticked_statement -> T_UNSET '(' unset_variables ')' ';'
   48 212 @15 -> /* empty */
   49 212 @16 -> /* empty */
   50 212 unticked_statement -> T_FOREACH '(' variable T_AS @15 foreach_variable foreach_optional_arg ')' @16 foreach_statement
   51 213 @17 -> /* empty */
   52 213 @18 -> /* empty */
   53 213 unticked_statement -> T_FOREACH '(' expr_without_variable T_AS @17 w_variable foreach_optional_arg ')' @18 foreach_statement
   54 214 @19 -> /* empty */
   55 214 unticked_statement -> T_DECLARE @19 '(' declare_list ')' declare_statement
   56 215 unticked_statement -> ';'
   57 216 @20 -> /* empty */
   58 216 @21 -> /* empty */
   59 216 @22 -> /* empty */
   60 216 @23 -> /* empty */
   61 216 @24 -> /* empty */
   62 216 unticked_statement -> T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches
   63 222 unticked_statement -> T_THROW expr ';'
   64 226 additional_catches -> non_empty_additional_catches
   65 228 additional_catches -> /* empty */
   66 231 non_empty_additional_catches -> additional_catch
   67 233 non_empty_additional_catches -> non_empty_additional_catches additional_catch
   68 237 @25 -> /* empty */
   69 237 @26 -> /* empty */
   70 237 additional_catch -> T_CATCH '(' fully_qualified_class_name @25 T_VARIABLE ')' @26 '{' inner_statement_list '}'
   71 242 unset_variables -> unset_variable
   72 244 unset_variables -> unset_variables ',' unset_variable
   73 247 unset_variable -> variable
   74 251 use_filename -> T_CONSTANT_ENCAPSED_STRING
   75 253 use_filename -> '(' T_CONSTANT_ENCAPSED_STRING ')'
   76 257 function_declaration_statement -> unticked_function_declaration_statement
   77 261 class_declaration_statement -> unticked_class_declaration_statement
   78 266 is_reference -> /* empty */
   79 268 is_reference -> '&'
   80 272 @27 -> /* empty */
   81 272 @28 -> /* empty */
   82 272 unticked_function_declaration_statement -> T_FUNCTION @27 is_reference T_STRING @28 '(' parameter_list ')' '{' inner_statement_list '}'
   83 277 @29 -> /* empty */
   84 277 unticked_class_declaration_statement -> class_entry_type T_STRING extends_from @29 implements_list '{' class_statement_list '}'
   85 284 @30 -> /* empty */
   86 284 unticked_class_declaration_statement -> interface_entry T_STRING @30 interface_extends_list '{' class_statement_list '}'
   87 293 class_entry_type -> T_CLASS
   88 295 class_entry_type -> T_ABSTRACT T_CLASS
   89 296 class_entry_type -> T_FINAL T_CLASS
   90 299 extends_from -> /* empty */
   91 301 extends_from -> T_EXTENDS fully_qualified_class_name
   92 304 interface_entry -> T_INTERFACE
   93 308 interface_extends_list -> /* empty */
   94 310 interface_extends_list -> T_EXTENDS interface_list
   95 313 implements_list -> /* empty */
   96 315 implements_list -> T_IMPLEMENTS interface_list
   97 318 interface_list -> fully_qualified_class_name
   98 320 interface_list -> interface_list ',' fully_qualified_class_name
   99 323 foreach_optional_arg -> /* empty */
  100 325 foreach_optional_arg -> T_DOUBLE_ARROW foreach_variable
  101 329 foreach_variable -> w_variable
  102 331 foreach_variable -> '&' w_variable
  103 334 for_statement -> statement
  104 336 for_statement -> ':' inner_statement_list T_ENDFOR ';'
  105 340 foreach_statement -> statement
  106 342 foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';'
  107 346 declare_statement -> statement
  108 348 declare_statement -> ':' inner_statement_list T_ENDDECLARE ';'
  109 352 declare_list -> T_STRING '=' static_scalar
  110 354 declare_list -> declare_list ',' T_STRING '=' static_scalar
  111 358 switch_case_list -> '{' case_list '}'
  112 360 switch_case_list -> '{' ';' case_list '}'
  113 361 switch_case_list -> ':' case_list T_ENDSWITCH ';'
  114 362 switch_case_list -> ':' ';' case_list T_ENDSWITCH ';'
  115 366 case_list -> /* empty */
  116 368 @31 -> /* empty */
  117 368 case_list -> case_list T_CASE expr case_separator @31 inner_statement_list
  118 369 @32 -> /* empty */
  119 369 case_list -> case_list T_DEFAULT case_separator @32 inner_statement_list
  120 373 case_separator -> ':'
  121 375 case_separator -> ';'
  122 379 while_statement -> statement
  123 381 while_statement -> ':' inner_statement_list T_ENDWHILE ';'
  124 386 elseif_list -> /* empty */
  125 388 @33 -> /* empty */
  126 388 elseif_list -> elseif_list T_ELSEIF '(' expr ')' @33 statement
  127 392 new_elseif_list -> /* empty */
  128 394 @34 -> /* empty */
  129 394 new_elseif_list -> new_elseif_list T_ELSEIF '(' expr ')' ':' @34 inner_statement_list
  130 398 else_single -> /* empty */
  131 400 else_single -> T_ELSE statement
  132 404 new_else_single -> /* empty */
  133 406 new_else_single -> T_ELSE ':' inner_statement_list
  134 410 parameter_list -> non_empty_parameter_list
  135 412 parameter_list -> /* empty */
  136 416 non_empty_parameter_list -> optional_class_type T_VARIABLE
  137 418 non_empty_parameter_list -> optional_class_type '&' T_VARIABLE
  138 419 non_empty_parameter_list -> optional_class_type '&' T_VARIABLE '=' static_scalar
  139 420 non_empty_parameter_list -> optional_class_type T_VARIABLE '=' static_scalar
  140 421 non_empty_parameter_list -> non_empty_parameter_list ',' optional_class_type T_VARIABLE
  141 422 non_empty_parameter_list -> non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE
  142 423 non_empty_parameter_list -> non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' static_scalar
  143 424 non_empty_parameter_list -> non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' static_scalar
  144 428 optional_class_type -> /* empty */
  145 430 optional_class_type -> T_STRING
  146 434 function_call_parameter_list -> non_empty_function_call_parameter_list
  147 436 function_call_parameter_list -> /* empty */
  148 440 non_empty_function_call_parameter_list -> expr_without_variable
  149 442 non_empty_function_call_parameter_list -> variable
  150 443 non_empty_function_call_parameter_list -> '&' w_variable
  151 444 non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' expr_without_variable
  152 445 non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' variable
  153 446 non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' '&' w_variable
  154 449 global_var_list -> global_var_list ',' global_var
  155 451 global_var_list -> global_var
  156 455 global_var -> T_VARIABLE
  157 457 global_var -> '$' r_variable
  158 458 global_var -> '$' '{' expr '}'
  159 462 static_var_list -> static_var_list ',' T_VARIABLE
  160 464 static_var_list -> static_var_list ',' T_VARIABLE '=' static_scalar
  161 465 static_var_list -> T_VARIABLE
  162 466 static_var_list -> T_VARIABLE '=' static_scalar
  163 471 class_statement_list -> class_statement_list class_statement
  164 473 class_statement_list -> /* empty */
  165 477 @35 -> /* empty */
  166 477 class_statement -> variable_modifiers @35 class_variable_declaration ';'
  167 479 class_statement -> class_constant_declaration ';'
  168 480 @36 -> /* empty */
  169 480 @37 -> /* empty */
  170 480 class_statement -> method_modifiers T_FUNCTION @36 is_reference T_STRING @37 '(' parameter_list ')' method_body
  171 485 method_body -> ';'
  172 487 method_body -> '{' inner_statement_list '}'
  173 490 variable_modifiers -> non_empty_member_modifiers
  174 492 variable_modifiers -> T_VAR
  175 495 method_modifiers -> /* empty */
  176 497 method_modifiers -> non_empty_member_modifiers
  177 500 non_empty_member_modifiers -> member_modifier
  178 502 non_empty_member_modifiers -> non_empty_member_modifiers member_modifier
  179 505 member_modifier -> T_PUBLIC
  180 507 member_modifier -> T_PROTECTED
  181 508 member_modifier -> T_PRIVATE
  182 509 member_modifier -> T_STATIC
  183 510 member_modifier -> T_ABSTRACT
  184 511 member_modifier -> T_FINAL
  185 514 class_variable_declaration -> class_variable_declaration ',' T_VARIABLE
  186 516 class_variable_declaration -> class_variable_declaration ',' T_VARIABLE '=' static_scalar
  187 517 class_variable_declaration -> T_VARIABLE
  188 518 class_variable_declaration -> T_VARIABLE '=' static_scalar
  189 521 class_constant_declaration -> class_constant_declaration ',' T_STRING '=' static_scalar
  190 523 class_constant_declaration -> T_CONST T_STRING '=' static_scalar
  191 526 echo_expr_list -> echo_expr_list ',' expr
  192 528 echo_expr_list -> expr
  193 532 for_expr -> /* empty */
  194 534 for_expr -> non_empty_for_expr
  195 537 @38 -> /* empty */
  196 537 non_empty_for_expr -> non_empty_for_expr ',' @38 expr
  197 539 non_empty_for_expr -> expr
  198 542 @39 -> /* empty */
  199 542 expr_without_variable -> T_LIST '(' @39 assignment_list ')' '=' expr
  200 544 expr_without_variable -> variable '=' expr
  201 545 expr_without_variable -> variable '=' '&' variable
  202 546 @40 -> /* empty */
  203 546 expr_without_variable -> variable '=' '&' T_NEW class_name_reference @40 ctor_arguments
  204 547 @41 -> /* empty */
  205 547 expr_without_variable -> T_NEW class_name_reference @41 ctor_arguments
  206 548 expr_without_variable -> T_CLONE expr
  207 549 expr_without_variable -> variable T_PLUS_EQUAL expr
  208 550 expr_without_variable -> variable T_MINUS_EQUAL expr
  209 551 expr_without_variable -> variable T_MUL_EQUAL expr
  210 552 expr_without_variable -> variable T_DIV_EQUAL expr
  211 553 expr_without_variable -> variable T_CONCAT_EQUAL expr
  212 554 expr_without_variable -> variable T_MOD_EQUAL expr
  213 555 expr_without_variable -> variable T_AND_EQUAL expr
  214 556 expr_without_variable -> variable T_OR_EQUAL expr
  215 557 expr_without_variable -> variable T_XOR_EQUAL expr
  216 558 expr_without_variable -> variable T_SL_EQUAL expr
  217 559 expr_without_variable -> variable T_SR_EQUAL expr
  218 560 expr_without_variable -> rw_variable T_INC
  219 561 expr_without_variable -> T_INC rw_variable
  220 562 expr_without_variable -> rw_variable T_DEC
  221 563 expr_without_variable -> T_DEC rw_variable
  222 564 @42 -> /* empty */
  223 564 expr_without_variable -> expr T_BOOLEAN_OR @42 expr
  224 565 @43 -> /* empty */
  225 565 expr_without_variable -> expr T_BOOLEAN_AND @43 expr
  226 566 @44 -> /* empty */
  227 566 expr_without_variable -> expr T_LOGICAL_OR @44 expr
  228 567 @45 -> /* empty */
  229 567 expr_without_variable -> expr T_LOGICAL_AND @45 expr
  230 568 expr_without_variable -> expr T_LOGICAL_XOR expr
  231 569 expr_without_variable -> expr '|' expr
  232 570 expr_without_variable -> expr '&' expr
  233 571 expr_without_variable -> expr '^' expr
  234 572 expr_without_variable -> expr '.' expr
  235 573 expr_without_variable -> expr '+' expr
  236 574 expr_without_variable -> expr '-' expr
  237 575 expr_without_variable -> expr '*' expr
  238 576 expr_without_variable -> expr '/' expr
  239 577 expr_without_variable -> expr '%' expr
  240 578 expr_without_variable -> expr T_SL expr
  241 579 expr_without_variable -> expr T_SR expr
  242 580 expr_without_variable -> '+' expr
  243 581 expr_without_variable -> '-' expr
  244 582 expr_without_variable -> '!' expr
  245 583 expr_without_variable -> '~' expr
  246 584 expr_without_variable -> expr T_IS_IDENTICAL expr
  247 585 expr_without_variable -> expr T_IS_NOT_IDENTICAL expr
  248 586 expr_without_variable -> expr T_IS_EQUAL expr
  249 587 expr_without_variable -> expr T_IS_NOT_EQUAL expr
  250 588 expr_without_variable -> expr '<' expr
  251 589 expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr
  252 590 expr_without_variable -> expr '>' expr
  253 591 expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr
  254 592 expr_without_variable -> expr T_INSTANCEOF class_name_reference
  255 593 expr_without_variable -> '(' expr ')'
  256 594 @46 -> /* empty */
  257 594 @47 -> /* empty */
  258 594 expr_without_variable -> expr '?' @46 expr ':' @47 expr
  259 597 expr_without_variable -> internal_functions_in_yacc
  260 598 expr_without_variable -> T_INT_CAST expr
  261 599 expr_without_variable -> T_DOUBLE_CAST expr
  262 600 expr_without_variable -> T_STRING_CAST expr
  263 601 expr_without_variable -> T_ARRAY_CAST expr
  264 602 expr_without_variable -> T_OBJECT_CAST expr
  265 603 expr_without_variable -> T_BOOL_CAST expr
  266 604 expr_without_variable -> T_UNSET_CAST expr
  267 605 expr_without_variable -> T_EXIT exit_expr
  268 606 @48 -> /* empty */
  269 606 expr_without_variable -> '@' @48 expr
  270 607 expr_without_variable -> scalar
  271 608 expr_without_variable -> T_ARRAY '(' array_pair_list ')'
  272 609 expr_without_variable -> '`' encaps_list '`'
  273 610 expr_without_variable -> T_PRINT expr
  274 613 @49 -> /* empty */
  275 613 function_call -> T_STRING '(' @49 function_call_parameter_list ')'
  276 617 @50 -> /* empty */
  277 617 function_call -> fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @50 function_call_parameter_list ')'
  278 620 @51 -> /* empty */
  279 620 function_call -> fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @51 function_call_parameter_list ')'
  280 623 @52 -> /* empty */
  281 623 function_call -> variable_without_objects '(' @52 function_call_parameter_list ')'
  282 628 fully_qualified_class_name -> T_STRING
  283 632 class_name_reference -> T_STRING
  284 634 class_name_reference -> dynamic_class_name_reference
  285 638 @53 -> /* empty */
  286 638 @54 -> /* empty */
  287 638 dynamic_class_name_reference -> base_variable T_OBJECT_OPERATOR @53 object_property @54 dynamic_class_name_variable_properties
  288 642 dynamic_class_name_reference -> base_variable
  289 646 dynamic_class_name_variable_properties -> dynamic_class_name_variable_properties dynamic_class_name_variable_property
  290 648 dynamic_class_name_variable_properties -> /* empty */
  291 652 dynamic_class_name_variable_property -> T_OBJECT_OPERATOR object_property
  292 656 exit_expr -> /* empty */
  293 658 exit_expr -> '(' ')'
  294 659 exit_expr -> '(' expr ')'
  295 663 ctor_arguments -> /* empty */
  296 665 ctor_arguments -> '(' function_call_parameter_list ')'
  297 669 common_scalar -> T_LNUMBER
  298 671 common_scalar -> T_DNUMBER
  299 672 common_scalar -> T_CONSTANT_ENCAPSED_STRING
  300 673 common_scalar -> T_LINE
  301 674 common_scalar -> T_FILE
  302 675 common_scalar -> T_CLASS_C
  303 676 common_scalar -> T_METHOD_C
  304 677 common_scalar -> T_FUNC_C
  305 681 static_scalar -> common_scalar
  306 683 static_scalar -> T_STRING
  307 684 static_scalar -> '+' static_scalar
  308 685 static_scalar -> '-' static_scalar
  309 686 static_scalar -> T_ARRAY '(' static_array_pair_list ')'
  310 687 static_scalar -> static_class_constant
  311 690 static_class_constant -> T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING
  312 694 scalar -> T_STRING
  313 696 scalar -> T_STRING_VARNAME
  314 697 scalar -> class_constant
  315 698 scalar -> common_scalar
  316 699 scalar -> '\"' encaps_list '\"'
  317 700 scalar -> '\'' encaps_list '\''
  318 701 scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC
  319 705 static_array_pair_list -> /* empty */
  320 707 static_array_pair_list -> non_empty_static_array_pair_list possible_comma
  321 710 possible_comma -> /* empty */
  322 712 possible_comma -> ','
  323 715 non_empty_static_array_pair_list -> non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar
  324 717 non_empty_static_array_pair_list -> non_empty_static_array_pair_list ',' static_scalar
  325 718 non_empty_static_array_pair_list -> static_scalar T_DOUBLE_ARROW static_scalar
  326 719 non_empty_static_array_pair_list -> static_scalar
  327 722 expr -> r_variable
  328 724 expr -> expr_without_variable
  329 728 r_variable -> variable
  330 733 @55 -> /* empty */
  331 733 w_variable -> variable @55
  332 738 @56 -> /* empty */
  333 738 rw_variable -> variable @56
  334 743 @57 -> /* empty */
  335 743 @58 -> /* empty */
  336 743 variable -> base_variable_with_function_calls T_OBJECT_OPERATOR @57 object_property @58 method_or_not variable_properties
  337 747 variable -> base_variable_with_function_calls
  338 750 variable_properties -> variable_properties variable_property
  339 752 variable_properties -> /* empty */
  340 756 @59 -> /* empty */
  341 756 variable_property -> T_OBJECT_OPERATOR object_property @59 method_or_not
  342 760 @60 -> /* empty */
  343 760 method_or_not -> '(' @60 function_call_parameter_list ')'
  344 765 method_or_not -> /* empty */
  345 768 variable_without_objects -> reference_variable
  346 770 variable_without_objects -> simple_indirect_reference reference_variable
  347 773 static_member -> fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
  348 778 base_variable_with_function_calls -> base_variable
  349 780 base_variable_with_function_calls -> function_call
  350 784 base_variable -> reference_variable
  351 786 base_variable -> simple_indirect_reference reference_variable
  352 787 base_variable -> static_member
  353 790 reference_variable -> reference_variable '[' dim_offset ']'
  354 792 reference_variable -> reference_variable '{' expr '}'
  355 793 reference_variable -> compound_variable
  356 797 compound_variable -> T_VARIABLE
  357 799 compound_variable -> '$' '{' expr '}'
  358 802 dim_offset -> /* empty */
  359 804 dim_offset -> expr
  360 808 object_property -> object_dim_list
  361 810 @61 -> /* empty */
  362 810 object_property -> variable_without_objects @61
  363 813 object_dim_list -> object_dim_list '[' dim_offset ']'
  364 815 object_dim_list -> object_dim_list '{' expr '}'
  365 816 object_dim_list -> variable_name
  366 819 variable_name -> T_STRING
  367 821 variable_name -> '{' expr '}'
  368 824 simple_indirect_reference -> '$'
  369 826 simple_indirect_reference -> simple_indirect_reference '$'
  370 829 assignment_list -> assignment_list ',' assignment_list_element
  371 831 assignment_list -> assignment_list_element
  372 835 assignment_list_element -> variable
  373 837 @62 -> /* empty */
  374 837 assignment_list_element -> T_LIST '(' @62 assignment_list ')'
  375 838 assignment_list_element -> /* empty */
  376 842 array_pair_list -> /* empty */
  377 844 array_pair_list -> non_empty_array_pair_list possible_comma
  378 847 non_empty_array_pair_list -> non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr
  379 849 non_empty_array_pair_list -> non_empty_array_pair_list ',' expr
  380 850 non_empty_array_pair_list -> expr T_DOUBLE_ARROW expr
  381 851 non_empty_array_pair_list -> expr
  382 852 non_empty_array_pair_list -> non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_variable
  383 853 non_empty_array_pair_list -> non_empty_array_pair_list ',' '&' w_variable
  384 854 non_empty_array_pair_list -> expr T_DOUBLE_ARROW '&' w_variable
  385 855 non_empty_array_pair_list -> '&' w_variable
  386 858 encaps_list -> encaps_list encaps_var
  387 860 encaps_list -> encaps_list T_STRING
  388 861 encaps_list -> encaps_list T_NUM_STRING
  389 862 encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE
  390 863 encaps_list -> encaps_list T_CHARACTER
  391 864 encaps_list -> encaps_list T_BAD_CHARACTER
  392 865 encaps_list -> encaps_list '['
  393 866 encaps_list -> encaps_list ']'
  394 867 encaps_list -> encaps_list '{'
  395 868 encaps_list -> encaps_list '}'
  396 869 encaps_list -> encaps_list T_OBJECT_OPERATOR
  397 870 encaps_list -> /* empty */
  398 876 encaps_var -> T_VARIABLE
  399 878 @63 -> /* empty */
  400 878 encaps_var -> T_VARIABLE '[' @63 encaps_var_offset ']'
  401 879 encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING
  402 880 encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}'
  403 881 encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}'
  404 882 encaps_var -> T_CURLY_OPEN variable '}'
  405 886 encaps_var_offset -> T_STRING
  406 888 encaps_var_offset -> T_NUM_STRING
  407 889 encaps_var_offset -> T_VARIABLE
  408 893 internal_functions_in_yacc -> T_ISSET '(' isset_variables ')'
  409 895 internal_functions_in_yacc -> T_EMPTY '(' variable ')'
  410 896 internal_functions_in_yacc -> T_INCLUDE expr
  411 897 internal_functions_in_yacc -> T_INCLUDE_ONCE expr
  412 898 internal_functions_in_yacc -> T_EVAL '(' expr ')'
  413 899 internal_functions_in_yacc -> T_REQUIRE expr
  414 900 internal_functions_in_yacc -> T_REQUIRE_ONCE expr
  415 903 isset_variables -> variable
  416 905 @64 -> /* empty */
  417 905 isset_variables -> isset_variables ',' @64 variable
  418 908 class_constant -> fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING


Terminals, with rules where they appear

$ (-1)
'!' (33) 244
'\"' (34) 316
'$' (36) 157 158 357 368 369
'%' (37) 239
'&' (38) 79 102 137 138 141 142 150 153 201 203 232 382 383 384 385
'\'' (39) 317
'(' (40) 18 21 24 27 31 33 47 50 53 55 62 70 75 82 126 129 170 199
    255 271 275 277 279 281 293 294 296 309 343 374 408 409 412
')' (41) 18 21 24 27 31 33 47 50 53 55 62 70 75 82 126 129 170 199
    255 271 275 277 279 281 293 294 296 309 343 374 408 409 412
'*' (42) 237
'+' (43) 235 242 307
',' (44) 72 98 110 140 141 142 143 151 152 153 154 159 160 185 186
    189 191 196 322 323 324 370 378 379 382 383 417
'-' (45) 236 243 308
'.' (46) 234
'/' (47) 238
':' (58) 21 104 106 108 113 114 120 123 129 133 258
';' (59) 21 27 31 34 35 36 37 38 39 40 41 42 43 45 46 47 56 63 104
    106 108 112 113 114 121 123 166 167 171
'<' (60) 250
'=' (61) 109 110 138 139 142 143 160 162 186 188 189 190 199 200 201
    203
'>' (62) 252
'?' (63) 258
'@' (64) 269
'[' (91) 353 363 392 400 403
']' (93) 353 363 393 400 403
'^' (94) 233
'`' (96) 272
'{' (123) 15 62 70 82 84 86 111 112 158 172 354 357 364 367 394
'|' (124) 231
'}' (125) 15 62 70 82 84 86 111 112 158 172 354 357 364 367 395 402
    403 404
'~' (126) 245
error (256)
T_INCLUDE (257) 410
T_INCLUDE_ONCE (258) 411
T_EVAL (259) 412
T_REQUIRE (260) 413
T_REQUIRE_ONCE (261) 414
T_LOGICAL_OR (262) 227
T_LOGICAL_XOR (263) 230
T_LOGICAL_AND (264) 229
T_PRINT (265) 273
T_PLUS_EQUAL (266) 207
T_MINUS_EQUAL (267) 208
T_MUL_EQUAL (268) 209
T_DIV_EQUAL (269) 210
T_CONCAT_EQUAL (270) 211
T_MOD_EQUAL (271) 212
T_AND_EQUAL (272) 213
T_OR_EQUAL (273) 214
T_XOR_EQUAL (274) 215
T_SL_EQUAL (275) 216
T_SR_EQUAL (276) 217
T_BOOLEAN_OR (277) 223
T_BOOLEAN_AND (278) 225
T_IS_EQUAL (279) 248
T_IS_NOT_EQUAL (280) 249
T_IS_IDENTICAL (281) 246
T_IS_NOT_IDENTICAL (282) 247
T_IS_SMALLER_OR_EQUAL (283) 251
T_IS_GREATER_OR_EQUAL (284) 253
T_SL (285) 240
T_SR (286) 241
T_INSTANCEOF (287) 254
T_INC (288) 218 219
T_DEC (289) 220 221
T_INT_CAST (290) 260
T_DOUBLE_CAST (291) 261
T_STRING_CAST (292) 262
T_ARRAY_CAST (293) 263
T_OBJECT_CAST (294) 264
T_BOOL_CAST (295) 265
T_UNSET_CAST (296) 266
T_NEW (297) 203 205
T_CLONE (298) 206
T_EXIT (299) 267
T_IF (300) 18 21
T_ELSEIF (301) 126 129
T_ELSE (302) 131 133
T_ENDIF (303) 21
T_LNUMBER (304) 297
T_DNUMBER (305) 298
T_STRING (306) 82 84 86 109 110 145 170 189 190 275 277 282 283 306
    311 312 366 387 401 405 418
T_STRING_VARNAME (307) 313 403
T_VARIABLE (308) 62 70 136 137 138 139 140 141 142 143 156 159 160
    161 162 185 186 187 188 356 398 400 401 407
T_NUM_STRING (309) 388 406
T_INLINE_HTML (310) 44
T_CHARACTER (311) 390
T_BAD_CHARACTER (312) 391
T_ENCAPSED_AND_WHITESPACE (313) 389
T_CONSTANT_ENCAPSED_STRING (314) 74 75 299
T_ECHO (315) 43
T_DO (316) 27
T_WHILE (317) 24 27
T_ENDWHILE (318) 123
T_FOR (319) 31
T_ENDFOR (320) 104
T_FOREACH (321) 50 53
T_ENDFOREACH (322) 106
T_DECLARE (323) 55
T_ENDDECLARE (324) 108
T_AS (325) 50 53
T_SWITCH (326) 33
T_ENDSWITCH (327) 113 114
T_CASE (328) 117
T_DEFAULT (329) 119
T_BREAK (330) 34 35
T_CONTINUE (331) 36 37
T_FUNCTION (332) 82 170
T_CONST (333) 190
T_RETURN (334) 38 39 40
T_TRY (335) 62
T_CATCH (336) 62 70
T_THROW (337) 63
T_USE (338) 46
T_GLOBAL (339) 41
T_STATIC (340) 42 182
T_ABSTRACT (341) 88 183
T_FINAL (342) 89 184
T_PRIVATE (343) 181
T_PROTECTED (344) 180
T_PUBLIC (345) 179
T_VAR (346) 174
T_UNSET (347) 47
T_ISSET (348) 408
T_EMPTY (349) 409
T_CLASS (350) 87 88 89
T_INTERFACE (351) 92
T_EXTENDS (352) 91 94
T_IMPLEMENTS (353) 96
T_OBJECT_OPERATOR (354) 287 291 336 341 396 401
T_DOUBLE_ARROW (355) 100 323 325 378 380 382 384
T_LIST (356) 199 374
T_ARRAY (357) 271 309
T_CLASS_C (358) 302
T_METHOD_C (359) 303
T_FUNC_C (360) 304
T_LINE (361) 300
T_FILE (362) 301
T_COMMENT (363)
T_DOC_COMMENT (364)
T_OPEN_TAG (365)
T_OPEN_TAG_WITH_ECHO (366)
T_CLOSE_TAG (367)
T_WHITESPACE (368)
T_START_HEREDOC (369) 318
T_END_HEREDOC (370) 318
T_DOLLAR_OPEN_CURLY_BRACES (371) 402 403
T_CURLY_OPEN (372) 404
T_PAAMAYIM_NEKUDOTAYIM (373) 277 279 311 347 418


Nonterminals, with rules where they appear

start (149)
    on left: 1
top_statement_list (150)
    on left: 3 4, on right: 1 3
@1 (151)
    on left: 2, on right: 3
top_statement (152)
    on left: 5 6 7, on right: 3
inner_statement_list (153)
    on left: 9 10, on right: 9 15 21 62 70 82 104 106 108 117 119 123
    129 133 172
@2 (154)
    on left: 8, on right: 9
inner_statement (155)
    on left: 11 12 13, on right: 9
statement (156)
    on left: 14, on right: 5 11 18 27 103 105 107 122 126 131
unticked_statement (157)
    on left: 15 18 21 24 27 31 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 50 53 55 56 62 63, on right: 14
@3 (158)
    on left: 16, on right: 18
@4 (159)
    on left: 17, on right: 18
@5 (160)
    on left: 19, on right: 21
@6 (161)
    on left: 20, on right: 21
@7 (162)
    on left: 22, on right: 24
@8 (163)
    on left: 23, on right: 24
@9 (164)
    on left: 25, on right: 27
@10 (165)
    on left: 26, on right: 27
@11 (166)
    on left: 28, on right: 31
@12 (167)
    on left: 29, on right: 31
@13 (168)
    on left: 30, on right: 31
@14 (169)
    on left: 32, on right: 33
@15 (170)
    on left: 48, on right: 50
@16 (171)
    on left: 49, on right: 50
@17 (172)
    on left: 51, on right: 53
@18 (173)
    on left: 52, on right: 53
@19 (174)
    on left: 54, on right: 55
@20 (175)
    on left: 57, on right: 62
@21 (176)
    on left: 58, on right: 62
@22 (177)
    on left: 59, on right: 62
@23 (178)
    on left: 60, on right: 62
@24 (179)
    on left: 61, on right: 62
additional_catches (180)
    on left: 64 65, on right: 62
non_empty_additional_catches (181)
    on left: 66 67, on right: 64 67
additional_catch (182)
    on left: 70, on right: 66 67
@25 (183)
    on left: 68, on right: 70
@26 (184)
    on left: 69, on right: 70
unset_variables (185)
    on left: 71 72, on right: 47 72
unset_variable (186)
    on left: 73, on right: 71 72
use_filename (187)
    on left: 74 75, on right: 46
function_declaration_statement (188)
    on left: 76, on right: 6 12
class_declaration_statement (189)
    on left: 77, on right: 7 13
is_reference (190)
    on left: 78 79, on right: 82 170
unticked_function_declaration_statement (191)
    on left: 82, on right: 76
@27 (192)
    on left: 80, on right: 82
@28 (193)
    on left: 81, on right: 82
unticked_class_declaration_statement (194)
    on left: 84 86, on right: 77
@29 (195)
    on left: 83, on right: 84
@30 (196)
    on left: 85, on right: 86
class_entry_type (197)
    on left: 87 88 89, on right: 84
extends_from (198)
    on left: 90 91, on right: 84
interface_entry (199)
    on left: 92, on right: 86
interface_extends_list (200)
    on left: 93 94, on right: 86
implements_list (201)
    on left: 95 96, on right: 84
interface_list (202)
    on left: 97 98, on right: 94 96 98
foreach_optional_arg (203)
    on left: 99 100, on right: 50 53
foreach_variable (204)
    on left: 101 102, on right: 50 100
for_statement (205)
    on left: 103 104, on right: 31
foreach_statement (206)
    on left: 105 106, on right: 50 53
declare_statement (207)
    on left: 107 108, on right: 55
declare_list (208)
    on left: 109 110, on right: 55 110
switch_case_list (209)
    on left: 111 112 113 114, on right: 33
case_list (210)
    on left: 115 117 119, on right: 111 112 113 114 117 119
@31 (211)
    on left: 116, on right: 117
@32 (212)
    on left: 118, on right: 119
case_separator (213)
    on left: 120 121, on right: 117 119
while_statement (214)
    on left: 122 123, on right: 24
elseif_list (215)
    on left: 124 126, on right: 18 126
@33 (216)
    on left: 125, on right: 126
new_elseif_list (217)
    on left: 127 129, on right: 21 129
@34 (218)
    on left: 128, on right: 129
else_single (219)
    on left: 130 131, on right: 18
new_else_single (220)
    on left: 132 133, on right: 21
parameter_list (221)
    on left: 134 135, on right: 82 170
non_empty_parameter_list (222)
    on left: 136 137 138 139 140 141 142 143, on right: 134 140 141
    142 143
optional_class_type (223)
    on left: 144 145, on right: 136 137 138 139 140 141 142 143
function_call_parameter_list (224)
    on left: 146 147, on right: 275 277 279 281 296 343
non_empty_function_call_parameter_list (225)
    on left: 148 149 150 151 152 153, on right: 146 151 152 153
global_var_list (226)
    on left: 154 155, on right: 41 154
global_var (227)
    on left: 156 157 158, on right: 154 155
static_var_list (228)
    on left: 159 160 161 162, on right: 42 159 160
class_statement_list (229)
    on left: 163 164, on right: 84 86 163
class_statement (230)
    on left: 166 167 170, on right: 163
@35 (231)
    on left: 165, on right: 166
@36 (232)
    on left: 168, on right: 170
@37 (233)
    on left: 169, on right: 170
method_body (234)
    on left: 171 172, on right: 170
variable_modifiers (235)
    on left: 173 174, on right: 166
method_modifiers (236)
    on left: 175 176, on right: 170
non_empty_member_modifiers (237)
    on left: 177 178, on right: 173 176 178
member_modifier (238)
    on left: 179 180 181 182 183 184, on right: 177 178
class_variable_declaration (239)
    on left: 185 186 187 188, on right: 166 185 186
class_constant_declaration (240)
    on left: 189 190, on right: 167 189
echo_expr_list (241)
    on left: 191 192, on right: 43 191
for_expr (242)
    on left: 193 194, on right: 31
non_empty_for_expr (243)
    on left: 196 197, on right: 194 196
@38 (244)
    on left: 195, on right: 196
expr_without_variable (245)
    on left: 199 200 201 203 205 206 207 208 209 210 211 212 213 214
    215 216 217 218 219 220 221 223 225 227 229 230 231 232 233 234
    235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250
    251 252 253 254 255 258 259 260 261 262 263 264 265 266 267 269
    270 271 272 273, on right: 39 53 148 151 328
@39 (246)
    on left: 198, on right: 199
@40 (247)
    on left: 202, on right: 203
@41 (248)
    on left: 204, on right: 205
@42 (249)
    on left: 222, on right: 223
@43 (250)
    on left: 224, on right: 225
@44 (251)
    on left: 226, on right: 227
@45 (252)
    on left: 228, on right: 229
@46 (253)
    on left: 256, on right: 258
@47 (254)
    on left: 257, on right: 258
@48 (255)
    on left: 268, on right: 269
function_call (256)
    on left: 275 277 279 281, on right: 349
@49 (257)
    on left: 274, on right: 275
@50 (258)
    on left: 276, on right: 277
@51 (259)
    on left: 278, on right: 279
@52 (260)
    on left: 280, on right: 281
fully_qualified_class_name (261)
    on left: 282, on right: 62 70 91 97 98 277 279 347 418
class_name_reference (262)
    on left: 283 284, on right: 203 205 254
dynamic_class_name_reference (263)
    on left: 287 288, on right: 284
@53 (264)
    on left: 285, on right: 287
@54 (265)
    on left: 286, on right: 287
dynamic_class_name_variable_properties (266)
    on left: 289 290, on right: 287 289
dynamic_class_name_variable_property (267)
    on left: 291, on right: 289
exit_expr (268)
    on left: 292 293 294, on right: 267
ctor_arguments (269)
    on left: 295 296, on right: 203 205
common_scalar (270)
    on left: 297 298 299 300 301 302 303 304, on right: 305 315
static_scalar (271)
    on left: 305 306 307 308 309 310, on right: 109 110 138 139 142
    143 160 162 186 188 189 190 307 308 323 324 325 326
static_class_constant (272)
    on left: 311, on right: 310
scalar (273)
    on left: 312 313 314 315 316 317 318, on right: 270
static_array_pair_list (274)
    on left: 319 320, on right: 309
possible_comma (275)
    on left: 321 322, on right: 320 377
non_empty_static_array_pair_list (276)
    on left: 323 324 325 326, on right: 320 323 324
expr (277)
    on left: 327 328, on right: 18 21 24 27 33 35 37 45 63 117 126
    129 158 191 192 196 197 199 200 206 207 208 209 210 211 212 213
    214 215 216 217 223 225 227 229 230 231 232 233 234 235 236 237
    238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253
    254 255 258 260 261 262 263 264 265 266 269 273 294 354 357 359
    364 367 378 379 380 381 382 384 402 403 410 411 412 413 414
r_variable (278)
    on left: 329, on right: 157 327
w_variable (279)
    on left: 331, on right: 53 101 102 150 153 382 383 384 385
@55 (280)
    on left: 330, on right: 331
rw_variable (281)
    on left: 333, on right: 218 219 220 221
@56 (282)
    on left: 332, on right: 333
variable (283)
    on left: 336 337, on right: 40 50 73 149 152 200 201 203 207 208
    209 210 211 212 213 214 215 216 217 329 331 333 372 404 409 415
    417
@57 (284)
    on left: 334, on right: 336
@58 (285)
    on left: 335, on right: 336
variable_properties (286)
    on left: 338 339, on right: 336 338
variable_property (287)
    on left: 341, on right: 338
@59 (288)
    on left: 340, on right: 341
method_or_not (289)
    on left: 343 344, on right: 336 341
@60 (290)
    on left: 342, on right: 343
variable_without_objects (291)
    on left: 345 346, on right: 279 281 347 362
static_member (292)
    on left: 347, on right: 352
base_variable_with_function_calls (293)
    on left: 348 349, on right: 336 337
base_variable (294)
    on left: 350 351 352, on right: 287 288 348
reference_variable (295)
    on left: 353 354 355, on right: 345 346 350 351 353 354
compound_variable (296)
    on left: 356 357, on right: 355
dim_offset (297)
    on left: 358 359, on right: 353 363
object_property (298)
    on left: 360 362, on right: 287 291 336 341
@61 (299)
    on left: 361, on right: 362
object_dim_list (300)
    on left: 363 364 365, on right: 360 363 364
variable_name (301)
    on left: 366 367, on right: 365
simple_indirect_reference (302)
    on left: 368 369, on right: 346 351 369
assignment_list (303)
    on left: 370 371, on right: 199 370 374
assignment_list_element (304)
    on left: 372 374 375, on right: 370 371
@62 (305)
    on left: 373, on right: 374
array_pair_list (306)
    on left: 376 377, on right: 271
non_empty_array_pair_list (307)
    on left: 378 379 380 381 382 383 384 385, on right: 377 378 379
    382 383
encaps_list (308)
    on left: 386 387 388 389 390 391 392 393 394 395 396 397,
    on right: 272 316 317 318 386 387 388 389 390 391 392 393 394 395
    396
encaps_var (309)
    on left: 398 400 401 402 403 404, on right: 386
@63 (310)
    on left: 399, on right: 400
encaps_var_offset (311)
    on left: 405 406 407, on right: 400
internal_functions_in_yacc (312)
    on left: 408 409 410 411 412 413 414, on right: 259
isset_variables (313)
    on left: 415 417, on right: 408 417
@64 (314)
    on left: 416, on right: 417
class_constant (315)
    on left: 418, on right: 314


state 0

    $default	reduce using rule 4 (top_statement_list)

    start	go to state 774
    top_statement_list	go to state 1



state 1

    start  ->  top_statement_list .   (rule 1)
    top_statement_list  ->  top_statement_list . @1 top_statement   (rule 3)

    $   	reduce using rule 1 (start)
    $default	reduce using rule 2 (@1)
    @1  	go to state 2



state 2

    top_statement_list  ->  top_statement_list @1 . top_statement   (rule 3)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_FUNCTION	shift, and go to state 43
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_ABSTRACT	shift, and go to state 50
    T_FINAL	shift, and go to state 51
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_CLASS	shift, and go to state 55
    T_INTERFACE	shift, and go to state 56
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    top_statement	go to state 72
    statement	go to state 73
    unticked_statement	go to state 74
    function_declaration_statement	go to state 75
    class_declaration_statement	go to state 76
    unticked_function_declaration_statement	go to state 77
    unticked_class_declaration_statement	go to state 78
    class_entry_type	go to state 79
    interface_entry	go to state 80
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 3

    internal_functions_in_yacc  ->  T_INCLUDE . expr   (rule 410)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 99
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 4

    internal_functions_in_yacc  ->  T_INCLUDE_ONCE . expr   (rule 411)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 100
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 5

    internal_functions_in_yacc  ->  T_EVAL . '(' expr ')'   (rule 412)

    '(' 	shift, and go to state 101



state 6

    internal_functions_in_yacc  ->  T_REQUIRE . expr   (rule 413)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 102
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 7

    internal_functions_in_yacc  ->  T_REQUIRE_ONCE . expr   (rule 414)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 103
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 8

    expr_without_variable  ->  T_PRINT . expr   (rule 273)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 104
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 9

    expr_without_variable  ->  '+' . expr   (rule 242)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 105
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 10

    expr_without_variable  ->  '-' . expr   (rule 243)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 106
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 11

    expr_without_variable  ->  '!' . expr   (rule 244)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 107
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 12

    expr_without_variable  ->  '~' . expr   (rule 245)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 108
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 13

    expr_without_variable  ->  T_INC . rw_variable   (rule 219)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    rw_variable	go to state 111
    variable	go to state 112
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 14

    expr_without_variable  ->  T_DEC . rw_variable   (rule 221)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    rw_variable	go to state 113
    variable	go to state 112
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 15

    expr_without_variable  ->  T_INT_CAST . expr   (rule 260)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 114
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 16

    expr_without_variable  ->  T_DOUBLE_CAST . expr   (rule 261)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 115
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 17

    expr_without_variable  ->  T_STRING_CAST . expr   (rule 262)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 116
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 18

    expr_without_variable  ->  T_ARRAY_CAST . expr   (rule 263)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 117
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 19

    expr_without_variable  ->  T_OBJECT_CAST . expr   (rule 264)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 118
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 20

    expr_without_variable  ->  T_BOOL_CAST . expr   (rule 265)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 119
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 21

    expr_without_variable  ->  T_UNSET_CAST . expr   (rule 266)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 120
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 22

    expr_without_variable  ->  '@' . @48 expr   (rule 269)

    $default	reduce using rule 268 (@48)

    @48 	go to state 121



state 23

    expr_without_variable  ->  T_NEW . class_name_reference @41 ctor_arguments   (rule 205)

    T_STRING	shift, and go to state 122
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    fully_qualified_class_name	go to state 123
    class_name_reference	go to state 124
    dynamic_class_name_reference	go to state 125
    static_member	go to state 91
    base_variable	go to state 126
    reference_variable	go to state 127
    compound_variable	go to state 95
    simple_indirect_reference	go to state 128



state 24

    expr_without_variable  ->  T_CLONE . expr   (rule 206)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 129
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 25

    expr_without_variable  ->  T_EXIT . exit_expr   (rule 267)

    '(' 	shift, and go to state 130

    $default	reduce using rule 292 (exit_expr)

    exit_expr	go to state 131



state 26

    unticked_statement  ->  T_IF . '(' expr ')' @3 statement @4 elseif_list else_single   (rule 18)
    unticked_statement  ->  T_IF . '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 21)

    '(' 	shift, and go to state 132



state 27

    common_scalar  ->  T_LNUMBER .   (rule 297)

    $default	reduce using rule 297 (common_scalar)



state 28

    common_scalar  ->  T_DNUMBER .   (rule 298)

    $default	reduce using rule 298 (common_scalar)



state 29

    function_call  ->  T_STRING . '(' @49 function_call_parameter_list ')'   (rule 275)
    fully_qualified_class_name  ->  T_STRING .   (rule 282)
    scalar  ->  T_STRING .   (rule 312)

    '(' 	shift, and go to state 133

    T_PAAMAYIM_NEKUDOTAYIM	reduce using rule 282 (fully_qualified_class_name)
    $default	reduce using rule 312 (scalar)


state 30

    scalar  ->  T_STRING_VARNAME .   (rule 313)

    $default	reduce using rule 313 (scalar)



state 31

    compound_variable  ->  T_VARIABLE .   (rule 356)

    $default	reduce using rule 356 (compound_variable)



state 32

    unticked_statement  ->  T_INLINE_HTML .   (rule 44)

    $default	reduce using rule 44 (unticked_statement)



state 33

    common_scalar  ->  T_CONSTANT_ENCAPSED_STRING .   (rule 299)

    $default	reduce using rule 299 (common_scalar)



state 34

    unticked_statement  ->  T_ECHO . echo_expr_list ';'   (rule 43)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    echo_expr_list	go to state 134
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 135
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 35

    unticked_statement  ->  T_DO . @9 statement T_WHILE '(' @10 expr ')' ';'   (rule 27)

    $default	reduce using rule 25 (@9)

    @9  	go to state 136



state 36

    unticked_statement  ->  T_WHILE . '(' @7 expr ')' @8 while_statement   (rule 24)

    '(' 	shift, and go to state 137



state 37

    unticked_statement  ->  T_FOR . '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 31)

    '(' 	shift, and go to state 138



state 38

    unticked_statement  ->  T_FOREACH . '(' variable T_AS @15 foreach_variable foreach_optional_arg ')' @16 foreach_statement   (rule 50)
    unticked_statement  ->  T_FOREACH . '(' expr_without_variable T_AS @17 w_variable foreach_optional_arg ')' @18 foreach_statement   (rule 53)

    '(' 	shift, and go to state 139



state 39

    unticked_statement  ->  T_DECLARE . @19 '(' declare_list ')' declare_statement   (rule 55)

    $default	reduce using rule 54 (@19)

    @19 	go to state 140



state 40

    unticked_statement  ->  T_SWITCH . '(' expr ')' @14 switch_case_list   (rule 33)

    '(' 	shift, and go to state 141



state 41

    unticked_statement  ->  T_BREAK . ';'   (rule 34)
    unticked_statement  ->  T_BREAK . expr ';'   (rule 35)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 142
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 143
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 42

    unticked_statement  ->  T_CONTINUE . ';'   (rule 36)
    unticked_statement  ->  T_CONTINUE . expr ';'   (rule 37)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 144
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 145
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 43

    unticked_function_declaration_statement  ->  T_FUNCTION . @27 is_reference T_STRING @28 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 82)

    $default	reduce using rule 80 (@27)

    @27 	go to state 146



state 44

    unticked_statement  ->  T_RETURN . ';'   (rule 38)
    unticked_statement  ->  T_RETURN . expr_without_variable ';'   (rule 39)
    unticked_statement  ->  T_RETURN . variable ';'   (rule 40)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 147
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 148
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 149
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 150
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 45

    unticked_statement  ->  T_TRY . @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    $default	reduce using rule 57 (@20)

    @20 	go to state 151



state 46

    unticked_statement  ->  T_THROW . expr ';'   (rule 63)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 152
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 47

    unticked_statement  ->  T_USE . use_filename ';'   (rule 46)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 153
    '(' 	shift, and go to state 154

    use_filename	go to state 155



state 48

    unticked_statement  ->  T_GLOBAL . global_var_list ';'   (rule 41)

    T_VARIABLE	shift, and go to state 156
    '$' 	shift, and go to state 157

    global_var_list	go to state 158
    global_var	go to state 159



state 49

    unticked_statement  ->  T_STATIC . static_var_list ';'   (rule 42)

    T_VARIABLE	shift, and go to state 160

    static_var_list	go to state 161



state 50

    class_entry_type  ->  T_ABSTRACT . T_CLASS   (rule 88)

    T_CLASS	shift, and go to state 162



state 51

    class_entry_type  ->  T_FINAL . T_CLASS   (rule 89)

    T_CLASS	shift, and go to state 163



state 52

    unticked_statement  ->  T_UNSET . '(' unset_variables ')' ';'   (rule 47)

    '(' 	shift, and go to state 164



state 53

    internal_functions_in_yacc  ->  T_ISSET . '(' isset_variables ')'   (rule 408)

    '(' 	shift, and go to state 165



state 54

    internal_functions_in_yacc  ->  T_EMPTY . '(' variable ')'   (rule 409)

    '(' 	shift, and go to state 166



state 55

    class_entry_type  ->  T_CLASS .   (rule 87)

    $default	reduce using rule 87 (class_entry_type)



state 56

    interface_entry  ->  T_INTERFACE .   (rule 92)

    $default	reduce using rule 92 (interface_entry)



state 57

    expr_without_variable  ->  T_LIST . '(' @39 assignment_list ')' '=' expr   (rule 199)

    '(' 	shift, and go to state 167



state 58

    expr_without_variable  ->  T_ARRAY . '(' array_pair_list ')'   (rule 271)

    '(' 	shift, and go to state 168



state 59

    common_scalar  ->  T_CLASS_C .   (rule 302)

    $default	reduce using rule 302 (common_scalar)



state 60

    common_scalar  ->  T_METHOD_C .   (rule 303)

    $default	reduce using rule 303 (common_scalar)



state 61

    common_scalar  ->  T_FUNC_C .   (rule 304)

    $default	reduce using rule 304 (common_scalar)



state 62

    common_scalar  ->  T_LINE .   (rule 300)

    $default	reduce using rule 300 (common_scalar)



state 63

    common_scalar  ->  T_FILE .   (rule 301)

    $default	reduce using rule 301 (common_scalar)



state 64

    scalar  ->  T_START_HEREDOC . encaps_list T_END_HEREDOC   (rule 318)

    $default	reduce using rule 397 (encaps_list)

    encaps_list	go to state 169



state 65

    unticked_statement  ->  '{' . inner_statement_list '}'   (rule 15)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 170



state 66

    expr_without_variable  ->  '(' . expr ')'   (rule 255)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 171
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 67

    unticked_statement  ->  ';' .   (rule 56)

    $default	reduce using rule 56 (unticked_statement)



state 68

    compound_variable  ->  '$' . '{' expr '}'   (rule 357)
    simple_indirect_reference  ->  '$' .   (rule 368)

    '{' 	shift, and go to state 172

    $default	reduce using rule 368 (simple_indirect_reference)



state 69

    expr_without_variable  ->  '`' . encaps_list '`'   (rule 272)

    $default	reduce using rule 397 (encaps_list)

    encaps_list	go to state 173



state 70

    scalar  ->  '\"' . encaps_list '\"'   (rule 316)

    $default	reduce using rule 397 (encaps_list)

    encaps_list	go to state 174



state 71

    scalar  ->  '\'' . encaps_list '\''   (rule 317)

    $default	reduce using rule 397 (encaps_list)

    encaps_list	go to state 175



state 72

    top_statement_list  ->  top_statement_list @1 top_statement .   (rule 3)

    $default	reduce using rule 3 (top_statement_list)



state 73

    top_statement  ->  statement .   (rule 5)

    $default	reduce using rule 5 (top_statement)



state 74

    statement  ->  unticked_statement .   (rule 14)

    $default	reduce using rule 14 (statement)



state 75

    top_statement  ->  function_declaration_statement .   (rule 6)

    $default	reduce using rule 6 (top_statement)



state 76

    top_statement  ->  class_declaration_statement .   (rule 7)

    $default	reduce using rule 7 (top_statement)



state 77

    function_declaration_statement  ->  unticked_function_declaration_statement .   (rule 76)

    $default	reduce using rule 76 (function_declaration_statement)



state 78

    class_declaration_statement  ->  unticked_class_declaration_statement .   (rule 77)

    $default	reduce using rule 77 (class_declaration_statement)



state 79

    unticked_class_declaration_statement  ->  class_entry_type . T_STRING extends_from @29 implements_list '{' class_statement_list '}'   (rule 84)

    T_STRING	shift, and go to state 176



state 80

    unticked_class_declaration_statement  ->  interface_entry . T_STRING @30 interface_extends_list '{' class_statement_list '}'   (rule 86)

    T_STRING	shift, and go to state 177



state 81

    expr  ->  expr_without_variable .   (rule 328)

    $default	reduce using rule 328 (expr)



state 82

    base_variable_with_function_calls  ->  function_call .   (rule 349)

    $default	reduce using rule 349 (base_variable_with_function_calls)



state 83

    function_call  ->  fully_qualified_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @50 function_call_parameter_list ')'   (rule 277)
    function_call  ->  fully_qualified_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @51 function_call_parameter_list ')'   (rule 279)
    static_member  ->  fully_qualified_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects   (rule 347)
    class_constant  ->  fully_qualified_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING   (rule 418)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 178



state 84

    scalar  ->  common_scalar .   (rule 315)

    $default	reduce using rule 315 (scalar)



state 85

    expr_without_variable  ->  scalar .   (rule 270)

    $default	reduce using rule 270 (expr_without_variable)



state 86

    unticked_statement  ->  expr . ';'   (rule 45)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ';' 	shift, and go to state 205



state 87

    expr  ->  r_variable .   (rule 327)

    $default	reduce using rule 327 (expr)



state 88

    expr_without_variable  ->  rw_variable . T_INC   (rule 218)
    expr_without_variable  ->  rw_variable . T_DEC   (rule 220)

    T_INC	shift, and go to state 206
    T_DEC	shift, and go to state 207



state 89

    expr_without_variable  ->  variable . '=' expr   (rule 200)
    expr_without_variable  ->  variable . '=' '&' variable   (rule 201)
    expr_without_variable  ->  variable . '=' '&' T_NEW class_name_reference @40 ctor_arguments   (rule 203)
    expr_without_variable  ->  variable . T_PLUS_EQUAL expr   (rule 207)
    expr_without_variable  ->  variable . T_MINUS_EQUAL expr   (rule 208)
    expr_without_variable  ->  variable . T_MUL_EQUAL expr   (rule 209)
    expr_without_variable  ->  variable . T_DIV_EQUAL expr   (rule 210)
    expr_without_variable  ->  variable . T_CONCAT_EQUAL expr   (rule 211)
    expr_without_variable  ->  variable . T_MOD_EQUAL expr   (rule 212)
    expr_without_variable  ->  variable . T_AND_EQUAL expr   (rule 213)
    expr_without_variable  ->  variable . T_OR_EQUAL expr   (rule 214)
    expr_without_variable  ->  variable . T_XOR_EQUAL expr   (rule 215)
    expr_without_variable  ->  variable . T_SL_EQUAL expr   (rule 216)
    expr_without_variable  ->  variable . T_SR_EQUAL expr   (rule 217)
    r_variable  ->  variable .   (rule 329)
    rw_variable  ->  variable . @56   (rule 333)

    '=' 	shift, and go to state 208
    T_PLUS_EQUAL	shift, and go to state 209
    T_MINUS_EQUAL	shift, and go to state 210
    T_MUL_EQUAL	shift, and go to state 211
    T_DIV_EQUAL	shift, and go to state 212
    T_CONCAT_EQUAL	shift, and go to state 213
    T_MOD_EQUAL	shift, and go to state 214
    T_AND_EQUAL	shift, and go to state 215
    T_OR_EQUAL	shift, and go to state 216
    T_XOR_EQUAL	shift, and go to state 217
    T_SL_EQUAL	shift, and go to state 218
    T_SR_EQUAL	shift, and go to state 219

    T_INC	reduce using rule 332 (@56)
    T_DEC	reduce using rule 332 (@56)
    $default	reduce using rule 329 (r_variable)
    @56 	go to state 220



state 90

    function_call  ->  variable_without_objects . '(' @52 function_call_parameter_list ')'   (rule 281)

    '(' 	shift, and go to state 221



state 91

    base_variable  ->  static_member .   (rule 352)

    $default	reduce using rule 352 (base_variable)



state 92

    variable  ->  base_variable_with_function_calls . T_OBJECT_OPERATOR @57 object_property @58 method_or_not variable_properties   (rule 336)
    variable  ->  base_variable_with_function_calls .   (rule 337)

    T_OBJECT_OPERATOR	shift, and go to state 222

    $default	reduce using rule 337 (variable)



state 93

    base_variable_with_function_calls  ->  base_variable .   (rule 348)

    $default	reduce using rule 348 (base_variable_with_function_calls)



state 94

    variable_without_objects  ->  reference_variable .   (rule 345)
    base_variable  ->  reference_variable .   (rule 350)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 353)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 354)

    '[' 	shift, and go to state 223
    '{' 	shift, and go to state 224

    '(' 	reduce using rule 345 (variable_without_objects)
    $default	reduce using rule 350 (base_variable)


state 95

    reference_variable  ->  compound_variable .   (rule 355)

    $default	reduce using rule 355 (reference_variable)



state 96

    variable_without_objects  ->  simple_indirect_reference . reference_variable   (rule 346)
    base_variable  ->  simple_indirect_reference . reference_variable   (rule 351)
    simple_indirect_reference  ->  simple_indirect_reference . '$'   (rule 369)

    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 225

    reference_variable	go to state 226
    compound_variable	go to state 95



state 97

    expr_without_variable  ->  internal_functions_in_yacc .   (rule 259)

    $default	reduce using rule 259 (expr_without_variable)



state 98

    scalar  ->  class_constant .   (rule 314)

    $default	reduce using rule 314 (scalar)



state 99

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    internal_functions_in_yacc  ->  T_INCLUDE expr .   (rule 410)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 410 (internal_functions_in_yacc)



state 100

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    internal_functions_in_yacc  ->  T_INCLUDE_ONCE expr .   (rule 411)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 411 (internal_functions_in_yacc)



state 101

    internal_functions_in_yacc  ->  T_EVAL '(' . expr ')'   (rule 412)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 227
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 102

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    internal_functions_in_yacc  ->  T_REQUIRE expr .   (rule 413)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 413 (internal_functions_in_yacc)



state 103

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    internal_functions_in_yacc  ->  T_REQUIRE_ONCE expr .   (rule 414)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 414 (internal_functions_in_yacc)



state 104

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  T_PRINT expr .   (rule 273)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 273 (expr_without_variable)



state 105

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  '+' expr .   (rule 242)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 242 (expr_without_variable)



state 106

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  '-' expr .   (rule 243)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 243 (expr_without_variable)



state 107

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  '!' expr .   (rule 244)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 244 (expr_without_variable)



state 108

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  '~' expr .   (rule 245)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)


    $default	reduce using rule 245 (expr_without_variable)



state 109

    function_call  ->  T_STRING . '(' @49 function_call_parameter_list ')'   (rule 275)
    fully_qualified_class_name  ->  T_STRING .   (rule 282)

    '(' 	shift, and go to state 133

    $default	reduce using rule 282 (fully_qualified_class_name)



state 110

    function_call  ->  fully_qualified_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @50 function_call_parameter_list ')'   (rule 277)
    function_call  ->  fully_qualified_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @51 function_call_parameter_list ')'   (rule 279)
    static_member  ->  fully_qualified_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects   (rule 347)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 228



state 111

    expr_without_variable  ->  T_INC rw_variable .   (rule 219)

    $default	reduce using rule 219 (expr_without_variable)



state 112

    rw_variable  ->  variable . @56   (rule 333)

    $default	reduce using rule 332 (@56)

    @56 	go to state 220



state 113

    expr_without_variable  ->  T_DEC rw_variable .   (rule 221)

    $default	reduce using rule 221 (expr_without_variable)



state 114

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  T_INT_CAST expr .   (rule 260)


    $default	reduce using rule 260 (expr_without_variable)



state 115

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  T_DOUBLE_CAST expr .   (rule 261)


    $default	reduce using rule 261 (expr_without_variable)



state 116

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  T_STRING_CAST expr .   (rule 262)


    $default	reduce using rule 262 (expr_without_variable)



state 117

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  T_ARRAY_CAST expr .   (rule 263)


    $default	reduce using rule 263 (expr_without_variable)



state 118

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  T_OBJECT_CAST expr .   (rule 264)


    $default	reduce using rule 264 (expr_without_variable)



state 119

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  T_BOOL_CAST expr .   (rule 265)


    $default	reduce using rule 265 (expr_without_variable)



state 120

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  T_UNSET_CAST expr .   (rule 266)


    $default	reduce using rule 266 (expr_without_variable)



state 121

    expr_without_variable  ->  '@' @48 . expr   (rule 269)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 229
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 122

    fully_qualified_class_name  ->  T_STRING .   (rule 282)
    class_name_reference  ->  T_STRING .   (rule 283)

    T_PAAMAYIM_NEKUDOTAYIM	reduce using rule 282 (fully_qualified_class_name)
    $default	reduce using rule 283 (class_name_reference)


state 123

    static_member  ->  fully_qualified_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects   (rule 347)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 230



state 124

    expr_without_variable  ->  T_NEW class_name_reference . @41 ctor_arguments   (rule 205)

    $default	reduce using rule 204 (@41)

    @41 	go to state 231



state 125

    class_name_reference  ->  dynamic_class_name_reference .   (rule 284)

    $default	reduce using rule 284 (class_name_reference)



state 126

    dynamic_class_name_reference  ->  base_variable . T_OBJECT_OPERATOR @53 object_property @54 dynamic_class_name_variable_properties   (rule 287)
    dynamic_class_name_reference  ->  base_variable .   (rule 288)

    T_OBJECT_OPERATOR	shift, and go to state 232

    $default	reduce using rule 288 (dynamic_class_name_reference)



state 127

    base_variable  ->  reference_variable .   (rule 350)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 353)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 354)

    '[' 	shift, and go to state 223
    '{' 	shift, and go to state 224

    $default	reduce using rule 350 (base_variable)



state 128

    base_variable  ->  simple_indirect_reference . reference_variable   (rule 351)
    simple_indirect_reference  ->  simple_indirect_reference . '$'   (rule 369)

    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 225

    reference_variable	go to state 233
    compound_variable	go to state 95



state 129

    expr_without_variable  ->  T_CLONE expr .   (rule 206)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)


    $default	reduce using rule 206 (expr_without_variable)



state 130

    exit_expr  ->  '(' . ')'   (rule 293)
    exit_expr  ->  '(' . expr ')'   (rule 294)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    ')' 	shift, and go to state 234
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 235
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 131

    expr_without_variable  ->  T_EXIT exit_expr .   (rule 267)

    $default	reduce using rule 267 (expr_without_variable)



state 132

    unticked_statement  ->  T_IF '(' . expr ')' @3 statement @4 elseif_list else_single   (rule 18)
    unticked_statement  ->  T_IF '(' . expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 21)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 236
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 133

    function_call  ->  T_STRING '(' . @49 function_call_parameter_list ')'   (rule 275)

    $default	reduce using rule 274 (@49)

    @49 	go to state 237



state 134

    unticked_statement  ->  T_ECHO echo_expr_list . ';'   (rule 43)
    echo_expr_list  ->  echo_expr_list . ',' expr   (rule 191)

    ',' 	shift, and go to state 238
    ';' 	shift, and go to state 239



state 135

    echo_expr_list  ->  expr .   (rule 192)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 192 (echo_expr_list)



state 136

    unticked_statement  ->  T_DO @9 . statement T_WHILE '(' @10 expr ')' ';'   (rule 27)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    statement	go to state 240
    unticked_statement	go to state 74
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 137

    unticked_statement  ->  T_WHILE '(' . @7 expr ')' @8 while_statement   (rule 24)

    $default	reduce using rule 22 (@7)

    @7  	go to state 241



state 138

    unticked_statement  ->  T_FOR '(' . for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 31)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 193 (for_expr)

    for_expr	go to state 242
    non_empty_for_expr	go to state 243
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 244
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 139

    unticked_statement  ->  T_FOREACH '(' . variable T_AS @15 foreach_variable foreach_optional_arg ')' @16 foreach_statement   (rule 50)
    unticked_statement  ->  T_FOREACH '(' . expr_without_variable T_AS @17 w_variable foreach_optional_arg ')' @18 foreach_statement   (rule 53)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 245
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 149
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 246
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 140

    unticked_statement  ->  T_DECLARE @19 . '(' declare_list ')' declare_statement   (rule 55)

    '(' 	shift, and go to state 247



state 141

    unticked_statement  ->  T_SWITCH '(' . expr ')' @14 switch_case_list   (rule 33)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 248
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 142

    unticked_statement  ->  T_BREAK ';' .   (rule 34)

    $default	reduce using rule 34 (unticked_statement)



state 143

    unticked_statement  ->  T_BREAK expr . ';'   (rule 35)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ';' 	shift, and go to state 249



state 144

    unticked_statement  ->  T_CONTINUE ';' .   (rule 36)

    $default	reduce using rule 36 (unticked_statement)



state 145

    unticked_statement  ->  T_CONTINUE expr . ';'   (rule 37)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ';' 	shift, and go to state 250



state 146

    unticked_function_declaration_statement  ->  T_FUNCTION @27 . is_reference T_STRING @28 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 82)

    '&' 	shift, and go to state 251

    $default	reduce using rule 78 (is_reference)

    is_reference	go to state 252



state 147

    unticked_statement  ->  T_RETURN ';' .   (rule 38)

    $default	reduce using rule 38 (unticked_statement)



state 148

    unticked_statement  ->  T_RETURN expr_without_variable . ';'   (rule 39)
    expr  ->  expr_without_variable .   (rule 328)

    ';' 	shift, and go to state 253

    $default	reduce using rule 328 (expr)



state 149

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204



state 150

    unticked_statement  ->  T_RETURN variable . ';'   (rule 40)
    expr_without_variable  ->  variable . '=' expr   (rule 200)
    expr_without_variable  ->  variable . '=' '&' variable   (rule 201)
    expr_without_variable  ->  variable . '=' '&' T_NEW class_name_reference @40 ctor_arguments   (rule 203)
    expr_without_variable  ->  variable . T_PLUS_EQUAL expr   (rule 207)
    expr_without_variable  ->  variable . T_MINUS_EQUAL expr   (rule 208)
    expr_without_variable  ->  variable . T_MUL_EQUAL expr   (rule 209)
    expr_without_variable  ->  variable . T_DIV_EQUAL expr   (rule 210)
    expr_without_variable  ->  variable . T_CONCAT_EQUAL expr   (rule 211)
    expr_without_variable  ->  variable . T_MOD_EQUAL expr   (rule 212)
    expr_without_variable  ->  variable . T_AND_EQUAL expr   (rule 213)
    expr_without_variable  ->  variable . T_OR_EQUAL expr   (rule 214)
    expr_without_variable  ->  variable . T_XOR_EQUAL expr   (rule 215)
    expr_without_variable  ->  variable . T_SL_EQUAL expr   (rule 216)
    expr_without_variable  ->  variable . T_SR_EQUAL expr   (rule 217)
    r_variable  ->  variable .   (rule 329)
    rw_variable  ->  variable . @56   (rule 333)

    '=' 	shift, and go to state 208
    T_PLUS_EQUAL	shift, and go to state 209
    T_MINUS_EQUAL	shift, and go to state 210
    T_MUL_EQUAL	shift, and go to state 211
    T_DIV_EQUAL	shift, and go to state 212
    T_CONCAT_EQUAL	shift, and go to state 213
    T_MOD_EQUAL	shift, and go to state 214
    T_AND_EQUAL	shift, and go to state 215
    T_OR_EQUAL	shift, and go to state 216
    T_XOR_EQUAL	shift, and go to state 217
    T_SL_EQUAL	shift, and go to state 218
    T_SR_EQUAL	shift, and go to state 219
    ';' 	shift, and go to state 254

    T_INC	reduce using rule 332 (@56)
    T_DEC	reduce using rule 332 (@56)
    $default	reduce using rule 329 (r_variable)
    @56 	go to state 220



state 151

    unticked_statement  ->  T_TRY @20 . '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    '{' 	shift, and go to state 255



state 152

    unticked_statement  ->  T_THROW expr . ';'   (rule 63)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ';' 	shift, and go to state 256



state 153

    use_filename  ->  T_CONSTANT_ENCAPSED_STRING .   (rule 74)

    $default	reduce using rule 74 (use_filename)



state 154

    use_filename  ->  '(' . T_CONSTANT_ENCAPSED_STRING ')'   (rule 75)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 257



state 155

    unticked_statement  ->  T_USE use_filename . ';'   (rule 46)

    ';' 	shift, and go to state 258



state 156

    global_var  ->  T_VARIABLE .   (rule 156)

    $default	reduce using rule 156 (global_var)



state 157

    global_var  ->  '$' . r_variable   (rule 157)
    global_var  ->  '$' . '{' expr '}'   (rule 158)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '{' 	shift, and go to state 259
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    r_variable	go to state 260
    variable	go to state 261
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 158

    unticked_statement  ->  T_GLOBAL global_var_list . ';'   (rule 41)
    global_var_list  ->  global_var_list . ',' global_var   (rule 154)

    ',' 	shift, and go to state 262
    ';' 	shift, and go to state 263



state 159

    global_var_list  ->  global_var .   (rule 155)

    $default	reduce using rule 155 (global_var_list)



state 160

    static_var_list  ->  T_VARIABLE .   (rule 161)
    static_var_list  ->  T_VARIABLE . '=' static_scalar   (rule 162)

    '=' 	shift, and go to state 264

    $default	reduce using rule 161 (static_var_list)



state 161

    unticked_statement  ->  T_STATIC static_var_list . ';'   (rule 42)
    static_var_list  ->  static_var_list . ',' T_VARIABLE   (rule 159)
    static_var_list  ->  static_var_list . ',' T_VARIABLE '=' static_scalar   (rule 160)

    ',' 	shift, and go to state 265
    ';' 	shift, and go to state 266



state 162

    class_entry_type  ->  T_ABSTRACT T_CLASS .   (rule 88)

    $default	reduce using rule 88 (class_entry_type)



state 163

    class_entry_type  ->  T_FINAL T_CLASS .   (rule 89)

    $default	reduce using rule 89 (class_entry_type)



state 164

    unticked_statement  ->  T_UNSET '(' . unset_variables ')' ';'   (rule 47)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    unset_variables	go to state 267
    unset_variable	go to state 268
    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    variable	go to state 269
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 165

    internal_functions_in_yacc  ->  T_ISSET '(' . isset_variables ')'   (rule 408)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    variable	go to state 270
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    isset_variables	go to state 271



state 166

    internal_functions_in_yacc  ->  T_EMPTY '(' . variable ')'   (rule 409)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    variable	go to state 272
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 167

    expr_without_variable  ->  T_LIST '(' . @39 assignment_list ')' '=' expr   (rule 199)

    $default	reduce using rule 198 (@39)

    @39 	go to state 273



state 168

    expr_without_variable  ->  T_ARRAY '(' . array_pair_list ')'   (rule 271)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 274
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 376 (array_pair_list)

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 275
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    array_pair_list	go to state 276
    non_empty_array_pair_list	go to state 277
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 169

    scalar  ->  T_START_HEREDOC encaps_list . T_END_HEREDOC   (rule 318)
    encaps_list  ->  encaps_list . encaps_var   (rule 386)
    encaps_list  ->  encaps_list . T_STRING   (rule 387)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 388)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 389)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 390)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 391)
    encaps_list  ->  encaps_list . '['   (rule 392)
    encaps_list  ->  encaps_list . ']'   (rule 393)
    encaps_list  ->  encaps_list . '{'   (rule 394)
    encaps_list  ->  encaps_list . '}'   (rule 395)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 396)

    '[' 	shift, and go to state 278
    T_STRING	shift, and go to state 279
    T_VARIABLE	shift, and go to state 280
    T_NUM_STRING	shift, and go to state 281
    T_CHARACTER	shift, and go to state 282
    T_BAD_CHARACTER	shift, and go to state 283
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 284
    T_OBJECT_OPERATOR	shift, and go to state 285
    T_END_HEREDOC	shift, and go to state 286
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 287
    T_CURLY_OPEN	shift, and go to state 288
    '{' 	shift, and go to state 289
    '}' 	shift, and go to state 290
    ']' 	shift, and go to state 291

    encaps_var	go to state 292



state 170

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    unticked_statement  ->  '{' inner_statement_list . '}'   (rule 15)

    '}' 	shift, and go to state 293

    $default	reduce using rule 8 (@2)

    @2  	go to state 294



state 171

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  '(' expr . ')'   (rule 255)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ')' 	shift, and go to state 295



state 172

    compound_variable  ->  '$' '{' . expr '}'   (rule 357)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 296
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 173

    expr_without_variable  ->  '`' encaps_list . '`'   (rule 272)
    encaps_list  ->  encaps_list . encaps_var   (rule 386)
    encaps_list  ->  encaps_list . T_STRING   (rule 387)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 388)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 389)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 390)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 391)
    encaps_list  ->  encaps_list . '['   (rule 392)
    encaps_list  ->  encaps_list . ']'   (rule 393)
    encaps_list  ->  encaps_list . '{'   (rule 394)
    encaps_list  ->  encaps_list . '}'   (rule 395)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 396)

    '[' 	shift, and go to state 278
    T_STRING	shift, and go to state 279
    T_VARIABLE	shift, and go to state 280
    T_NUM_STRING	shift, and go to state 281
    T_CHARACTER	shift, and go to state 282
    T_BAD_CHARACTER	shift, and go to state 283
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 284
    T_OBJECT_OPERATOR	shift, and go to state 285
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 287
    T_CURLY_OPEN	shift, and go to state 288
    '{' 	shift, and go to state 289
    '}' 	shift, and go to state 290
    '`' 	shift, and go to state 297
    ']' 	shift, and go to state 291

    encaps_var	go to state 292



state 174

    scalar  ->  '\"' encaps_list . '\"'   (rule 316)
    encaps_list  ->  encaps_list . encaps_var   (rule 386)
    encaps_list  ->  encaps_list . T_STRING   (rule 387)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 388)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 389)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 390)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 391)
    encaps_list  ->  encaps_list . '['   (rule 392)
    encaps_list  ->  encaps_list . ']'   (rule 393)
    encaps_list  ->  encaps_list . '{'   (rule 394)
    encaps_list  ->  encaps_list . '}'   (rule 395)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 396)

    '[' 	shift, and go to state 278
    T_STRING	shift, and go to state 279
    T_VARIABLE	shift, and go to state 280
    T_NUM_STRING	shift, and go to state 281
    T_CHARACTER	shift, and go to state 282
    T_BAD_CHARACTER	shift, and go to state 283
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 284
    T_OBJECT_OPERATOR	shift, and go to state 285
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 287
    T_CURLY_OPEN	shift, and go to state 288
    '{' 	shift, and go to state 289
    '}' 	shift, and go to state 290
    '\"'	shift, and go to state 298
    ']' 	shift, and go to state 291

    encaps_var	go to state 292



state 175

    scalar  ->  '\'' encaps_list . '\''   (rule 317)
    encaps_list  ->  encaps_list . encaps_var   (rule 386)
    encaps_list  ->  encaps_list . T_STRING   (rule 387)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 388)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 389)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 390)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 391)
    encaps_list  ->  encaps_list . '['   (rule 392)
    encaps_list  ->  encaps_list . ']'   (rule 393)
    encaps_list  ->  encaps_list . '{'   (rule 394)
    encaps_list  ->  encaps_list . '}'   (rule 395)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 396)

    '[' 	shift, and go to state 278
    T_STRING	shift, and go to state 279
    T_VARIABLE	shift, and go to state 280
    T_NUM_STRING	shift, and go to state 281
    T_CHARACTER	shift, and go to state 282
    T_BAD_CHARACTER	shift, and go to state 283
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 284
    T_OBJECT_OPERATOR	shift, and go to state 285
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 287
    T_CURLY_OPEN	shift, and go to state 288
    '{' 	shift, and go to state 289
    '}' 	shift, and go to state 290
    '\''	shift, and go to state 299
    ']' 	shift, and go to state 291

    encaps_var	go to state 292



state 176

    unticked_class_declaration_statement  ->  class_entry_type T_STRING . extends_from @29 implements_list '{' class_statement_list '}'   (rule 84)

    T_EXTENDS	shift, and go to state 300

    $default	reduce using rule 90 (extends_from)

    extends_from	go to state 301



state 177

    unticked_class_declaration_statement  ->  interface_entry T_STRING . @30 interface_extends_list '{' class_statement_list '}'   (rule 86)

    $default	reduce using rule 85 (@30)

    @30 	go to state 302



state 178

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @50 function_call_parameter_list ')'   (rule 277)
    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' @51 function_call_parameter_list ')'   (rule 279)
    static_member  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects   (rule 347)
    class_constant  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING   (rule 418)

    T_STRING	shift, and go to state 303
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    variable_without_objects	go to state 304
    reference_variable	go to state 305
    compound_variable	go to state 95
    simple_indirect_reference	go to state 306



state 179

    expr_without_variable  ->  expr T_LOGICAL_OR . @44 expr   (rule 227)

    $default	reduce using rule 226 (@44)

    @44 	go to state 307



state 180

    expr_without_variable  ->  expr T_LOGICAL_XOR . expr   (rule 230)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 308
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 181

    expr_without_variable  ->  expr T_LOGICAL_AND . @45 expr   (rule 229)

    $default	reduce using rule 228 (@45)

    @45 	go to state 309



state 182

    expr_without_variable  ->  expr '?' . @46 expr ':' @47 expr   (rule 258)

    $default	reduce using rule 256 (@46)

    @46 	go to state 310



state 183

    expr_without_variable  ->  expr T_BOOLEAN_OR . @42 expr   (rule 223)

    $default	reduce using rule 222 (@42)

    @42 	go to state 311



state 184

    expr_without_variable  ->  expr T_BOOLEAN_AND . @43 expr   (rule 225)

    $default	reduce using rule 224 (@43)

    @43 	go to state 312



state 185

    expr_without_variable  ->  expr '|' . expr   (rule 231)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 313
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 186

    expr_without_variable  ->  expr '^' . expr   (rule 233)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 314
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 187

    expr_without_variable  ->  expr '&' . expr   (rule 232)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 315
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 188

    expr_without_variable  ->  expr T_IS_EQUAL . expr   (rule 248)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 316
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 189

    expr_without_variable  ->  expr T_IS_NOT_EQUAL . expr   (rule 249)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 317
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 190

    expr_without_variable  ->  expr T_IS_IDENTICAL . expr   (rule 246)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 318
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 191

    expr_without_variable  ->  expr T_IS_NOT_IDENTICAL . expr   (rule 247)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 319
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 192

    expr_without_variable  ->  expr '<' . expr   (rule 250)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 320
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 193

    expr_without_variable  ->  expr T_IS_SMALLER_OR_EQUAL . expr   (rule 251)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 321
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 194

    expr_without_variable  ->  expr '>' . expr   (rule 252)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 322
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 195

    expr_without_variable  ->  expr T_IS_GREATER_OR_EQUAL . expr   (rule 253)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 323
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 196

    expr_without_variable  ->  expr T_SL . expr   (rule 240)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 324
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 197

    expr_without_variable  ->  expr T_SR . expr   (rule 241)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 325
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 198

    expr_without_variable  ->  expr '+' . expr   (rule 235)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 326
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 199

    expr_without_variable  ->  expr '-' . expr   (rule 236)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 327
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 200

    expr_without_variable  ->  expr '.' . expr   (rule 234)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 328
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 201

    expr_without_variable  ->  expr '*' . expr   (rule 237)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 329
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 202

    expr_without_variable  ->  expr '/' . expr   (rule 238)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 330
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 203

    expr_without_variable  ->  expr '%' . expr   (rule 239)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 331
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 204

    expr_without_variable  ->  expr T_INSTANCEOF . class_name_reference   (rule 254)

    T_STRING	shift, and go to state 122
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    fully_qualified_class_name	go to state 123
    class_name_reference	go to state 332
    dynamic_class_name_reference	go to state 125
    static_member	go to state 91
    base_variable	go to state 126
    reference_variable	go to state 127
    compound_variable	go to state 95
    simple_indirect_reference	go to state 128



state 205

    unticked_statement  ->  expr ';' .   (rule 45)

    $default	reduce using rule 45 (unticked_statement)



state 206

    expr_without_variable  ->  rw_variable T_INC .   (rule 218)

    $default	reduce using rule 218 (expr_without_variable)



state 207

    expr_without_variable  ->  rw_variable T_DEC .   (rule 220)

    $default	reduce using rule 220 (expr_without_variable)



state 208

    expr_without_variable  ->  variable '=' . expr   (rule 200)
    expr_without_variable  ->  variable '=' . '&' variable   (rule 201)
    expr_without_variable  ->  variable '=' . '&' T_NEW class_name_reference @40 ctor_arguments   (rule 203)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 333
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 334
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 209

    expr_without_variable  ->  variable T_PLUS_EQUAL . expr   (rule 207)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 335
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 210

    expr_without_variable  ->  variable T_MINUS_EQUAL . expr   (rule 208)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 336
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 211

    expr_without_variable  ->  variable T_MUL_EQUAL . expr   (rule 209)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 337
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 212

    expr_without_variable  ->  variable T_DIV_EQUAL . expr   (rule 210)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 338
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 213

    expr_without_variable  ->  variable T_CONCAT_EQUAL . expr   (rule 211)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 339
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 214

    expr_without_variable  ->  variable T_MOD_EQUAL . expr   (rule 212)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 340
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 215

    expr_without_variable  ->  variable T_AND_EQUAL . expr   (rule 213)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 341
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 216

    expr_without_variable  ->  variable T_OR_EQUAL . expr   (rule 214)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 342
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 217

    expr_without_variable  ->  variable T_XOR_EQUAL . expr   (rule 215)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 343
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 218

    expr_without_variable  ->  variable T_SL_EQUAL . expr   (rule 216)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 344
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 219

    expr_without_variable  ->  variable T_SR_EQUAL . expr   (rule 217)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 345
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 220

    rw_variable  ->  variable @56 .   (rule 333)

    $default	reduce using rule 333 (rw_variable)



state 221

    function_call  ->  variable_without_objects '(' . @52 function_call_parameter_list ')'   (rule 281)

    $default	reduce using rule 280 (@52)

    @52 	go to state 346



state 222

    variable  ->  base_variable_with_function_calls T_OBJECT_OPERATOR . @57 object_property @58 method_or_not variable_properties   (rule 336)

    $default	reduce using rule 334 (@57)

    @57 	go to state 347



state 223

    reference_variable  ->  reference_variable '[' . dim_offset ']'   (rule 353)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 358 (dim_offset)

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 348
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    dim_offset	go to state 349
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 224

    reference_variable  ->  reference_variable '{' . expr '}'   (rule 354)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 350
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 225

    compound_variable  ->  '$' . '{' expr '}'   (rule 357)
    simple_indirect_reference  ->  simple_indirect_reference '$' .   (rule 369)

    '{' 	shift, and go to state 172

    $default	reduce using rule 369 (simple_indirect_reference)



state 226

    variable_without_objects  ->  simple_indirect_reference reference_variable .   (rule 346)
    base_variable  ->  simple_indirect_reference reference_variable .   (rule 351)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 353)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 354)

    '[' 	shift, and go to state 223
    '{' 	shift, and go to state 224

    '(' 	reduce using rule 346 (variable_without_objects)
    $default	reduce using rule 351 (base_variable)


state 227

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    internal_functions_in_yacc  ->  T_EVAL '(' expr . ')'   (rule 412)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ')' 	shift, and go to state 351



state 228

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @50 function_call_parameter_list ')'   (rule 277)
    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' @51 function_call_parameter_list ')'   (rule 279)
    static_member  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects   (rule 347)

    T_STRING	shift, and go to state 352
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    variable_without_objects	go to state 304
    reference_variable	go to state 305
    compound_variable	go to state 95
    simple_indirect_reference	go to state 306



state 229

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  '@' @48 expr .   (rule 269)


    $default	reduce using rule 269 (expr_without_variable)



state 230

    static_member  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects   (rule 347)

    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    variable_without_objects	go to state 353
    reference_variable	go to state 305
    compound_variable	go to state 95
    simple_indirect_reference	go to state 306



state 231

    expr_without_variable  ->  T_NEW class_name_reference @41 . ctor_arguments   (rule 205)

    '(' 	shift, and go to state 354

    $default	reduce using rule 295 (ctor_arguments)

    ctor_arguments	go to state 355



state 232

    dynamic_class_name_reference  ->  base_variable T_OBJECT_OPERATOR . @53 object_property @54 dynamic_class_name_variable_properties   (rule 287)

    $default	reduce using rule 285 (@53)

    @53 	go to state 356



state 233

    base_variable  ->  simple_indirect_reference reference_variable .   (rule 351)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 353)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 354)

    '[' 	shift, and go to state 223
    '{' 	shift, and go to state 224

    $default	reduce using rule 351 (base_variable)



state 234

    exit_expr  ->  '(' ')' .   (rule 293)

    $default	reduce using rule 293 (exit_expr)



state 235

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    exit_expr  ->  '(' expr . ')'   (rule 294)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ')' 	shift, and go to state 357



state 236

    unticked_statement  ->  T_IF '(' expr . ')' @3 statement @4 elseif_list else_single   (rule 18)
    unticked_statement  ->  T_IF '(' expr . ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 21)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ')' 	shift, and go to state 358



state 237

    function_call  ->  T_STRING '(' @49 . function_call_parameter_list ')'   (rule 275)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 359
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 147 (function_call_parameter_list)

    function_call_parameter_list	go to state 360
    non_empty_function_call_parameter_list	go to state 361
    expr_without_variable	go to state 362
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 149
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 363
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 238

    echo_expr_list  ->  echo_expr_list ',' . expr   (rule 191)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 364
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 239

    unticked_statement  ->  T_ECHO echo_expr_list ';' .   (rule 43)

    $default	reduce using rule 43 (unticked_statement)



state 240

    unticked_statement  ->  T_DO @9 statement . T_WHILE '(' @10 expr ')' ';'   (rule 27)

    T_WHILE	shift, and go to state 365



state 241

    unticked_statement  ->  T_WHILE '(' @7 . expr ')' @8 while_statement   (rule 24)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 366
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 242

    unticked_statement  ->  T_FOR '(' for_expr . ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 31)

    ';' 	shift, and go to state 367



state 243

    for_expr  ->  non_empty_for_expr .   (rule 194)
    non_empty_for_expr  ->  non_empty_for_expr . ',' @38 expr   (rule 196)

    ',' 	shift, and go to state 368

    $default	reduce using rule 194 (for_expr)



state 244

    non_empty_for_expr  ->  expr .   (rule 197)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 197 (non_empty_for_expr)



state 245

    unticked_statement  ->  T_FOREACH '(' expr_without_variable . T_AS @17 w_variable foreach_optional_arg ')' @18 foreach_statement   (rule 53)
    expr  ->  expr_without_variable .   (rule 328)

    T_AS	shift, and go to state 369

    $default	reduce using rule 328 (expr)



state 246

    unticked_statement  ->  T_FOREACH '(' variable . T_AS @15 foreach_variable foreach_optional_arg ')' @16 foreach_statement   (rule 50)
    expr_without_variable  ->  variable . '=' expr   (rule 200)
    expr_without_variable  ->  variable . '=' '&' variable   (rule 201)
    expr_without_variable  ->  variable . '=' '&' T_NEW class_name_reference @40 ctor_arguments   (rule 203)
    expr_without_variable  ->  variable . T_PLUS_EQUAL expr   (rule 207)
    expr_without_variable  ->  variable . T_MINUS_EQUAL expr   (rule 208)
    expr_without_variable  ->  variable . T_MUL_EQUAL expr   (rule 209)
    expr_without_variable  ->  variable . T_DIV_EQUAL expr   (rule 210)
    expr_without_variable  ->  variable . T_CONCAT_EQUAL expr   (rule 211)
    expr_without_variable  ->  variable . T_MOD_EQUAL expr   (rule 212)
    expr_without_variable  ->  variable . T_AND_EQUAL expr   (rule 213)
    expr_without_variable  ->  variable . T_OR_EQUAL expr   (rule 214)
    expr_without_variable  ->  variable . T_XOR_EQUAL expr   (rule 215)
    expr_without_variable  ->  variable . T_SL_EQUAL expr   (rule 216)
    expr_without_variable  ->  variable . T_SR_EQUAL expr   (rule 217)
    r_variable  ->  variable .   (rule 329)
    rw_variable  ->  variable . @56   (rule 333)

    '=' 	shift, and go to state 208
    T_PLUS_EQUAL	shift, and go to state 209
    T_MINUS_EQUAL	shift, and go to state 210
    T_MUL_EQUAL	shift, and go to state 211
    T_DIV_EQUAL	shift, and go to state 212
    T_CONCAT_EQUAL	shift, and go to state 213
    T_MOD_EQUAL	shift, and go to state 214
    T_AND_EQUAL	shift, and go to state 215
    T_OR_EQUAL	shift, and go to state 216
    T_XOR_EQUAL	shift, and go to state 217
    T_SL_EQUAL	shift, and go to state 218
    T_SR_EQUAL	shift, and go to state 219
    T_AS	shift, and go to state 370

    T_INC	reduce using rule 332 (@56)
    T_DEC	reduce using rule 332 (@56)
    $default	reduce using rule 329 (r_variable)
    @56 	go to state 220



state 247

    unticked_statement  ->  T_DECLARE @19 '(' . declare_list ')' declare_statement   (rule 55)

    T_STRING	shift, and go to state 371

    declare_list	go to state 372



state 248

    unticked_statement  ->  T_SWITCH '(' expr . ')' @14 switch_case_list   (rule 33)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ')' 	shift, and go to state 373



state 249

    unticked_statement  ->  T_BREAK expr ';' .   (rule 35)

    $default	reduce using rule 35 (unticked_statement)



state 250

    unticked_statement  ->  T_CONTINUE expr ';' .   (rule 37)

    $default	reduce using rule 37 (unticked_statement)



state 251

    is_reference  ->  '&' .   (rule 79)

    $default	reduce using rule 79 (is_reference)



state 252

    unticked_function_declaration_statement  ->  T_FUNCTION @27 is_reference . T_STRING @28 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 82)

    T_STRING	shift, and go to state 374



state 253

    unticked_statement  ->  T_RETURN expr_without_variable ';' .   (rule 39)

    $default	reduce using rule 39 (unticked_statement)



state 254

    unticked_statement  ->  T_RETURN variable ';' .   (rule 40)

    $default	reduce using rule 40 (unticked_statement)



state 255

    unticked_statement  ->  T_TRY @20 '{' . inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 375



state 256

    unticked_statement  ->  T_THROW expr ';' .   (rule 63)

    $default	reduce using rule 63 (unticked_statement)



state 257

    use_filename  ->  '(' T_CONSTANT_ENCAPSED_STRING . ')'   (rule 75)

    ')' 	shift, and go to state 376



state 258

    unticked_statement  ->  T_USE use_filename ';' .   (rule 46)

    $default	reduce using rule 46 (unticked_statement)



state 259

    global_var  ->  '$' '{' . expr '}'   (rule 158)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 377
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 260

    global_var  ->  '$' r_variable .   (rule 157)

    $default	reduce using rule 157 (global_var)



state 261

    r_variable  ->  variable .   (rule 329)

    $default	reduce using rule 329 (r_variable)



state 262

    global_var_list  ->  global_var_list ',' . global_var   (rule 154)

    T_VARIABLE	shift, and go to state 156
    '$' 	shift, and go to state 157

    global_var	go to state 378



state 263

    unticked_statement  ->  T_GLOBAL global_var_list ';' .   (rule 41)

    $default	reduce using rule 41 (unticked_statement)



state 264

    static_var_list  ->  T_VARIABLE '=' . static_scalar   (rule 162)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 384
    static_class_constant	go to state 385



state 265

    static_var_list  ->  static_var_list ',' . T_VARIABLE   (rule 159)
    static_var_list  ->  static_var_list ',' . T_VARIABLE '=' static_scalar   (rule 160)

    T_VARIABLE	shift, and go to state 386



state 266

    unticked_statement  ->  T_STATIC static_var_list ';' .   (rule 42)

    $default	reduce using rule 42 (unticked_statement)



state 267

    unticked_statement  ->  T_UNSET '(' unset_variables . ')' ';'   (rule 47)
    unset_variables  ->  unset_variables . ',' unset_variable   (rule 72)

    ',' 	shift, and go to state 387
    ')' 	shift, and go to state 388



state 268

    unset_variables  ->  unset_variable .   (rule 71)

    $default	reduce using rule 71 (unset_variables)



state 269

    unset_variable  ->  variable .   (rule 73)

    $default	reduce using rule 73 (unset_variable)



state 270

    isset_variables  ->  variable .   (rule 415)

    $default	reduce using rule 415 (isset_variables)



state 271

    internal_functions_in_yacc  ->  T_ISSET '(' isset_variables . ')'   (rule 408)
    isset_variables  ->  isset_variables . ',' @64 variable   (rule 417)

    ',' 	shift, and go to state 389
    ')' 	shift, and go to state 390



state 272

    internal_functions_in_yacc  ->  T_EMPTY '(' variable . ')'   (rule 409)

    ')' 	shift, and go to state 391



state 273

    expr_without_variable  ->  T_LIST '(' @39 . assignment_list ')' '=' expr   (rule 199)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    T_LIST	shift, and go to state 392
    '$' 	shift, and go to state 68

    $default	reduce using rule 375 (assignment_list_element)

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    variable	go to state 393
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    assignment_list	go to state 394
    assignment_list_element	go to state 395



state 274

    non_empty_array_pair_list  ->  '&' . w_variable   (rule 385)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    w_variable	go to state 396
    variable	go to state 397
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 275

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    non_empty_array_pair_list  ->  expr . T_DOUBLE_ARROW expr   (rule 380)
    non_empty_array_pair_list  ->  expr .   (rule 381)
    non_empty_array_pair_list  ->  expr . T_DOUBLE_ARROW '&' w_variable   (rule 384)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    T_DOUBLE_ARROW	shift, and go to state 398

    $default	reduce using rule 381 (non_empty_array_pair_list)



state 276

    expr_without_variable  ->  T_ARRAY '(' array_pair_list . ')'   (rule 271)

    ')' 	shift, and go to state 399



state 277

    array_pair_list  ->  non_empty_array_pair_list . possible_comma   (rule 377)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW expr   (rule 378)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr   (rule 379)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW '&' w_variable   (rule 382)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' '&' w_variable   (rule 383)

    ',' 	shift, and go to state 400

    $default	reduce using rule 321 (possible_comma)

    possible_comma	go to state 401



state 278

    encaps_list  ->  encaps_list '[' .   (rule 392)

    $default	reduce using rule 392 (encaps_list)



state 279

    encaps_list  ->  encaps_list T_STRING .   (rule 387)

    $default	reduce using rule 387 (encaps_list)



state 280

    encaps_var  ->  T_VARIABLE .   (rule 398)
    encaps_var  ->  T_VARIABLE . '[' @63 encaps_var_offset ']'   (rule 400)
    encaps_var  ->  T_VARIABLE . T_OBJECT_OPERATOR T_STRING   (rule 401)

    '[' 	shift, and go to state 402
    T_OBJECT_OPERATOR	shift, and go to state 403

    '[' 	[reduce using rule 398 (encaps_var)]
    T_OBJECT_OPERATOR	[reduce using rule 398 (encaps_var)]
    $default	reduce using rule 398 (encaps_var)



state 281

    encaps_list  ->  encaps_list T_NUM_STRING .   (rule 388)

    $default	reduce using rule 388 (encaps_list)



state 282

    encaps_list  ->  encaps_list T_CHARACTER .   (rule 390)

    $default	reduce using rule 390 (encaps_list)



state 283

    encaps_list  ->  encaps_list T_BAD_CHARACTER .   (rule 391)

    $default	reduce using rule 391 (encaps_list)



state 284

    encaps_list  ->  encaps_list T_ENCAPSED_AND_WHITESPACE .   (rule 389)

    $default	reduce using rule 389 (encaps_list)



state 285

    encaps_list  ->  encaps_list T_OBJECT_OPERATOR .   (rule 396)

    $default	reduce using rule 396 (encaps_list)



state 286

    scalar  ->  T_START_HEREDOC encaps_list T_END_HEREDOC .   (rule 318)

    $default	reduce using rule 318 (scalar)



state 287

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES . expr '}'   (rule 402)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}'   (rule 403)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 404
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 405
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 288

    encaps_var  ->  T_CURLY_OPEN . variable '}'   (rule 404)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    variable	go to state 406
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 289

    encaps_list  ->  encaps_list '{' .   (rule 394)

    $default	reduce using rule 394 (encaps_list)



state 290

    encaps_list  ->  encaps_list '}' .   (rule 395)

    $default	reduce using rule 395 (encaps_list)



state 291

    encaps_list  ->  encaps_list ']' .   (rule 393)

    $default	reduce using rule 393 (encaps_list)



state 292

    encaps_list  ->  encaps_list encaps_var .   (rule 386)

    $default	reduce using rule 386 (encaps_list)



state 293

    unticked_statement  ->  '{' inner_statement_list '}' .   (rule 15)

    $default	reduce using rule 15 (unticked_statement)



state 294

    inner_statement_list  ->  inner_statement_list @2 . inner_statement   (rule 9)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_FUNCTION	shift, and go to state 43
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_ABSTRACT	shift, and go to state 50
    T_FINAL	shift, and go to state 51
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_CLASS	shift, and go to state 55
    T_INTERFACE	shift, and go to state 56
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    inner_statement	go to state 407
    statement	go to state 408
    unticked_statement	go to state 74
    function_declaration_statement	go to state 409
    class_declaration_statement	go to state 410
    unticked_function_declaration_statement	go to state 77
    unticked_class_declaration_statement	go to state 78
    class_entry_type	go to state 79
    interface_entry	go to state 80
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 295

    expr_without_variable  ->  '(' expr ')' .   (rule 255)

    $default	reduce using rule 255 (expr_without_variable)



state 296

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    compound_variable  ->  '$' '{' expr . '}'   (rule 357)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    '}' 	shift, and go to state 411



state 297

    expr_without_variable  ->  '`' encaps_list '`' .   (rule 272)

    $default	reduce using rule 272 (expr_without_variable)



state 298

    scalar  ->  '\"' encaps_list '\"' .   (rule 316)

    $default	reduce using rule 316 (scalar)



state 299

    scalar  ->  '\'' encaps_list '\'' .   (rule 317)

    $default	reduce using rule 317 (scalar)



state 300

    extends_from  ->  T_EXTENDS . fully_qualified_class_name   (rule 91)

    T_STRING	shift, and go to state 412

    fully_qualified_class_name	go to state 413



state 301

    unticked_class_declaration_statement  ->  class_entry_type T_STRING extends_from . @29 implements_list '{' class_statement_list '}'   (rule 84)

    $default	reduce using rule 83 (@29)

    @29 	go to state 414



state 302

    unticked_class_declaration_statement  ->  interface_entry T_STRING @30 . interface_extends_list '{' class_statement_list '}'   (rule 86)

    T_EXTENDS	shift, and go to state 415

    $default	reduce using rule 93 (interface_extends_list)

    interface_extends_list	go to state 416



state 303

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @50 function_call_parameter_list ')'   (rule 277)
    class_constant  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING .   (rule 418)

    '(' 	shift, and go to state 417

    $default	reduce using rule 418 (class_constant)



state 304

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects . '(' @51 function_call_parameter_list ')'   (rule 279)
    static_member  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .   (rule 347)

    '(' 	shift, and go to state 418

    $default	reduce using rule 347 (static_member)



state 305

    variable_without_objects  ->  reference_variable .   (rule 345)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 353)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 354)

    '[' 	shift, and go to state 223
    '{' 	shift, and go to state 224

    $default	reduce using rule 345 (variable_without_objects)



state 306

    variable_without_objects  ->  simple_indirect_reference . reference_variable   (rule 346)
    simple_indirect_reference  ->  simple_indirect_reference . '$'   (rule 369)

    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 225

    reference_variable	go to state 419
    compound_variable	go to state 95



state 307

    expr_without_variable  ->  expr T_LOGICAL_OR @44 . expr   (rule 227)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 420
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 308

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr T_LOGICAL_XOR expr .   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 230 (expr_without_variable)



state 309

    expr_without_variable  ->  expr T_LOGICAL_AND @45 . expr   (rule 229)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 421
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 310

    expr_without_variable  ->  expr '?' @46 . expr ':' @47 expr   (rule 258)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 422
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 311

    expr_without_variable  ->  expr T_BOOLEAN_OR @42 . expr   (rule 223)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 423
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 312

    expr_without_variable  ->  expr T_BOOLEAN_AND @43 . expr   (rule 225)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 424
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 313

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr '|' expr .   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 231 (expr_without_variable)



state 314

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr '^' expr .   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 233 (expr_without_variable)



state 315

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr '&' expr .   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 232 (expr_without_variable)



state 316

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr T_IS_EQUAL expr .   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 248 (expr_without_variable)



state 317

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr T_IS_NOT_EQUAL expr .   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 249 (expr_without_variable)



state 318

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr T_IS_IDENTICAL expr .   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 246 (expr_without_variable)



state 319

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr T_IS_NOT_IDENTICAL expr .   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 247 (expr_without_variable)



state 320

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr '<' expr .   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 250 (expr_without_variable)



state 321

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr T_IS_SMALLER_OR_EQUAL expr .   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 251 (expr_without_variable)



state 322

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr '>' expr .   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 252 (expr_without_variable)



state 323

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr T_IS_GREATER_OR_EQUAL expr .   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 253 (expr_without_variable)



state 324

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr T_SL expr .   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 240 (expr_without_variable)



state 325

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr T_SR expr .   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 241 (expr_without_variable)



state 326

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr '+' expr .   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 235 (expr_without_variable)



state 327

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr '-' expr .   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 236 (expr_without_variable)



state 328

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr '.' expr .   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 234 (expr_without_variable)



state 329

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr '*' expr .   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 237 (expr_without_variable)



state 330

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr '/' expr .   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 238 (expr_without_variable)



state 331

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr '%' expr .   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 239 (expr_without_variable)



state 332

    expr_without_variable  ->  expr T_INSTANCEOF class_name_reference .   (rule 254)

    $default	reduce using rule 254 (expr_without_variable)



state 333

    expr_without_variable  ->  variable '=' '&' . variable   (rule 201)
    expr_without_variable  ->  variable '=' '&' . T_NEW class_name_reference @40 ctor_arguments   (rule 203)

    T_NEW	shift, and go to state 425
    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    variable	go to state 426
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 334

    expr_without_variable  ->  variable '=' expr .   (rule 200)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 200 (expr_without_variable)



state 335

    expr_without_variable  ->  variable T_PLUS_EQUAL expr .   (rule 207)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 207 (expr_without_variable)



state 336

    expr_without_variable  ->  variable T_MINUS_EQUAL expr .   (rule 208)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 208 (expr_without_variable)



state 337

    expr_without_variable  ->  variable T_MUL_EQUAL expr .   (rule 209)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 209 (expr_without_variable)



state 338

    expr_without_variable  ->  variable T_DIV_EQUAL expr .   (rule 210)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 210 (expr_without_variable)



state 339

    expr_without_variable  ->  variable T_CONCAT_EQUAL expr .   (rule 211)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 211 (expr_without_variable)



state 340

    expr_without_variable  ->  variable T_MOD_EQUAL expr .   (rule 212)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 212 (expr_without_variable)



state 341

    expr_without_variable  ->  variable T_AND_EQUAL expr .   (rule 213)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 213 (expr_without_variable)



state 342

    expr_without_variable  ->  variable T_OR_EQUAL expr .   (rule 214)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 214 (expr_without_variable)



state 343

    expr_without_variable  ->  variable T_XOR_EQUAL expr .   (rule 215)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 215 (expr_without_variable)



state 344

    expr_without_variable  ->  variable T_SL_EQUAL expr .   (rule 216)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 216 (expr_without_variable)



state 345

    expr_without_variable  ->  variable T_SR_EQUAL expr .   (rule 217)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 217 (expr_without_variable)



state 346

    function_call  ->  variable_without_objects '(' @52 . function_call_parameter_list ')'   (rule 281)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 359
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 147 (function_call_parameter_list)

    function_call_parameter_list	go to state 427
    non_empty_function_call_parameter_list	go to state 361
    expr_without_variable	go to state 362
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 149
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 363
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 347

    variable  ->  base_variable_with_function_calls T_OBJECT_OPERATOR @57 . object_property @58 method_or_not variable_properties   (rule 336)

    T_STRING	shift, and go to state 428
    T_VARIABLE	shift, and go to state 31
    '{' 	shift, and go to state 429
    '$' 	shift, and go to state 68

    variable_without_objects	go to state 430
    reference_variable	go to state 305
    compound_variable	go to state 95
    object_property	go to state 431
    object_dim_list	go to state 432
    variable_name	go to state 433
    simple_indirect_reference	go to state 306



state 348

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    dim_offset  ->  expr .   (rule 359)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 359 (dim_offset)



state 349

    reference_variable  ->  reference_variable '[' dim_offset . ']'   (rule 353)

    ']' 	shift, and go to state 434



state 350

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    reference_variable  ->  reference_variable '{' expr . '}'   (rule 354)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    '}' 	shift, and go to state 435



state 351

    internal_functions_in_yacc  ->  T_EVAL '(' expr ')' .   (rule 412)

    $default	reduce using rule 412 (internal_functions_in_yacc)



state 352

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @50 function_call_parameter_list ')'   (rule 277)

    '(' 	shift, and go to state 417



state 353

    static_member  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .   (rule 347)

    $default	reduce using rule 347 (static_member)



state 354

    ctor_arguments  ->  '(' . function_call_parameter_list ')'   (rule 296)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 359
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 147 (function_call_parameter_list)

    function_call_parameter_list	go to state 436
    non_empty_function_call_parameter_list	go to state 361
    expr_without_variable	go to state 362
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 149
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 363
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 355

    expr_without_variable  ->  T_NEW class_name_reference @41 ctor_arguments .   (rule 205)

    $default	reduce using rule 205 (expr_without_variable)



state 356

    dynamic_class_name_reference  ->  base_variable T_OBJECT_OPERATOR @53 . object_property @54 dynamic_class_name_variable_properties   (rule 287)

    T_STRING	shift, and go to state 428
    T_VARIABLE	shift, and go to state 31
    '{' 	shift, and go to state 429
    '$' 	shift, and go to state 68

    variable_without_objects	go to state 430
    reference_variable	go to state 305
    compound_variable	go to state 95
    object_property	go to state 437
    object_dim_list	go to state 432
    variable_name	go to state 433
    simple_indirect_reference	go to state 306



state 357

    exit_expr  ->  '(' expr ')' .   (rule 294)

    $default	reduce using rule 294 (exit_expr)



state 358

    unticked_statement  ->  T_IF '(' expr ')' . @3 statement @4 elseif_list else_single   (rule 18)
    unticked_statement  ->  T_IF '(' expr ')' . ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 21)

    ':' 	shift, and go to state 438

    $default	reduce using rule 16 (@3)

    @3  	go to state 439



state 359

    non_empty_function_call_parameter_list  ->  '&' . w_variable   (rule 150)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    w_variable	go to state 440
    variable	go to state 397
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 360

    function_call  ->  T_STRING '(' @49 function_call_parameter_list . ')'   (rule 275)

    ')' 	shift, and go to state 441



state 361

    function_call_parameter_list  ->  non_empty_function_call_parameter_list .   (rule 146)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' expr_without_variable   (rule 151)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' variable   (rule 152)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' '&' w_variable   (rule 153)

    ',' 	shift, and go to state 442

    $default	reduce using rule 146 (function_call_parameter_list)



state 362

    non_empty_function_call_parameter_list  ->  expr_without_variable .   (rule 148)
    expr  ->  expr_without_variable .   (rule 328)

    ',' 	reduce using rule 148 (non_empty_function_call_parameter_list)
    ')' 	reduce using rule 148 (non_empty_function_call_parameter_list)
    $default	reduce using rule 328 (expr)


state 363

    non_empty_function_call_parameter_list  ->  variable .   (rule 149)
    expr_without_variable  ->  variable . '=' expr   (rule 200)
    expr_without_variable  ->  variable . '=' '&' variable   (rule 201)
    expr_without_variable  ->  variable . '=' '&' T_NEW class_name_reference @40 ctor_arguments   (rule 203)
    expr_without_variable  ->  variable . T_PLUS_EQUAL expr   (rule 207)
    expr_without_variable  ->  variable . T_MINUS_EQUAL expr   (rule 208)
    expr_without_variable  ->  variable . T_MUL_EQUAL expr   (rule 209)
    expr_without_variable  ->  variable . T_DIV_EQUAL expr   (rule 210)
    expr_without_variable  ->  variable . T_CONCAT_EQUAL expr   (rule 211)
    expr_without_variable  ->  variable . T_MOD_EQUAL expr   (rule 212)
    expr_without_variable  ->  variable . T_AND_EQUAL expr   (rule 213)
    expr_without_variable  ->  variable . T_OR_EQUAL expr   (rule 214)
    expr_without_variable  ->  variable . T_XOR_EQUAL expr   (rule 215)
    expr_without_variable  ->  variable . T_SL_EQUAL expr   (rule 216)
    expr_without_variable  ->  variable . T_SR_EQUAL expr   (rule 217)
    r_variable  ->  variable .   (rule 329)
    rw_variable  ->  variable . @56   (rule 333)

    '=' 	shift, and go to state 208
    T_PLUS_EQUAL	shift, and go to state 209
    T_MINUS_EQUAL	shift, and go to state 210
    T_MUL_EQUAL	shift, and go to state 211
    T_DIV_EQUAL	shift, and go to state 212
    T_CONCAT_EQUAL	shift, and go to state 213
    T_MOD_EQUAL	shift, and go to state 214
    T_AND_EQUAL	shift, and go to state 215
    T_OR_EQUAL	shift, and go to state 216
    T_XOR_EQUAL	shift, and go to state 217
    T_SL_EQUAL	shift, and go to state 218
    T_SR_EQUAL	shift, and go to state 219

    ',' 	reduce using rule 149 (non_empty_function_call_parameter_list)
    T_INC	reduce using rule 332 (@56)
    T_DEC	reduce using rule 332 (@56)
    ')' 	reduce using rule 149 (non_empty_function_call_parameter_list)
    $default	reduce using rule 329 (r_variable)
    @56 	go to state 220



state 364

    echo_expr_list  ->  echo_expr_list ',' expr .   (rule 191)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 191 (echo_expr_list)



state 365

    unticked_statement  ->  T_DO @9 statement T_WHILE . '(' @10 expr ')' ';'   (rule 27)

    '(' 	shift, and go to state 443



state 366

    unticked_statement  ->  T_WHILE '(' @7 expr . ')' @8 while_statement   (rule 24)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ')' 	shift, and go to state 444



state 367

    unticked_statement  ->  T_FOR '(' for_expr ';' . @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 31)

    $default	reduce using rule 28 (@11)

    @11 	go to state 445



state 368

    non_empty_for_expr  ->  non_empty_for_expr ',' . @38 expr   (rule 196)

    $default	reduce using rule 195 (@38)

    @38 	go to state 446



state 369

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS . @17 w_variable foreach_optional_arg ')' @18 foreach_statement   (rule 53)

    $default	reduce using rule 51 (@17)

    @17 	go to state 447



state 370

    unticked_statement  ->  T_FOREACH '(' variable T_AS . @15 foreach_variable foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    $default	reduce using rule 48 (@15)

    @15 	go to state 448



state 371

    declare_list  ->  T_STRING . '=' static_scalar   (rule 109)

    '=' 	shift, and go to state 449



state 372

    unticked_statement  ->  T_DECLARE @19 '(' declare_list . ')' declare_statement   (rule 55)
    declare_list  ->  declare_list . ',' T_STRING '=' static_scalar   (rule 110)

    ',' 	shift, and go to state 450
    ')' 	shift, and go to state 451



state 373

    unticked_statement  ->  T_SWITCH '(' expr ')' . @14 switch_case_list   (rule 33)

    $default	reduce using rule 32 (@14)

    @14 	go to state 452



state 374

    unticked_function_declaration_statement  ->  T_FUNCTION @27 is_reference T_STRING . @28 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 82)

    $default	reduce using rule 81 (@28)

    @28 	go to state 453



state 375

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    unticked_statement  ->  T_TRY @20 '{' inner_statement_list . '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    '}' 	shift, and go to state 454

    $default	reduce using rule 8 (@2)

    @2  	go to state 294



state 376

    use_filename  ->  '(' T_CONSTANT_ENCAPSED_STRING ')' .   (rule 75)

    $default	reduce using rule 75 (use_filename)



state 377

    global_var  ->  '$' '{' expr . '}'   (rule 158)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    '}' 	shift, and go to state 455



state 378

    global_var_list  ->  global_var_list ',' global_var .   (rule 154)

    $default	reduce using rule 154 (global_var_list)



state 379

    static_scalar  ->  '+' . static_scalar   (rule 307)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 456
    static_class_constant	go to state 385



state 380

    static_scalar  ->  '-' . static_scalar   (rule 308)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 457
    static_class_constant	go to state 385



state 381

    static_scalar  ->  T_STRING .   (rule 306)
    static_class_constant  ->  T_STRING . T_PAAMAYIM_NEKUDOTAYIM T_STRING   (rule 311)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 458

    $default	reduce using rule 306 (static_scalar)



state 382

    static_scalar  ->  T_ARRAY . '(' static_array_pair_list ')'   (rule 309)

    '(' 	shift, and go to state 459



state 383

    static_scalar  ->  common_scalar .   (rule 305)

    $default	reduce using rule 305 (static_scalar)



state 384

    static_var_list  ->  T_VARIABLE '=' static_scalar .   (rule 162)

    $default	reduce using rule 162 (static_var_list)



state 385

    static_scalar  ->  static_class_constant .   (rule 310)

    $default	reduce using rule 310 (static_scalar)



state 386

    static_var_list  ->  static_var_list ',' T_VARIABLE .   (rule 159)
    static_var_list  ->  static_var_list ',' T_VARIABLE . '=' static_scalar   (rule 160)

    '=' 	shift, and go to state 460

    $default	reduce using rule 159 (static_var_list)



state 387

    unset_variables  ->  unset_variables ',' . unset_variable   (rule 72)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    unset_variable	go to state 461
    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    variable	go to state 269
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 388

    unticked_statement  ->  T_UNSET '(' unset_variables ')' . ';'   (rule 47)

    ';' 	shift, and go to state 462



state 389

    isset_variables  ->  isset_variables ',' . @64 variable   (rule 417)

    $default	reduce using rule 416 (@64)

    @64 	go to state 463



state 390

    internal_functions_in_yacc  ->  T_ISSET '(' isset_variables ')' .   (rule 408)

    $default	reduce using rule 408 (internal_functions_in_yacc)



state 391

    internal_functions_in_yacc  ->  T_EMPTY '(' variable ')' .   (rule 409)

    $default	reduce using rule 409 (internal_functions_in_yacc)



state 392

    assignment_list_element  ->  T_LIST . '(' @62 assignment_list ')'   (rule 374)

    '(' 	shift, and go to state 464



state 393

    assignment_list_element  ->  variable .   (rule 372)

    $default	reduce using rule 372 (assignment_list_element)



state 394

    expr_without_variable  ->  T_LIST '(' @39 assignment_list . ')' '=' expr   (rule 199)
    assignment_list  ->  assignment_list . ',' assignment_list_element   (rule 370)

    ',' 	shift, and go to state 465
    ')' 	shift, and go to state 466



state 395

    assignment_list  ->  assignment_list_element .   (rule 371)

    $default	reduce using rule 371 (assignment_list)



state 396

    non_empty_array_pair_list  ->  '&' w_variable .   (rule 385)

    $default	reduce using rule 385 (non_empty_array_pair_list)



state 397

    w_variable  ->  variable . @55   (rule 331)

    $default	reduce using rule 330 (@55)

    @55 	go to state 467



state 398

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW . expr   (rule 380)
    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW . '&' w_variable   (rule 384)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 468
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 469
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 399

    expr_without_variable  ->  T_ARRAY '(' array_pair_list ')' .   (rule 271)

    $default	reduce using rule 271 (expr_without_variable)



state 400

    possible_comma  ->  ',' .   (rule 322)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW expr   (rule 378)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr   (rule 379)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW '&' w_variable   (rule 382)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . '&' w_variable   (rule 383)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 470
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 322 (possible_comma)

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 471
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 401

    array_pair_list  ->  non_empty_array_pair_list possible_comma .   (rule 377)

    $default	reduce using rule 377 (array_pair_list)



state 402

    encaps_var  ->  T_VARIABLE '[' . @63 encaps_var_offset ']'   (rule 400)

    $default	reduce using rule 399 (@63)

    @63 	go to state 472



state 403

    encaps_var  ->  T_VARIABLE T_OBJECT_OPERATOR . T_STRING   (rule 401)

    T_STRING	shift, and go to state 473



state 404

    scalar  ->  T_STRING_VARNAME .   (rule 313)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}'   (rule 403)

    '[' 	shift, and go to state 474

    $default	reduce using rule 313 (scalar)



state 405

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES expr . '}'   (rule 402)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    '}' 	shift, and go to state 475



state 406

    encaps_var  ->  T_CURLY_OPEN variable . '}'   (rule 404)

    '}' 	shift, and go to state 476



state 407

    inner_statement_list  ->  inner_statement_list @2 inner_statement .   (rule 9)

    $default	reduce using rule 9 (inner_statement_list)



state 408

    inner_statement  ->  statement .   (rule 11)

    $default	reduce using rule 11 (inner_statement)



state 409

    inner_statement  ->  function_declaration_statement .   (rule 12)

    $default	reduce using rule 12 (inner_statement)



state 410

    inner_statement  ->  class_declaration_statement .   (rule 13)

    $default	reduce using rule 13 (inner_statement)



state 411

    compound_variable  ->  '$' '{' expr '}' .   (rule 357)

    $default	reduce using rule 357 (compound_variable)



state 412

    fully_qualified_class_name  ->  T_STRING .   (rule 282)

    $default	reduce using rule 282 (fully_qualified_class_name)



state 413

    extends_from  ->  T_EXTENDS fully_qualified_class_name .   (rule 91)

    $default	reduce using rule 91 (extends_from)



state 414

    unticked_class_declaration_statement  ->  class_entry_type T_STRING extends_from @29 . implements_list '{' class_statement_list '}'   (rule 84)

    T_IMPLEMENTS	shift, and go to state 477

    $default	reduce using rule 95 (implements_list)

    implements_list	go to state 478



state 415

    interface_extends_list  ->  T_EXTENDS . interface_list   (rule 94)

    T_STRING	shift, and go to state 412

    interface_list	go to state 479
    fully_qualified_class_name	go to state 480



state 416

    unticked_class_declaration_statement  ->  interface_entry T_STRING @30 interface_extends_list . '{' class_statement_list '}'   (rule 86)

    '{' 	shift, and go to state 481



state 417

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . @50 function_call_parameter_list ')'   (rule 277)

    $default	reduce using rule 276 (@50)

    @50 	go to state 482



state 418

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' . @51 function_call_parameter_list ')'   (rule 279)

    $default	reduce using rule 278 (@51)

    @51 	go to state 483



state 419

    variable_without_objects  ->  simple_indirect_reference reference_variable .   (rule 346)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 353)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 354)

    '[' 	shift, and go to state 223
    '{' 	shift, and go to state 224

    $default	reduce using rule 346 (variable_without_objects)



state 420

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr T_LOGICAL_OR @44 expr .   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 227 (expr_without_variable)



state 421

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr T_LOGICAL_AND @45 expr .   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 229 (expr_without_variable)



state 422

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  expr '?' @46 expr . ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    ':' 	shift, and go to state 484
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204



state 423

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr T_BOOLEAN_OR @42 expr .   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 223 (expr_without_variable)



state 424

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr T_BOOLEAN_AND @43 expr .   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 225 (expr_without_variable)



state 425

    expr_without_variable  ->  variable '=' '&' T_NEW . class_name_reference @40 ctor_arguments   (rule 203)

    T_STRING	shift, and go to state 122
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    fully_qualified_class_name	go to state 123
    class_name_reference	go to state 485
    dynamic_class_name_reference	go to state 125
    static_member	go to state 91
    base_variable	go to state 126
    reference_variable	go to state 127
    compound_variable	go to state 95
    simple_indirect_reference	go to state 128



state 426

    expr_without_variable  ->  variable '=' '&' variable .   (rule 201)

    $default	reduce using rule 201 (expr_without_variable)



state 427

    function_call  ->  variable_without_objects '(' @52 function_call_parameter_list . ')'   (rule 281)

    ')' 	shift, and go to state 486



state 428

    variable_name  ->  T_STRING .   (rule 366)

    $default	reduce using rule 366 (variable_name)



state 429

    variable_name  ->  '{' . expr '}'   (rule 367)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 487
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 430

    object_property  ->  variable_without_objects . @61   (rule 362)

    $default	reduce using rule 361 (@61)

    @61 	go to state 488



state 431

    variable  ->  base_variable_with_function_calls T_OBJECT_OPERATOR @57 object_property . @58 method_or_not variable_properties   (rule 336)

    $default	reduce using rule 335 (@58)

    @58 	go to state 489



state 432

    object_property  ->  object_dim_list .   (rule 360)
    object_dim_list  ->  object_dim_list . '[' dim_offset ']'   (rule 363)
    object_dim_list  ->  object_dim_list . '{' expr '}'   (rule 364)

    '[' 	shift, and go to state 490
    '{' 	shift, and go to state 491

    $default	reduce using rule 360 (object_property)



state 433

    object_dim_list  ->  variable_name .   (rule 365)

    $default	reduce using rule 365 (object_dim_list)



state 434

    reference_variable  ->  reference_variable '[' dim_offset ']' .   (rule 353)

    $default	reduce using rule 353 (reference_variable)



state 435

    reference_variable  ->  reference_variable '{' expr '}' .   (rule 354)

    $default	reduce using rule 354 (reference_variable)



state 436

    ctor_arguments  ->  '(' function_call_parameter_list . ')'   (rule 296)

    ')' 	shift, and go to state 492



state 437

    dynamic_class_name_reference  ->  base_variable T_OBJECT_OPERATOR @53 object_property . @54 dynamic_class_name_variable_properties   (rule 287)

    $default	reduce using rule 286 (@54)

    @54 	go to state 493



state 438

    unticked_statement  ->  T_IF '(' expr ')' ':' . @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 21)

    $default	reduce using rule 19 (@5)

    @5  	go to state 494



state 439

    unticked_statement  ->  T_IF '(' expr ')' @3 . statement @4 elseif_list else_single   (rule 18)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    statement	go to state 495
    unticked_statement	go to state 74
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 440

    non_empty_function_call_parameter_list  ->  '&' w_variable .   (rule 150)

    $default	reduce using rule 150 (non_empty_function_call_parameter_list)



state 441

    function_call  ->  T_STRING '(' @49 function_call_parameter_list ')' .   (rule 275)

    $default	reduce using rule 275 (function_call)



state 442

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . expr_without_variable   (rule 151)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . variable   (rule 152)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . '&' w_variable   (rule 153)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 496
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 497
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 149
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 498
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 443

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' . @10 expr ')' ';'   (rule 27)

    $default	reduce using rule 26 (@10)

    @10 	go to state 499



state 444

    unticked_statement  ->  T_WHILE '(' @7 expr ')' . @8 while_statement   (rule 24)

    $default	reduce using rule 23 (@8)

    @8  	go to state 500



state 445

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 . for_expr ';' @12 for_expr ')' @13 for_statement   (rule 31)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 193 (for_expr)

    for_expr	go to state 501
    non_empty_for_expr	go to state 243
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 244
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 446

    non_empty_for_expr  ->  non_empty_for_expr ',' @38 . expr   (rule 196)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 502
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 447

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 . w_variable foreach_optional_arg ')' @18 foreach_statement   (rule 53)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    w_variable	go to state 503
    variable	go to state 397
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 448

    unticked_statement  ->  T_FOREACH '(' variable T_AS @15 . foreach_variable foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    '&' 	shift, and go to state 504
    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    foreach_variable	go to state 505
    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    w_variable	go to state 506
    variable	go to state 397
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 449

    declare_list  ->  T_STRING '=' . static_scalar   (rule 109)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 507
    static_class_constant	go to state 385



state 450

    declare_list  ->  declare_list ',' . T_STRING '=' static_scalar   (rule 110)

    T_STRING	shift, and go to state 508



state 451

    unticked_statement  ->  T_DECLARE @19 '(' declare_list ')' . declare_statement   (rule 55)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 509
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    statement	go to state 510
    unticked_statement	go to state 74
    declare_statement	go to state 511
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 452

    unticked_statement  ->  T_SWITCH '(' expr ')' @14 . switch_case_list   (rule 33)

    ':' 	shift, and go to state 512
    '{' 	shift, and go to state 513

    switch_case_list	go to state 514



state 453

    unticked_function_declaration_statement  ->  T_FUNCTION @27 is_reference T_STRING @28 . '(' parameter_list ')' '{' inner_statement_list '}'   (rule 82)

    '(' 	shift, and go to state 515



state 454

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' . T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    T_CATCH	shift, and go to state 516



state 455

    global_var  ->  '$' '{' expr '}' .   (rule 158)

    $default	reduce using rule 158 (global_var)



state 456

    static_scalar  ->  '+' static_scalar .   (rule 307)

    $default	reduce using rule 307 (static_scalar)



state 457

    static_scalar  ->  '-' static_scalar .   (rule 308)

    $default	reduce using rule 308 (static_scalar)



state 458

    static_class_constant  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM . T_STRING   (rule 311)

    T_STRING	shift, and go to state 517



state 459

    static_scalar  ->  T_ARRAY '(' . static_array_pair_list ')'   (rule 309)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    $default	reduce using rule 319 (static_array_pair_list)

    common_scalar	go to state 383
    static_scalar	go to state 518
    static_class_constant	go to state 385
    static_array_pair_list	go to state 519
    non_empty_static_array_pair_list	go to state 520



state 460

    static_var_list  ->  static_var_list ',' T_VARIABLE '=' . static_scalar   (rule 160)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 521
    static_class_constant	go to state 385



state 461

    unset_variables  ->  unset_variables ',' unset_variable .   (rule 72)

    $default	reduce using rule 72 (unset_variables)



state 462

    unticked_statement  ->  T_UNSET '(' unset_variables ')' ';' .   (rule 47)

    $default	reduce using rule 47 (unticked_statement)



state 463

    isset_variables  ->  isset_variables ',' @64 . variable   (rule 417)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    variable	go to state 522
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 464

    assignment_list_element  ->  T_LIST '(' . @62 assignment_list ')'   (rule 374)

    $default	reduce using rule 373 (@62)

    @62 	go to state 523



state 465

    assignment_list  ->  assignment_list ',' . assignment_list_element   (rule 370)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    T_LIST	shift, and go to state 392
    '$' 	shift, and go to state 68

    $default	reduce using rule 375 (assignment_list_element)

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    variable	go to state 393
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    assignment_list_element	go to state 524



state 466

    expr_without_variable  ->  T_LIST '(' @39 assignment_list ')' . '=' expr   (rule 199)

    '=' 	shift, and go to state 525



state 467

    w_variable  ->  variable @55 .   (rule 331)

    $default	reduce using rule 331 (w_variable)



state 468

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW '&' . w_variable   (rule 384)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    w_variable	go to state 526
    variable	go to state 397
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 469

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW expr .   (rule 380)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 380 (non_empty_array_pair_list)



state 470

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' '&' . w_variable   (rule 383)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    w_variable	go to state 527
    variable	go to state 397
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 471

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW expr   (rule 378)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr .   (rule 379)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW '&' w_variable   (rule 382)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    T_DOUBLE_ARROW	shift, and go to state 528

    $default	reduce using rule 379 (non_empty_array_pair_list)



state 472

    encaps_var  ->  T_VARIABLE '[' @63 . encaps_var_offset ']'   (rule 400)

    T_STRING	shift, and go to state 529
    T_VARIABLE	shift, and go to state 530
    T_NUM_STRING	shift, and go to state 531

    encaps_var_offset	go to state 532



state 473

    encaps_var  ->  T_VARIABLE T_OBJECT_OPERATOR T_STRING .   (rule 401)

    $default	reduce using rule 401 (encaps_var)



state 474

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}'   (rule 403)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 533
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 475

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES expr '}' .   (rule 402)

    $default	reduce using rule 402 (encaps_var)



state 476

    encaps_var  ->  T_CURLY_OPEN variable '}' .   (rule 404)

    $default	reduce using rule 404 (encaps_var)



state 477

    implements_list  ->  T_IMPLEMENTS . interface_list   (rule 96)

    T_STRING	shift, and go to state 412

    interface_list	go to state 534
    fully_qualified_class_name	go to state 480



state 478

    unticked_class_declaration_statement  ->  class_entry_type T_STRING extends_from @29 implements_list . '{' class_statement_list '}'   (rule 84)

    '{' 	shift, and go to state 535



state 479

    interface_extends_list  ->  T_EXTENDS interface_list .   (rule 94)
    interface_list  ->  interface_list . ',' fully_qualified_class_name   (rule 98)

    ',' 	shift, and go to state 536

    $default	reduce using rule 94 (interface_extends_list)



state 480

    interface_list  ->  fully_qualified_class_name .   (rule 97)

    $default	reduce using rule 97 (interface_list)



state 481

    unticked_class_declaration_statement  ->  interface_entry T_STRING @30 interface_extends_list '{' . class_statement_list '}'   (rule 86)

    $default	reduce using rule 164 (class_statement_list)

    class_statement_list	go to state 537



state 482

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @50 . function_call_parameter_list ')'   (rule 277)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 359
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 147 (function_call_parameter_list)

    function_call_parameter_list	go to state 538
    non_empty_function_call_parameter_list	go to state 361
    expr_without_variable	go to state 362
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 149
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 363
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 483

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @51 . function_call_parameter_list ')'   (rule 279)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 359
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 147 (function_call_parameter_list)

    function_call_parameter_list	go to state 539
    non_empty_function_call_parameter_list	go to state 361
    expr_without_variable	go to state 362
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 149
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 363
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 484

    expr_without_variable  ->  expr '?' @46 expr ':' . @47 expr   (rule 258)

    $default	reduce using rule 257 (@47)

    @47 	go to state 540



state 485

    expr_without_variable  ->  variable '=' '&' T_NEW class_name_reference . @40 ctor_arguments   (rule 203)

    $default	reduce using rule 202 (@40)

    @40 	go to state 541



state 486

    function_call  ->  variable_without_objects '(' @52 function_call_parameter_list ')' .   (rule 281)

    $default	reduce using rule 281 (function_call)



state 487

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    variable_name  ->  '{' expr . '}'   (rule 367)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    '}' 	shift, and go to state 542



state 488

    object_property  ->  variable_without_objects @61 .   (rule 362)

    $default	reduce using rule 362 (object_property)



state 489

    variable  ->  base_variable_with_function_calls T_OBJECT_OPERATOR @57 object_property @58 . method_or_not variable_properties   (rule 336)

    '(' 	shift, and go to state 543

    $default	reduce using rule 344 (method_or_not)

    method_or_not	go to state 544



state 490

    object_dim_list  ->  object_dim_list '[' . dim_offset ']'   (rule 363)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 358 (dim_offset)

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 348
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    dim_offset	go to state 545
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 491

    object_dim_list  ->  object_dim_list '{' . expr '}'   (rule 364)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 546
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 492

    ctor_arguments  ->  '(' function_call_parameter_list ')' .   (rule 296)

    $default	reduce using rule 296 (ctor_arguments)



state 493

    dynamic_class_name_reference  ->  base_variable T_OBJECT_OPERATOR @53 object_property @54 . dynamic_class_name_variable_properties   (rule 287)

    $default	reduce using rule 290 (dynamic_class_name_variable_properties)

    dynamic_class_name_variable_properties	go to state 547



state 494

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 . inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 21)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 548



state 495

    unticked_statement  ->  T_IF '(' expr ')' @3 statement . @4 elseif_list else_single   (rule 18)

    $default	reduce using rule 17 (@4)

    @4  	go to state 549



state 496

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' '&' . w_variable   (rule 153)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    w_variable	go to state 550
    variable	go to state 397
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 497

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' expr_without_variable .   (rule 151)
    expr  ->  expr_without_variable .   (rule 328)

    ',' 	reduce using rule 151 (non_empty_function_call_parameter_list)
    ')' 	reduce using rule 151 (non_empty_function_call_parameter_list)
    $default	reduce using rule 328 (expr)


state 498

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' variable .   (rule 152)
    expr_without_variable  ->  variable . '=' expr   (rule 200)
    expr_without_variable  ->  variable . '=' '&' variable   (rule 201)
    expr_without_variable  ->  variable . '=' '&' T_NEW class_name_reference @40 ctor_arguments   (rule 203)
    expr_without_variable  ->  variable . T_PLUS_EQUAL expr   (rule 207)
    expr_without_variable  ->  variable . T_MINUS_EQUAL expr   (rule 208)
    expr_without_variable  ->  variable . T_MUL_EQUAL expr   (rule 209)
    expr_without_variable  ->  variable . T_DIV_EQUAL expr   (rule 210)
    expr_without_variable  ->  variable . T_CONCAT_EQUAL expr   (rule 211)
    expr_without_variable  ->  variable . T_MOD_EQUAL expr   (rule 212)
    expr_without_variable  ->  variable . T_AND_EQUAL expr   (rule 213)
    expr_without_variable  ->  variable . T_OR_EQUAL expr   (rule 214)
    expr_without_variable  ->  variable . T_XOR_EQUAL expr   (rule 215)
    expr_without_variable  ->  variable . T_SL_EQUAL expr   (rule 216)
    expr_without_variable  ->  variable . T_SR_EQUAL expr   (rule 217)
    r_variable  ->  variable .   (rule 329)
    rw_variable  ->  variable . @56   (rule 333)

    '=' 	shift, and go to state 208
    T_PLUS_EQUAL	shift, and go to state 209
    T_MINUS_EQUAL	shift, and go to state 210
    T_MUL_EQUAL	shift, and go to state 211
    T_DIV_EQUAL	shift, and go to state 212
    T_CONCAT_EQUAL	shift, and go to state 213
    T_MOD_EQUAL	shift, and go to state 214
    T_AND_EQUAL	shift, and go to state 215
    T_OR_EQUAL	shift, and go to state 216
    T_XOR_EQUAL	shift, and go to state 217
    T_SL_EQUAL	shift, and go to state 218
    T_SR_EQUAL	shift, and go to state 219

    ',' 	reduce using rule 152 (non_empty_function_call_parameter_list)
    T_INC	reduce using rule 332 (@56)
    T_DEC	reduce using rule 332 (@56)
    ')' 	reduce using rule 152 (non_empty_function_call_parameter_list)
    $default	reduce using rule 329 (r_variable)
    @56 	go to state 220



state 499

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 . expr ')' ';'   (rule 27)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 551
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 500

    unticked_statement  ->  T_WHILE '(' @7 expr ')' @8 . while_statement   (rule 24)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 552
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    statement	go to state 553
    unticked_statement	go to state 74
    while_statement	go to state 554
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 501

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr . ';' @12 for_expr ')' @13 for_statement   (rule 31)

    ';' 	shift, and go to state 555



state 502

    non_empty_for_expr  ->  non_empty_for_expr ',' @38 expr .   (rule 196)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 196 (non_empty_for_expr)



state 503

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_variable . foreach_optional_arg ')' @18 foreach_statement   (rule 53)

    T_DOUBLE_ARROW	shift, and go to state 556

    $default	reduce using rule 99 (foreach_optional_arg)

    foreach_optional_arg	go to state 557



state 504

    foreach_variable  ->  '&' . w_variable   (rule 102)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    w_variable	go to state 558
    variable	go to state 397
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 505

    unticked_statement  ->  T_FOREACH '(' variable T_AS @15 foreach_variable . foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    T_DOUBLE_ARROW	shift, and go to state 556

    $default	reduce using rule 99 (foreach_optional_arg)

    foreach_optional_arg	go to state 559



state 506

    foreach_variable  ->  w_variable .   (rule 101)

    $default	reduce using rule 101 (foreach_variable)



state 507

    declare_list  ->  T_STRING '=' static_scalar .   (rule 109)

    $default	reduce using rule 109 (declare_list)



state 508

    declare_list  ->  declare_list ',' T_STRING . '=' static_scalar   (rule 110)

    '=' 	shift, and go to state 560



state 509

    declare_statement  ->  ':' . inner_statement_list T_ENDDECLARE ';'   (rule 108)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 561



state 510

    declare_statement  ->  statement .   (rule 107)

    $default	reduce using rule 107 (declare_statement)



state 511

    unticked_statement  ->  T_DECLARE @19 '(' declare_list ')' declare_statement .   (rule 55)

    $default	reduce using rule 55 (unticked_statement)



state 512

    switch_case_list  ->  ':' . case_list T_ENDSWITCH ';'   (rule 113)
    switch_case_list  ->  ':' . ';' case_list T_ENDSWITCH ';'   (rule 114)

    ';' 	shift, and go to state 562

    $default	reduce using rule 115 (case_list)

    case_list	go to state 563



state 513

    switch_case_list  ->  '{' . case_list '}'   (rule 111)
    switch_case_list  ->  '{' . ';' case_list '}'   (rule 112)

    ';' 	shift, and go to state 564

    $default	reduce using rule 115 (case_list)

    case_list	go to state 565



state 514

    unticked_statement  ->  T_SWITCH '(' expr ')' @14 switch_case_list .   (rule 33)

    $default	reduce using rule 33 (unticked_statement)



state 515

    unticked_function_declaration_statement  ->  T_FUNCTION @27 is_reference T_STRING @28 '(' . parameter_list ')' '{' inner_statement_list '}'   (rule 82)

    T_STRING	shift, and go to state 566

    ')' 	reduce using rule 135 (parameter_list)
    $default	reduce using rule 144 (optional_class_type)
    parameter_list	go to state 567
    non_empty_parameter_list	go to state 568
    optional_class_type	go to state 569



state 516

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH . '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    '(' 	shift, and go to state 570



state 517

    static_class_constant  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING .   (rule 311)

    $default	reduce using rule 311 (static_class_constant)



state 518

    non_empty_static_array_pair_list  ->  static_scalar . T_DOUBLE_ARROW static_scalar   (rule 325)
    non_empty_static_array_pair_list  ->  static_scalar .   (rule 326)

    T_DOUBLE_ARROW	shift, and go to state 571

    $default	reduce using rule 326 (non_empty_static_array_pair_list)



state 519

    static_scalar  ->  T_ARRAY '(' static_array_pair_list . ')'   (rule 309)

    ')' 	shift, and go to state 572



state 520

    static_array_pair_list  ->  non_empty_static_array_pair_list . possible_comma   (rule 320)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list . ',' static_scalar T_DOUBLE_ARROW static_scalar   (rule 323)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list . ',' static_scalar   (rule 324)

    ',' 	shift, and go to state 573

    $default	reduce using rule 321 (possible_comma)

    possible_comma	go to state 574



state 521

    static_var_list  ->  static_var_list ',' T_VARIABLE '=' static_scalar .   (rule 160)

    $default	reduce using rule 160 (static_var_list)



state 522

    isset_variables  ->  isset_variables ',' @64 variable .   (rule 417)

    $default	reduce using rule 417 (isset_variables)



state 523

    assignment_list_element  ->  T_LIST '(' @62 . assignment_list ')'   (rule 374)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    T_LIST	shift, and go to state 392
    '$' 	shift, and go to state 68

    $default	reduce using rule 375 (assignment_list_element)

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    variable	go to state 393
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    assignment_list	go to state 575
    assignment_list_element	go to state 395



state 524

    assignment_list  ->  assignment_list ',' assignment_list_element .   (rule 370)

    $default	reduce using rule 370 (assignment_list)



state 525

    expr_without_variable  ->  T_LIST '(' @39 assignment_list ')' '=' . expr   (rule 199)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 576
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 526

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW '&' w_variable .   (rule 384)

    $default	reduce using rule 384 (non_empty_array_pair_list)



state 527

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' '&' w_variable .   (rule 383)

    $default	reduce using rule 383 (non_empty_array_pair_list)



state 528

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . expr   (rule 378)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . '&' w_variable   (rule 382)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 577
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 578
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 529

    encaps_var_offset  ->  T_STRING .   (rule 405)

    $default	reduce using rule 405 (encaps_var_offset)



state 530

    encaps_var_offset  ->  T_VARIABLE .   (rule 407)

    $default	reduce using rule 407 (encaps_var_offset)



state 531

    encaps_var_offset  ->  T_NUM_STRING .   (rule 406)

    $default	reduce using rule 406 (encaps_var_offset)



state 532

    encaps_var  ->  T_VARIABLE '[' @63 encaps_var_offset . ']'   (rule 400)

    ']' 	shift, and go to state 579



state 533

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}'   (rule 403)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ']' 	shift, and go to state 580



state 534

    implements_list  ->  T_IMPLEMENTS interface_list .   (rule 96)
    interface_list  ->  interface_list . ',' fully_qualified_class_name   (rule 98)

    ',' 	shift, and go to state 536

    $default	reduce using rule 96 (implements_list)



state 535

    unticked_class_declaration_statement  ->  class_entry_type T_STRING extends_from @29 implements_list '{' . class_statement_list '}'   (rule 84)

    $default	reduce using rule 164 (class_statement_list)

    class_statement_list	go to state 581



state 536

    interface_list  ->  interface_list ',' . fully_qualified_class_name   (rule 98)

    T_STRING	shift, and go to state 412

    fully_qualified_class_name	go to state 582



state 537

    unticked_class_declaration_statement  ->  interface_entry T_STRING @30 interface_extends_list '{' class_statement_list . '}'   (rule 86)
    class_statement_list  ->  class_statement_list . class_statement   (rule 163)

    T_CONST	shift, and go to state 583
    T_STATIC	shift, and go to state 584
    T_ABSTRACT	shift, and go to state 585
    T_FINAL	shift, and go to state 586
    T_PRIVATE	shift, and go to state 587
    T_PROTECTED	shift, and go to state 588
    T_PUBLIC	shift, and go to state 589
    T_VAR	shift, and go to state 590
    '}' 	shift, and go to state 591

    $default	reduce using rule 175 (method_modifiers)

    class_statement	go to state 592
    variable_modifiers	go to state 593
    method_modifiers	go to state 594
    non_empty_member_modifiers	go to state 595
    member_modifier	go to state 596
    class_constant_declaration	go to state 597



state 538

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @50 function_call_parameter_list . ')'   (rule 277)

    ')' 	shift, and go to state 598



state 539

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @51 function_call_parameter_list . ')'   (rule 279)

    ')' 	shift, and go to state 599



state 540

    expr_without_variable  ->  expr '?' @46 expr ':' @47 . expr   (rule 258)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 600
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 541

    expr_without_variable  ->  variable '=' '&' T_NEW class_name_reference @40 . ctor_arguments   (rule 203)

    '(' 	shift, and go to state 354

    $default	reduce using rule 295 (ctor_arguments)

    ctor_arguments	go to state 601



state 542

    variable_name  ->  '{' expr '}' .   (rule 367)

    $default	reduce using rule 367 (variable_name)



state 543

    method_or_not  ->  '(' . @60 function_call_parameter_list ')'   (rule 343)

    $default	reduce using rule 342 (@60)

    @60 	go to state 602



state 544

    variable  ->  base_variable_with_function_calls T_OBJECT_OPERATOR @57 object_property @58 method_or_not . variable_properties   (rule 336)

    $default	reduce using rule 339 (variable_properties)

    variable_properties	go to state 603



state 545

    object_dim_list  ->  object_dim_list '[' dim_offset . ']'   (rule 363)

    ']' 	shift, and go to state 604



state 546

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    object_dim_list  ->  object_dim_list '{' expr . '}'   (rule 364)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    '}' 	shift, and go to state 605



state 547

    dynamic_class_name_reference  ->  base_variable T_OBJECT_OPERATOR @53 object_property @54 dynamic_class_name_variable_properties .   (rule 287)
    dynamic_class_name_variable_properties  ->  dynamic_class_name_variable_properties . dynamic_class_name_variable_property   (rule 289)

    T_OBJECT_OPERATOR	shift, and go to state 606

    $default	reduce using rule 287 (dynamic_class_name_reference)

    dynamic_class_name_variable_property	go to state 607



state 548

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list . @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 21)

    T_ELSEIF	reduce using rule 20 (@6)
    T_ELSE	reduce using rule 20 (@6)
    T_ENDIF	reduce using rule 20 (@6)
    $default	reduce using rule 8 (@2)
    @2  	go to state 294
    @6  	go to state 608



state 549

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 . elseif_list else_single   (rule 18)

    $default	reduce using rule 124 (elseif_list)

    elseif_list	go to state 609



state 550

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' '&' w_variable .   (rule 153)

    $default	reduce using rule 153 (non_empty_function_call_parameter_list)



state 551

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr . ')' ';'   (rule 27)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ')' 	shift, and go to state 610



state 552

    while_statement  ->  ':' . inner_statement_list T_ENDWHILE ';'   (rule 123)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 611



state 553

    while_statement  ->  statement .   (rule 122)

    $default	reduce using rule 122 (while_statement)



state 554

    unticked_statement  ->  T_WHILE '(' @7 expr ')' @8 while_statement .   (rule 24)

    $default	reduce using rule 24 (unticked_statement)



state 555

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' . @12 for_expr ')' @13 for_statement   (rule 31)

    $default	reduce using rule 29 (@12)

    @12 	go to state 612



state 556

    foreach_optional_arg  ->  T_DOUBLE_ARROW . foreach_variable   (rule 100)

    '&' 	shift, and go to state 504
    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    foreach_variable	go to state 613
    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    w_variable	go to state 506
    variable	go to state 397
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 557

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_variable foreach_optional_arg . ')' @18 foreach_statement   (rule 53)

    ')' 	shift, and go to state 614



state 558

    foreach_variable  ->  '&' w_variable .   (rule 102)

    $default	reduce using rule 102 (foreach_variable)



state 559

    unticked_statement  ->  T_FOREACH '(' variable T_AS @15 foreach_variable foreach_optional_arg . ')' @16 foreach_statement   (rule 50)

    ')' 	shift, and go to state 615



state 560

    declare_list  ->  declare_list ',' T_STRING '=' . static_scalar   (rule 110)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 616
    static_class_constant	go to state 385



state 561

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    declare_statement  ->  ':' inner_statement_list . T_ENDDECLARE ';'   (rule 108)

    T_ENDDECLARE	shift, and go to state 617

    $default	reduce using rule 8 (@2)

    @2  	go to state 294



state 562

    switch_case_list  ->  ':' ';' . case_list T_ENDSWITCH ';'   (rule 114)

    $default	reduce using rule 115 (case_list)

    case_list	go to state 618



state 563

    switch_case_list  ->  ':' case_list . T_ENDSWITCH ';'   (rule 113)
    case_list  ->  case_list . T_CASE expr case_separator @31 inner_statement_list   (rule 117)
    case_list  ->  case_list . T_DEFAULT case_separator @32 inner_statement_list   (rule 119)

    T_ENDSWITCH	shift, and go to state 619
    T_CASE	shift, and go to state 620
    T_DEFAULT	shift, and go to state 621



state 564

    switch_case_list  ->  '{' ';' . case_list '}'   (rule 112)

    $default	reduce using rule 115 (case_list)

    case_list	go to state 622



state 565

    switch_case_list  ->  '{' case_list . '}'   (rule 111)
    case_list  ->  case_list . T_CASE expr case_separator @31 inner_statement_list   (rule 117)
    case_list  ->  case_list . T_DEFAULT case_separator @32 inner_statement_list   (rule 119)

    T_CASE	shift, and go to state 620
    T_DEFAULT	shift, and go to state 621
    '}' 	shift, and go to state 623



state 566

    optional_class_type  ->  T_STRING .   (rule 145)

    $default	reduce using rule 145 (optional_class_type)



state 567

    unticked_function_declaration_statement  ->  T_FUNCTION @27 is_reference T_STRING @28 '(' parameter_list . ')' '{' inner_statement_list '}'   (rule 82)

    ')' 	shift, and go to state 624



state 568

    parameter_list  ->  non_empty_parameter_list .   (rule 134)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' optional_class_type T_VARIABLE   (rule 140)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' optional_class_type '&' T_VARIABLE   (rule 141)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' optional_class_type '&' T_VARIABLE '=' static_scalar   (rule 142)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' optional_class_type T_VARIABLE '=' static_scalar   (rule 143)

    ',' 	shift, and go to state 625

    $default	reduce using rule 134 (parameter_list)



state 569

    non_empty_parameter_list  ->  optional_class_type . T_VARIABLE   (rule 136)
    non_empty_parameter_list  ->  optional_class_type . '&' T_VARIABLE   (rule 137)
    non_empty_parameter_list  ->  optional_class_type . '&' T_VARIABLE '=' static_scalar   (rule 138)
    non_empty_parameter_list  ->  optional_class_type . T_VARIABLE '=' static_scalar   (rule 139)

    '&' 	shift, and go to state 626
    T_VARIABLE	shift, and go to state 627



state 570

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' . @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    $default	reduce using rule 58 (@21)

    @21 	go to state 628



state 571

    non_empty_static_array_pair_list  ->  static_scalar T_DOUBLE_ARROW . static_scalar   (rule 325)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 629
    static_class_constant	go to state 385



state 572

    static_scalar  ->  T_ARRAY '(' static_array_pair_list ')' .   (rule 309)

    $default	reduce using rule 309 (static_scalar)



state 573

    possible_comma  ->  ',' .   (rule 322)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' . static_scalar T_DOUBLE_ARROW static_scalar   (rule 323)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' . static_scalar   (rule 324)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    $default	reduce using rule 322 (possible_comma)

    common_scalar	go to state 383
    static_scalar	go to state 630
    static_class_constant	go to state 385



state 574

    static_array_pair_list  ->  non_empty_static_array_pair_list possible_comma .   (rule 320)

    $default	reduce using rule 320 (static_array_pair_list)



state 575

    assignment_list  ->  assignment_list . ',' assignment_list_element   (rule 370)
    assignment_list_element  ->  T_LIST '(' @62 assignment_list . ')'   (rule 374)

    ',' 	shift, and go to state 465
    ')' 	shift, and go to state 631



state 576

    expr_without_variable  ->  T_LIST '(' @39 assignment_list ')' '=' expr .   (rule 199)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 199 (expr_without_variable)



state 577

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' . w_variable   (rule 382)

    T_STRING	shift, and go to state 109
    T_VARIABLE	shift, and go to state 31
    '$' 	shift, and go to state 68

    function_call	go to state 82
    fully_qualified_class_name	go to state 110
    w_variable	go to state 632
    variable	go to state 397
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96



state 578

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr .   (rule 378)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 378 (non_empty_array_pair_list)



state 579

    encaps_var  ->  T_VARIABLE '[' @63 encaps_var_offset ']' .   (rule 400)

    $default	reduce using rule 400 (encaps_var)



state 580

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}'   (rule 403)

    '}' 	shift, and go to state 633



state 581

    unticked_class_declaration_statement  ->  class_entry_type T_STRING extends_from @29 implements_list '{' class_statement_list . '}'   (rule 84)
    class_statement_list  ->  class_statement_list . class_statement   (rule 163)

    T_CONST	shift, and go to state 583
    T_STATIC	shift, and go to state 584
    T_ABSTRACT	shift, and go to state 585
    T_FINAL	shift, and go to state 586
    T_PRIVATE	shift, and go to state 587
    T_PROTECTED	shift, and go to state 588
    T_PUBLIC	shift, and go to state 589
    T_VAR	shift, and go to state 590
    '}' 	shift, and go to state 634

    $default	reduce using rule 175 (method_modifiers)

    class_statement	go to state 592
    variable_modifiers	go to state 593
    method_modifiers	go to state 594
    non_empty_member_modifiers	go to state 595
    member_modifier	go to state 596
    class_constant_declaration	go to state 597



state 582

    interface_list  ->  interface_list ',' fully_qualified_class_name .   (rule 98)

    $default	reduce using rule 98 (interface_list)



state 583

    class_constant_declaration  ->  T_CONST . T_STRING '=' static_scalar   (rule 190)

    T_STRING	shift, and go to state 635



state 584

    member_modifier  ->  T_STATIC .   (rule 182)

    $default	reduce using rule 182 (member_modifier)



state 585

    member_modifier  ->  T_ABSTRACT .   (rule 183)

    $default	reduce using rule 183 (member_modifier)



state 586

    member_modifier  ->  T_FINAL .   (rule 184)

    $default	reduce using rule 184 (member_modifier)



state 587

    member_modifier  ->  T_PRIVATE .   (rule 181)

    $default	reduce using rule 181 (member_modifier)



state 588

    member_modifier  ->  T_PROTECTED .   (rule 180)

    $default	reduce using rule 180 (member_modifier)



state 589

    member_modifier  ->  T_PUBLIC .   (rule 179)

    $default	reduce using rule 179 (member_modifier)



state 590

    variable_modifiers  ->  T_VAR .   (rule 174)

    $default	reduce using rule 174 (variable_modifiers)



state 591

    unticked_class_declaration_statement  ->  interface_entry T_STRING @30 interface_extends_list '{' class_statement_list '}' .   (rule 86)

    $default	reduce using rule 86 (unticked_class_declaration_statement)



state 592

    class_statement_list  ->  class_statement_list class_statement .   (rule 163)

    $default	reduce using rule 163 (class_statement_list)



state 593

    class_statement  ->  variable_modifiers . @35 class_variable_declaration ';'   (rule 166)

    $default	reduce using rule 165 (@35)

    @35 	go to state 636



state 594

    class_statement  ->  method_modifiers . T_FUNCTION @36 is_reference T_STRING @37 '(' parameter_list ')' method_body   (rule 170)

    T_FUNCTION	shift, and go to state 637



state 595

    variable_modifiers  ->  non_empty_member_modifiers .   (rule 173)
    method_modifiers  ->  non_empty_member_modifiers .   (rule 176)
    non_empty_member_modifiers  ->  non_empty_member_modifiers . member_modifier   (rule 178)

    T_STATIC	shift, and go to state 584
    T_ABSTRACT	shift, and go to state 585
    T_FINAL	shift, and go to state 586
    T_PRIVATE	shift, and go to state 587
    T_PROTECTED	shift, and go to state 588
    T_PUBLIC	shift, and go to state 589

    T_FUNCTION	reduce using rule 176 (method_modifiers)
    $default	reduce using rule 173 (variable_modifiers)
    member_modifier	go to state 638



state 596

    non_empty_member_modifiers  ->  member_modifier .   (rule 177)

    $default	reduce using rule 177 (non_empty_member_modifiers)



state 597

    class_statement  ->  class_constant_declaration . ';'   (rule 167)
    class_constant_declaration  ->  class_constant_declaration . ',' T_STRING '=' static_scalar   (rule 189)

    ',' 	shift, and go to state 639
    ';' 	shift, and go to state 640



state 598

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @50 function_call_parameter_list ')' .   (rule 277)

    $default	reduce using rule 277 (function_call)



state 599

    function_call  ->  fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @51 function_call_parameter_list ')' .   (rule 279)

    $default	reduce using rule 279 (function_call)



state 600

    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)
    expr_without_variable  ->  expr '?' @46 expr ':' @47 expr .   (rule 258)

    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204

    $default	reduce using rule 258 (expr_without_variable)



state 601

    expr_without_variable  ->  variable '=' '&' T_NEW class_name_reference @40 ctor_arguments .   (rule 203)

    $default	reduce using rule 203 (expr_without_variable)



state 602

    method_or_not  ->  '(' @60 . function_call_parameter_list ')'   (rule 343)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 359
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 147 (function_call_parameter_list)

    function_call_parameter_list	go to state 641
    non_empty_function_call_parameter_list	go to state 361
    expr_without_variable	go to state 362
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 149
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 363
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 603

    variable  ->  base_variable_with_function_calls T_OBJECT_OPERATOR @57 object_property @58 method_or_not variable_properties .   (rule 336)
    variable_properties  ->  variable_properties . variable_property   (rule 338)

    T_OBJECT_OPERATOR	shift, and go to state 642

    $default	reduce using rule 336 (variable)

    variable_property	go to state 643



state 604

    object_dim_list  ->  object_dim_list '[' dim_offset ']' .   (rule 363)

    $default	reduce using rule 363 (object_dim_list)



state 605

    object_dim_list  ->  object_dim_list '{' expr '}' .   (rule 364)

    $default	reduce using rule 364 (object_dim_list)



state 606

    dynamic_class_name_variable_property  ->  T_OBJECT_OPERATOR . object_property   (rule 291)

    T_STRING	shift, and go to state 428
    T_VARIABLE	shift, and go to state 31
    '{' 	shift, and go to state 429
    '$' 	shift, and go to state 68

    variable_without_objects	go to state 430
    reference_variable	go to state 305
    compound_variable	go to state 95
    object_property	go to state 644
    object_dim_list	go to state 432
    variable_name	go to state 433
    simple_indirect_reference	go to state 306



state 607

    dynamic_class_name_variable_properties  ->  dynamic_class_name_variable_properties dynamic_class_name_variable_property .   (rule 289)

    $default	reduce using rule 289 (dynamic_class_name_variable_properties)



state 608

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 . new_elseif_list new_else_single T_ENDIF ';'   (rule 21)

    $default	reduce using rule 127 (new_elseif_list)

    new_elseif_list	go to state 645



state 609

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 elseif_list . else_single   (rule 18)
    elseif_list  ->  elseif_list . T_ELSEIF '(' expr ')' @33 statement   (rule 126)

    T_ELSEIF	shift, and go to state 646
    T_ELSE	shift, and go to state 647

    T_ELSEIF	[reduce using rule 130 (else_single)]
    T_ELSE	[reduce using rule 130 (else_single)]
    $default	reduce using rule 130 (else_single)

    else_single	go to state 648



state 610

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr ')' . ';'   (rule 27)

    ';' 	shift, and go to state 649



state 611

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    while_statement  ->  ':' inner_statement_list . T_ENDWHILE ';'   (rule 123)

    T_ENDWHILE	shift, and go to state 650

    $default	reduce using rule 8 (@2)

    @2  	go to state 294



state 612

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 . for_expr ')' @13 for_statement   (rule 31)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    $default	reduce using rule 193 (for_expr)

    for_expr	go to state 651
    non_empty_for_expr	go to state 243
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 244
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 613

    foreach_optional_arg  ->  T_DOUBLE_ARROW foreach_variable .   (rule 100)

    $default	reduce using rule 100 (foreach_optional_arg)



state 614

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_variable foreach_optional_arg ')' . @18 foreach_statement   (rule 53)

    $default	reduce using rule 52 (@18)

    @18 	go to state 652



state 615

    unticked_statement  ->  T_FOREACH '(' variable T_AS @15 foreach_variable foreach_optional_arg ')' . @16 foreach_statement   (rule 50)

    $default	reduce using rule 49 (@16)

    @16 	go to state 653



state 616

    declare_list  ->  declare_list ',' T_STRING '=' static_scalar .   (rule 110)

    $default	reduce using rule 110 (declare_list)



state 617

    declare_statement  ->  ':' inner_statement_list T_ENDDECLARE . ';'   (rule 108)

    ';' 	shift, and go to state 654



state 618

    switch_case_list  ->  ':' ';' case_list . T_ENDSWITCH ';'   (rule 114)
    case_list  ->  case_list . T_CASE expr case_separator @31 inner_statement_list   (rule 117)
    case_list  ->  case_list . T_DEFAULT case_separator @32 inner_statement_list   (rule 119)

    T_ENDSWITCH	shift, and go to state 655
    T_CASE	shift, and go to state 620
    T_DEFAULT	shift, and go to state 621



state 619

    switch_case_list  ->  ':' case_list T_ENDSWITCH . ';'   (rule 113)

    ';' 	shift, and go to state 656



state 620

    case_list  ->  case_list T_CASE . expr case_separator @31 inner_statement_list   (rule 117)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 657
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 621

    case_list  ->  case_list T_DEFAULT . case_separator @32 inner_statement_list   (rule 119)

    ':' 	shift, and go to state 658
    ';' 	shift, and go to state 659

    case_separator	go to state 660



state 622

    switch_case_list  ->  '{' ';' case_list . '}'   (rule 112)
    case_list  ->  case_list . T_CASE expr case_separator @31 inner_statement_list   (rule 117)
    case_list  ->  case_list . T_DEFAULT case_separator @32 inner_statement_list   (rule 119)

    T_CASE	shift, and go to state 620
    T_DEFAULT	shift, and go to state 621
    '}' 	shift, and go to state 661



state 623

    switch_case_list  ->  '{' case_list '}' .   (rule 111)

    $default	reduce using rule 111 (switch_case_list)



state 624

    unticked_function_declaration_statement  ->  T_FUNCTION @27 is_reference T_STRING @28 '(' parameter_list ')' . '{' inner_statement_list '}'   (rule 82)

    '{' 	shift, and go to state 662



state 625

    non_empty_parameter_list  ->  non_empty_parameter_list ',' . optional_class_type T_VARIABLE   (rule 140)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . optional_class_type '&' T_VARIABLE   (rule 141)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . optional_class_type '&' T_VARIABLE '=' static_scalar   (rule 142)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . optional_class_type T_VARIABLE '=' static_scalar   (rule 143)

    T_STRING	shift, and go to state 566

    $default	reduce using rule 144 (optional_class_type)

    optional_class_type	go to state 663



state 626

    non_empty_parameter_list  ->  optional_class_type '&' . T_VARIABLE   (rule 137)
    non_empty_parameter_list  ->  optional_class_type '&' . T_VARIABLE '=' static_scalar   (rule 138)

    T_VARIABLE	shift, and go to state 664



state 627

    non_empty_parameter_list  ->  optional_class_type T_VARIABLE .   (rule 136)
    non_empty_parameter_list  ->  optional_class_type T_VARIABLE . '=' static_scalar   (rule 139)

    '=' 	shift, and go to state 665

    $default	reduce using rule 136 (non_empty_parameter_list)



state 628

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 . fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    T_STRING	shift, and go to state 412

    fully_qualified_class_name	go to state 666



state 629

    non_empty_static_array_pair_list  ->  static_scalar T_DOUBLE_ARROW static_scalar .   (rule 325)

    $default	reduce using rule 325 (non_empty_static_array_pair_list)



state 630

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar . T_DOUBLE_ARROW static_scalar   (rule 323)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar .   (rule 324)

    T_DOUBLE_ARROW	shift, and go to state 667

    $default	reduce using rule 324 (non_empty_static_array_pair_list)



state 631

    assignment_list_element  ->  T_LIST '(' @62 assignment_list ')' .   (rule 374)

    $default	reduce using rule 374 (assignment_list_element)



state 632

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_variable .   (rule 382)

    $default	reduce using rule 382 (non_empty_array_pair_list)



state 633

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' .   (rule 403)

    $default	reduce using rule 403 (encaps_var)



state 634

    unticked_class_declaration_statement  ->  class_entry_type T_STRING extends_from @29 implements_list '{' class_statement_list '}' .   (rule 84)

    $default	reduce using rule 84 (unticked_class_declaration_statement)



state 635

    class_constant_declaration  ->  T_CONST T_STRING . '=' static_scalar   (rule 190)

    '=' 	shift, and go to state 668



state 636

    class_statement  ->  variable_modifiers @35 . class_variable_declaration ';'   (rule 166)

    T_VARIABLE	shift, and go to state 669

    class_variable_declaration	go to state 670



state 637

    class_statement  ->  method_modifiers T_FUNCTION . @36 is_reference T_STRING @37 '(' parameter_list ')' method_body   (rule 170)

    $default	reduce using rule 168 (@36)

    @36 	go to state 671



state 638

    non_empty_member_modifiers  ->  non_empty_member_modifiers member_modifier .   (rule 178)

    $default	reduce using rule 178 (non_empty_member_modifiers)



state 639

    class_constant_declaration  ->  class_constant_declaration ',' . T_STRING '=' static_scalar   (rule 189)

    T_STRING	shift, and go to state 672



state 640

    class_statement  ->  class_constant_declaration ';' .   (rule 167)

    $default	reduce using rule 167 (class_statement)



state 641

    method_or_not  ->  '(' @60 function_call_parameter_list . ')'   (rule 343)

    ')' 	shift, and go to state 673



state 642

    variable_property  ->  T_OBJECT_OPERATOR . object_property @59 method_or_not   (rule 341)

    T_STRING	shift, and go to state 428
    T_VARIABLE	shift, and go to state 31
    '{' 	shift, and go to state 429
    '$' 	shift, and go to state 68

    variable_without_objects	go to state 430
    reference_variable	go to state 305
    compound_variable	go to state 95
    object_property	go to state 674
    object_dim_list	go to state 432
    variable_name	go to state 433
    simple_indirect_reference	go to state 306



state 643

    variable_properties  ->  variable_properties variable_property .   (rule 338)

    $default	reduce using rule 338 (variable_properties)



state 644

    dynamic_class_name_variable_property  ->  T_OBJECT_OPERATOR object_property .   (rule 291)

    $default	reduce using rule 291 (dynamic_class_name_variable_property)



state 645

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list . new_else_single T_ENDIF ';'   (rule 21)
    new_elseif_list  ->  new_elseif_list . T_ELSEIF '(' expr ')' ':' @34 inner_statement_list   (rule 129)

    T_ELSEIF	shift, and go to state 675
    T_ELSE	shift, and go to state 676

    $default	reduce using rule 132 (new_else_single)

    new_else_single	go to state 677



state 646

    elseif_list  ->  elseif_list T_ELSEIF . '(' expr ')' @33 statement   (rule 126)

    '(' 	shift, and go to state 678



state 647

    else_single  ->  T_ELSE . statement   (rule 131)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    statement	go to state 679
    unticked_statement	go to state 74
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 648

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 elseif_list else_single .   (rule 18)

    $default	reduce using rule 18 (unticked_statement)



state 649

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr ')' ';' .   (rule 27)

    $default	reduce using rule 27 (unticked_statement)



state 650

    while_statement  ->  ':' inner_statement_list T_ENDWHILE . ';'   (rule 123)

    ';' 	shift, and go to state 680



state 651

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr . ')' @13 for_statement   (rule 31)

    ')' 	shift, and go to state 681



state 652

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_variable foreach_optional_arg ')' @18 . foreach_statement   (rule 53)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 682
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    statement	go to state 683
    unticked_statement	go to state 74
    foreach_statement	go to state 684
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 653

    unticked_statement  ->  T_FOREACH '(' variable T_AS @15 foreach_variable foreach_optional_arg ')' @16 . foreach_statement   (rule 50)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 682
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    statement	go to state 683
    unticked_statement	go to state 74
    foreach_statement	go to state 685
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 654

    declare_statement  ->  ':' inner_statement_list T_ENDDECLARE ';' .   (rule 108)

    $default	reduce using rule 108 (declare_statement)



state 655

    switch_case_list  ->  ':' ';' case_list T_ENDSWITCH . ';'   (rule 114)

    ';' 	shift, and go to state 686



state 656

    switch_case_list  ->  ':' case_list T_ENDSWITCH ';' .   (rule 113)

    $default	reduce using rule 113 (switch_case_list)



state 657

    case_list  ->  case_list T_CASE expr . case_separator @31 inner_statement_list   (rule 117)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    ':' 	shift, and go to state 658
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ';' 	shift, and go to state 659

    case_separator	go to state 687



state 658

    case_separator  ->  ':' .   (rule 120)

    $default	reduce using rule 120 (case_separator)



state 659

    case_separator  ->  ';' .   (rule 121)

    $default	reduce using rule 121 (case_separator)



state 660

    case_list  ->  case_list T_DEFAULT case_separator . @32 inner_statement_list   (rule 119)

    $default	reduce using rule 118 (@32)

    @32 	go to state 688



state 661

    switch_case_list  ->  '{' ';' case_list '}' .   (rule 112)

    $default	reduce using rule 112 (switch_case_list)



state 662

    unticked_function_declaration_statement  ->  T_FUNCTION @27 is_reference T_STRING @28 '(' parameter_list ')' '{' . inner_statement_list '}'   (rule 82)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 689



state 663

    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type . T_VARIABLE   (rule 140)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type . '&' T_VARIABLE   (rule 141)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type . '&' T_VARIABLE '=' static_scalar   (rule 142)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type . T_VARIABLE '=' static_scalar   (rule 143)

    '&' 	shift, and go to state 690
    T_VARIABLE	shift, and go to state 691



state 664

    non_empty_parameter_list  ->  optional_class_type '&' T_VARIABLE .   (rule 137)
    non_empty_parameter_list  ->  optional_class_type '&' T_VARIABLE . '=' static_scalar   (rule 138)

    '=' 	shift, and go to state 692

    $default	reduce using rule 137 (non_empty_parameter_list)



state 665

    non_empty_parameter_list  ->  optional_class_type T_VARIABLE '=' . static_scalar   (rule 139)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 693
    static_class_constant	go to state 385



state 666

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name . @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    $default	reduce using rule 59 (@22)

    @22 	go to state 694



state 667

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW . static_scalar   (rule 323)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 695
    static_class_constant	go to state 385



state 668

    class_constant_declaration  ->  T_CONST T_STRING '=' . static_scalar   (rule 190)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 696
    static_class_constant	go to state 385



state 669

    class_variable_declaration  ->  T_VARIABLE .   (rule 187)
    class_variable_declaration  ->  T_VARIABLE . '=' static_scalar   (rule 188)

    '=' 	shift, and go to state 697

    $default	reduce using rule 187 (class_variable_declaration)



state 670

    class_statement  ->  variable_modifiers @35 class_variable_declaration . ';'   (rule 166)
    class_variable_declaration  ->  class_variable_declaration . ',' T_VARIABLE   (rule 185)
    class_variable_declaration  ->  class_variable_declaration . ',' T_VARIABLE '=' static_scalar   (rule 186)

    ',' 	shift, and go to state 698
    ';' 	shift, and go to state 699



state 671

    class_statement  ->  method_modifiers T_FUNCTION @36 . is_reference T_STRING @37 '(' parameter_list ')' method_body   (rule 170)

    '&' 	shift, and go to state 251

    $default	reduce using rule 78 (is_reference)

    is_reference	go to state 700



state 672

    class_constant_declaration  ->  class_constant_declaration ',' T_STRING . '=' static_scalar   (rule 189)

    '=' 	shift, and go to state 701



state 673

    method_or_not  ->  '(' @60 function_call_parameter_list ')' .   (rule 343)

    $default	reduce using rule 343 (method_or_not)



state 674

    variable_property  ->  T_OBJECT_OPERATOR object_property . @59 method_or_not   (rule 341)

    $default	reduce using rule 340 (@59)

    @59 	go to state 702



state 675

    new_elseif_list  ->  new_elseif_list T_ELSEIF . '(' expr ')' ':' @34 inner_statement_list   (rule 129)

    '(' 	shift, and go to state 703



state 676

    new_else_single  ->  T_ELSE . ':' inner_statement_list   (rule 133)

    ':' 	shift, and go to state 704



state 677

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single . T_ENDIF ';'   (rule 21)

    T_ENDIF	shift, and go to state 705



state 678

    elseif_list  ->  elseif_list T_ELSEIF '(' . expr ')' @33 statement   (rule 126)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 706
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 679

    else_single  ->  T_ELSE statement .   (rule 131)

    $default	reduce using rule 131 (else_single)



state 680

    while_statement  ->  ':' inner_statement_list T_ENDWHILE ';' .   (rule 123)

    $default	reduce using rule 123 (while_statement)



state 681

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' . @13 for_statement   (rule 31)

    $default	reduce using rule 30 (@13)

    @13 	go to state 707



state 682

    foreach_statement  ->  ':' . inner_statement_list T_ENDFOREACH ';'   (rule 106)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 708



state 683

    foreach_statement  ->  statement .   (rule 105)

    $default	reduce using rule 105 (foreach_statement)



state 684

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_variable foreach_optional_arg ')' @18 foreach_statement .   (rule 53)

    $default	reduce using rule 53 (unticked_statement)



state 685

    unticked_statement  ->  T_FOREACH '(' variable T_AS @15 foreach_variable foreach_optional_arg ')' @16 foreach_statement .   (rule 50)

    $default	reduce using rule 50 (unticked_statement)



state 686

    switch_case_list  ->  ':' ';' case_list T_ENDSWITCH ';' .   (rule 114)

    $default	reduce using rule 114 (switch_case_list)



state 687

    case_list  ->  case_list T_CASE expr case_separator . @31 inner_statement_list   (rule 117)

    $default	reduce using rule 116 (@31)

    @31 	go to state 709



state 688

    case_list  ->  case_list T_DEFAULT case_separator @32 . inner_statement_list   (rule 119)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 710



state 689

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    unticked_function_declaration_statement  ->  T_FUNCTION @27 is_reference T_STRING @28 '(' parameter_list ')' '{' inner_statement_list . '}'   (rule 82)

    '}' 	shift, and go to state 711

    $default	reduce using rule 8 (@2)

    @2  	go to state 294



state 690

    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type '&' . T_VARIABLE   (rule 141)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type '&' . T_VARIABLE '=' static_scalar   (rule 142)

    T_VARIABLE	shift, and go to state 712



state 691

    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type T_VARIABLE .   (rule 140)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type T_VARIABLE . '=' static_scalar   (rule 143)

    '=' 	shift, and go to state 713

    $default	reduce using rule 140 (non_empty_parameter_list)



state 692

    non_empty_parameter_list  ->  optional_class_type '&' T_VARIABLE '=' . static_scalar   (rule 138)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 714
    static_class_constant	go to state 385



state 693

    non_empty_parameter_list  ->  optional_class_type T_VARIABLE '=' static_scalar .   (rule 139)

    $default	reduce using rule 139 (non_empty_parameter_list)



state 694

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 . T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    T_VARIABLE	shift, and go to state 715



state 695

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar .   (rule 323)

    $default	reduce using rule 323 (non_empty_static_array_pair_list)



state 696

    class_constant_declaration  ->  T_CONST T_STRING '=' static_scalar .   (rule 190)

    $default	reduce using rule 190 (class_constant_declaration)



state 697

    class_variable_declaration  ->  T_VARIABLE '=' . static_scalar   (rule 188)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 716
    static_class_constant	go to state 385



state 698

    class_variable_declaration  ->  class_variable_declaration ',' . T_VARIABLE   (rule 185)
    class_variable_declaration  ->  class_variable_declaration ',' . T_VARIABLE '=' static_scalar   (rule 186)

    T_VARIABLE	shift, and go to state 717



state 699

    class_statement  ->  variable_modifiers @35 class_variable_declaration ';' .   (rule 166)

    $default	reduce using rule 166 (class_statement)



state 700

    class_statement  ->  method_modifiers T_FUNCTION @36 is_reference . T_STRING @37 '(' parameter_list ')' method_body   (rule 170)

    T_STRING	shift, and go to state 718



state 701

    class_constant_declaration  ->  class_constant_declaration ',' T_STRING '=' . static_scalar   (rule 189)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 719
    static_class_constant	go to state 385



state 702

    variable_property  ->  T_OBJECT_OPERATOR object_property @59 . method_or_not   (rule 341)

    '(' 	shift, and go to state 543

    $default	reduce using rule 344 (method_or_not)

    method_or_not	go to state 720



state 703

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' . expr ')' ':' @34 inner_statement_list   (rule 129)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '(' 	shift, and go to state 66
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 721
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 704

    new_else_single  ->  T_ELSE ':' . inner_statement_list   (rule 133)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 722



state 705

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF . ';'   (rule 21)

    ';' 	shift, and go to state 723



state 706

    elseif_list  ->  elseif_list T_ELSEIF '(' expr . ')' @33 statement   (rule 126)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ')' 	shift, and go to state 724



state 707

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 . for_statement   (rule 31)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 725
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    statement	go to state 726
    unticked_statement	go to state 74
    for_statement	go to state 727
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 708

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    foreach_statement  ->  ':' inner_statement_list . T_ENDFOREACH ';'   (rule 106)

    T_ENDFOREACH	shift, and go to state 728

    $default	reduce using rule 8 (@2)

    @2  	go to state 294



state 709

    case_list  ->  case_list T_CASE expr case_separator @31 . inner_statement_list   (rule 117)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 729



state 710

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    case_list  ->  case_list T_DEFAULT case_separator @32 inner_statement_list .   (rule 119)

    T_ENDSWITCH	reduce using rule 119 (case_list)
    T_CASE	reduce using rule 119 (case_list)
    T_DEFAULT	reduce using rule 119 (case_list)
    '}' 	reduce using rule 119 (case_list)
    $default	reduce using rule 8 (@2)
    @2  	go to state 294



state 711

    unticked_function_declaration_statement  ->  T_FUNCTION @27 is_reference T_STRING @28 '(' parameter_list ')' '{' inner_statement_list '}' .   (rule 82)

    $default	reduce using rule 82 (unticked_function_declaration_statement)



state 712

    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE .   (rule 141)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE . '=' static_scalar   (rule 142)

    '=' 	shift, and go to state 730

    $default	reduce using rule 141 (non_empty_parameter_list)



state 713

    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' . static_scalar   (rule 143)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 731
    static_class_constant	go to state 385



state 714

    non_empty_parameter_list  ->  optional_class_type '&' T_VARIABLE '=' static_scalar .   (rule 138)

    $default	reduce using rule 138 (non_empty_parameter_list)



state 715

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE . ')' @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    ')' 	shift, and go to state 732



state 716

    class_variable_declaration  ->  T_VARIABLE '=' static_scalar .   (rule 188)

    $default	reduce using rule 188 (class_variable_declaration)



state 717

    class_variable_declaration  ->  class_variable_declaration ',' T_VARIABLE .   (rule 185)
    class_variable_declaration  ->  class_variable_declaration ',' T_VARIABLE . '=' static_scalar   (rule 186)

    '=' 	shift, and go to state 733

    $default	reduce using rule 185 (class_variable_declaration)



state 718

    class_statement  ->  method_modifiers T_FUNCTION @36 is_reference T_STRING . @37 '(' parameter_list ')' method_body   (rule 170)

    $default	reduce using rule 169 (@37)

    @37 	go to state 734



state 719

    class_constant_declaration  ->  class_constant_declaration ',' T_STRING '=' static_scalar .   (rule 189)

    $default	reduce using rule 189 (class_constant_declaration)



state 720

    variable_property  ->  T_OBJECT_OPERATOR object_property @59 method_or_not .   (rule 341)

    $default	reduce using rule 341 (variable_property)



state 721

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr . ')' ':' @34 inner_statement_list   (rule 129)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @42 expr   (rule 223)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @43 expr   (rule 225)
    expr_without_variable  ->  expr . T_LOGICAL_OR @44 expr   (rule 227)
    expr_without_variable  ->  expr . T_LOGICAL_AND @45 expr   (rule 229)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 230)
    expr_without_variable  ->  expr . '|' expr   (rule 231)
    expr_without_variable  ->  expr . '&' expr   (rule 232)
    expr_without_variable  ->  expr . '^' expr   (rule 233)
    expr_without_variable  ->  expr . '.' expr   (rule 234)
    expr_without_variable  ->  expr . '+' expr   (rule 235)
    expr_without_variable  ->  expr . '-' expr   (rule 236)
    expr_without_variable  ->  expr . '*' expr   (rule 237)
    expr_without_variable  ->  expr . '/' expr   (rule 238)
    expr_without_variable  ->  expr . '%' expr   (rule 239)
    expr_without_variable  ->  expr . T_SL expr   (rule 240)
    expr_without_variable  ->  expr . T_SR expr   (rule 241)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 246)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 247)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 248)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 249)
    expr_without_variable  ->  expr . '<' expr   (rule 250)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 251)
    expr_without_variable  ->  expr . '>' expr   (rule 252)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 253)
    expr_without_variable  ->  expr . T_INSTANCEOF class_name_reference   (rule 254)
    expr_without_variable  ->  expr . '?' @46 expr ':' @47 expr   (rule 258)

    T_LOGICAL_OR	shift, and go to state 179
    T_LOGICAL_XOR	shift, and go to state 180
    T_LOGICAL_AND	shift, and go to state 181
    '?' 	shift, and go to state 182
    T_BOOLEAN_OR	shift, and go to state 183
    T_BOOLEAN_AND	shift, and go to state 184
    '|' 	shift, and go to state 185
    '^' 	shift, and go to state 186
    '&' 	shift, and go to state 187
    T_IS_EQUAL	shift, and go to state 188
    T_IS_NOT_EQUAL	shift, and go to state 189
    T_IS_IDENTICAL	shift, and go to state 190
    T_IS_NOT_IDENTICAL	shift, and go to state 191
    '<' 	shift, and go to state 192
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 193
    '>' 	shift, and go to state 194
    T_IS_GREATER_OR_EQUAL	shift, and go to state 195
    T_SL	shift, and go to state 196
    T_SR	shift, and go to state 197
    '+' 	shift, and go to state 198
    '-' 	shift, and go to state 199
    '.' 	shift, and go to state 200
    '*' 	shift, and go to state 201
    '/' 	shift, and go to state 202
    '%' 	shift, and go to state 203
    T_INSTANCEOF	shift, and go to state 204
    ')' 	shift, and go to state 735



state 722

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    new_else_single  ->  T_ELSE ':' inner_statement_list .   (rule 133)

    T_ENDIF	reduce using rule 133 (new_else_single)
    $default	reduce using rule 8 (@2)
    @2  	go to state 294



state 723

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';' .   (rule 21)

    $default	reduce using rule 21 (unticked_statement)



state 724

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' . @33 statement   (rule 126)

    $default	reduce using rule 125 (@33)

    @33 	go to state 736



state 725

    for_statement  ->  ':' . inner_statement_list T_ENDFOR ';'   (rule 104)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 737



state 726

    for_statement  ->  statement .   (rule 103)

    $default	reduce using rule 103 (for_statement)



state 727

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement .   (rule 31)

    $default	reduce using rule 31 (unticked_statement)



state 728

    foreach_statement  ->  ':' inner_statement_list T_ENDFOREACH . ';'   (rule 106)

    ';' 	shift, and go to state 738



state 729

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    case_list  ->  case_list T_CASE expr case_separator @31 inner_statement_list .   (rule 117)

    T_ENDSWITCH	reduce using rule 117 (case_list)
    T_CASE	reduce using rule 117 (case_list)
    T_DEFAULT	reduce using rule 117 (case_list)
    '}' 	reduce using rule 117 (case_list)
    $default	reduce using rule 8 (@2)
    @2  	go to state 294



state 730

    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' . static_scalar   (rule 142)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 739
    static_class_constant	go to state 385



state 731

    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' static_scalar .   (rule 143)

    $default	reduce using rule 143 (non_empty_parameter_list)



state 732

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' . @23 '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    $default	reduce using rule 60 (@23)

    @23 	go to state 740



state 733

    class_variable_declaration  ->  class_variable_declaration ',' T_VARIABLE '=' . static_scalar   (rule 186)

    '+' 	shift, and go to state 379
    '-' 	shift, and go to state 380
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 381
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ARRAY	shift, and go to state 382
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63

    common_scalar	go to state 383
    static_scalar	go to state 741
    static_class_constant	go to state 385



state 734

    class_statement  ->  method_modifiers T_FUNCTION @36 is_reference T_STRING @37 . '(' parameter_list ')' method_body   (rule 170)

    '(' 	shift, and go to state 742



state 735

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' . ':' @34 inner_statement_list   (rule 129)

    ':' 	shift, and go to state 743



state 736

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' @33 . statement   (rule 126)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_CLONE	shift, and go to state 24
    T_EXIT	shift, and go to state 25
    T_IF	shift, and go to state 26
    T_LNUMBER	shift, and go to state 27
    T_DNUMBER	shift, and go to state 28
    T_STRING	shift, and go to state 29
    T_STRING_VARNAME	shift, and go to state 30
    T_VARIABLE	shift, and go to state 31
    T_INLINE_HTML	shift, and go to state 32
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 33
    T_ECHO	shift, and go to state 34
    T_DO	shift, and go to state 35
    T_WHILE	shift, and go to state 36
    T_FOR	shift, and go to state 37
    T_FOREACH	shift, and go to state 38
    T_DECLARE	shift, and go to state 39
    T_SWITCH	shift, and go to state 40
    T_BREAK	shift, and go to state 41
    T_CONTINUE	shift, and go to state 42
    T_RETURN	shift, and go to state 44
    T_TRY	shift, and go to state 45
    T_THROW	shift, and go to state 46
    T_USE	shift, and go to state 47
    T_GLOBAL	shift, and go to state 48
    T_STATIC	shift, and go to state 49
    T_UNSET	shift, and go to state 52
    T_ISSET	shift, and go to state 53
    T_EMPTY	shift, and go to state 54
    T_LIST	shift, and go to state 57
    T_ARRAY	shift, and go to state 58
    T_CLASS_C	shift, and go to state 59
    T_METHOD_C	shift, and go to state 60
    T_FUNC_C	shift, and go to state 61
    T_LINE	shift, and go to state 62
    T_FILE	shift, and go to state 63
    T_START_HEREDOC	shift, and go to state 64
    '{' 	shift, and go to state 65
    '(' 	shift, and go to state 66
    ';' 	shift, and go to state 67
    '$' 	shift, and go to state 68
    '`' 	shift, and go to state 69
    '\"'	shift, and go to state 70
    '\''	shift, and go to state 71

    statement	go to state 744
    unticked_statement	go to state 74
    expr_without_variable	go to state 81
    function_call	go to state 82
    fully_qualified_class_name	go to state 83
    common_scalar	go to state 84
    scalar	go to state 85
    expr	go to state 86
    r_variable	go to state 87
    rw_variable	go to state 88
    variable	go to state 89
    variable_without_objects	go to state 90
    static_member	go to state 91
    base_variable_with_function_calls	go to state 92
    base_variable	go to state 93
    reference_variable	go to state 94
    compound_variable	go to state 95
    simple_indirect_reference	go to state 96
    internal_functions_in_yacc	go to state 97
    class_constant	go to state 98



state 737

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    for_statement  ->  ':' inner_statement_list . T_ENDFOR ';'   (rule 104)

    T_ENDFOR	shift, and go to state 745

    $default	reduce using rule 8 (@2)

    @2  	go to state 294



state 738

    foreach_statement  ->  ':' inner_statement_list T_ENDFOREACH ';' .   (rule 106)

    $default	reduce using rule 106 (foreach_statement)



state 739

    non_empty_parameter_list  ->  non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' static_scalar .   (rule 142)

    $default	reduce using rule 142 (non_empty_parameter_list)



state 740

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 . '{' inner_statement_list '}' @24 additional_catches   (rule 62)

    '{' 	shift, and go to state 746



state 741

    class_variable_declaration  ->  class_variable_declaration ',' T_VARIABLE '=' static_scalar .   (rule 186)

    $default	reduce using rule 186 (class_variable_declaration)



state 742

    class_statement  ->  method_modifiers T_FUNCTION @36 is_reference T_STRING @37 '(' . parameter_list ')' method_body   (rule 170)

    T_STRING	shift, and go to state 566

    ')' 	reduce using rule 135 (parameter_list)
    $default	reduce using rule 144 (optional_class_type)
    parameter_list	go to state 747
    non_empty_parameter_list	go to state 568
    optional_class_type	go to state 569



state 743

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' . @34 inner_statement_list   (rule 129)

    $default	reduce using rule 128 (@34)

    @34 	go to state 748



state 744

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' @33 statement .   (rule 126)

    $default	reduce using rule 126 (elseif_list)



state 745

    for_statement  ->  ':' inner_statement_list T_ENDFOR . ';'   (rule 104)

    ';' 	shift, and go to state 749



state 746

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' . inner_statement_list '}' @24 additional_catches   (rule 62)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 750



state 747

    class_statement  ->  method_modifiers T_FUNCTION @36 is_reference T_STRING @37 '(' parameter_list . ')' method_body   (rule 170)

    ')' 	shift, and go to state 751



state 748

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' @34 . inner_statement_list   (rule 129)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 752



state 749

    for_statement  ->  ':' inner_statement_list T_ENDFOR ';' .   (rule 104)

    $default	reduce using rule 104 (for_statement)



state 750

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list . '}' @24 additional_catches   (rule 62)

    '}' 	shift, and go to state 753

    $default	reduce using rule 8 (@2)

    @2  	go to state 294



state 751

    class_statement  ->  method_modifiers T_FUNCTION @36 is_reference T_STRING @37 '(' parameter_list ')' . method_body   (rule 170)

    '{' 	shift, and go to state 754
    ';' 	shift, and go to state 755

    method_body	go to state 756



state 752

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' @34 inner_statement_list .   (rule 129)

    T_ELSEIF	reduce using rule 129 (new_elseif_list)
    T_ELSE	reduce using rule 129 (new_elseif_list)
    T_ENDIF	reduce using rule 129 (new_elseif_list)
    $default	reduce using rule 8 (@2)
    @2  	go to state 294



state 753

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' . @24 additional_catches   (rule 62)

    $default	reduce using rule 61 (@24)

    @24 	go to state 757



state 754

    method_body  ->  '{' . inner_statement_list '}'   (rule 172)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 758



state 755

    method_body  ->  ';' .   (rule 171)

    $default	reduce using rule 171 (method_body)



state 756

    class_statement  ->  method_modifiers T_FUNCTION @36 is_reference T_STRING @37 '(' parameter_list ')' method_body .   (rule 170)

    $default	reduce using rule 170 (class_statement)



state 757

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 . additional_catches   (rule 62)

    T_CATCH	shift, and go to state 759

    $default	reduce using rule 65 (additional_catches)

    additional_catches	go to state 760
    non_empty_additional_catches	go to state 761
    additional_catch	go to state 762



state 758

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    method_body  ->  '{' inner_statement_list . '}'   (rule 172)

    '}' 	shift, and go to state 763

    $default	reduce using rule 8 (@2)

    @2  	go to state 294



state 759

    additional_catch  ->  T_CATCH . '(' fully_qualified_class_name @25 T_VARIABLE ')' @26 '{' inner_statement_list '}'   (rule 70)

    '(' 	shift, and go to state 764



state 760

    unticked_statement  ->  T_TRY @20 '{' inner_statement_list '}' T_CATCH '(' @21 fully_qualified_class_name @22 T_VARIABLE ')' @23 '{' inner_statement_list '}' @24 additional_catches .   (rule 62)

    $default	reduce using rule 62 (unticked_statement)



state 761

    additional_catches  ->  non_empty_additional_catches .   (rule 64)
    non_empty_additional_catches  ->  non_empty_additional_catches . additional_catch   (rule 67)

    T_CATCH	shift, and go to state 759

    $default	reduce using rule 64 (additional_catches)

    additional_catch	go to state 765



state 762

    non_empty_additional_catches  ->  additional_catch .   (rule 66)

    $default	reduce using rule 66 (non_empty_additional_catches)



state 763

    method_body  ->  '{' inner_statement_list '}' .   (rule 172)

    $default	reduce using rule 172 (method_body)



state 764

    additional_catch  ->  T_CATCH '(' . fully_qualified_class_name @25 T_VARIABLE ')' @26 '{' inner_statement_list '}'   (rule 70)

    T_STRING	shift, and go to state 412

    fully_qualified_class_name	go to state 766



state 765

    non_empty_additional_catches  ->  non_empty_additional_catches additional_catch .   (rule 67)

    $default	reduce using rule 67 (non_empty_additional_catches)



state 766

    additional_catch  ->  T_CATCH '(' fully_qualified_class_name . @25 T_VARIABLE ')' @26 '{' inner_statement_list '}'   (rule 70)

    $default	reduce using rule 68 (@25)

    @25 	go to state 767



state 767

    additional_catch  ->  T_CATCH '(' fully_qualified_class_name @25 . T_VARIABLE ')' @26 '{' inner_statement_list '}'   (rule 70)

    T_VARIABLE	shift, and go to state 768



state 768

    additional_catch  ->  T_CATCH '(' fully_qualified_class_name @25 T_VARIABLE . ')' @26 '{' inner_statement_list '}'   (rule 70)

    ')' 	shift, and go to state 769



state 769

    additional_catch  ->  T_CATCH '(' fully_qualified_class_name @25 T_VARIABLE ')' . @26 '{' inner_statement_list '}'   (rule 70)

    $default	reduce using rule 69 (@26)

    @26 	go to state 770



state 770

    additional_catch  ->  T_CATCH '(' fully_qualified_class_name @25 T_VARIABLE ')' @26 . '{' inner_statement_list '}'   (rule 70)

    '{' 	shift, and go to state 771



state 771

    additional_catch  ->  T_CATCH '(' fully_qualified_class_name @25 T_VARIABLE ')' @26 '{' . inner_statement_list '}'   (rule 70)

    $default	reduce using rule 10 (inner_statement_list)

    inner_statement_list	go to state 772



state 772

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 9)
    additional_catch  ->  T_CATCH '(' fully_qualified_class_name @25 T_VARIABLE ')' @26 '{' inner_statement_list . '}'   (rule 70)

    '}' 	shift, and go to state 773

    $default	reduce using rule 8 (@2)

    @2  	go to state 294



state 773

    additional_catch  ->  T_CATCH '(' fully_qualified_class_name @25 T_VARIABLE ')' @26 '{' inner_statement_list '}' .   (rule 70)

    $default	reduce using rule 70 (additional_catch)



state 774

    $   	go to state 775



state 775

    $   	go to state 776



state 776

    $default	accept


