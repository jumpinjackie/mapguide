/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sleepycat.dbxml;

import com.sleepycat.db.*;
import com.sleepycat.db.internal.DbEnv;
import com.sleepycat.db.internal.DbConstants;

public class XmlEventReader {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected XmlEventReader(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(XmlEventReader obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() /* no exception */ {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      dbxml_javaJNI.delete_XmlEventReader(swigCPtr);
    }
    swigCPtr = 0;
  }

    public void close()
	/* wrapper for close that protects from double-close */
	throws XmlException {
	if (swigCPtr != 0) {
	    closeInternal();
	    delete();
	}
    }

  public void closeInternal() throws XmlException {
    dbxml_javaJNI.XmlEventReader_closeInternal(swigCPtr);
  }

  public void setReportEntityInfo(boolean value) throws XmlException {
    dbxml_javaJNI.XmlEventReader_setReportEntityInfo(swigCPtr, value);
  }

  public boolean getReportEntityInfo() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getReportEntityInfo(swigCPtr);
  }

  public void setExpandEntities(boolean value) throws XmlException {
    dbxml_javaJNI.XmlEventReader_setExpandEntities(swigCPtr, value);
  }

  public boolean getExpandEntities() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getExpandEntities(swigCPtr);
  }

  public int next() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_next(swigCPtr);
  }

  public int nextTag() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_nextTag(swigCPtr);
  }

  public boolean hasNext() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_hasNext(swigCPtr);
  }

  public int getEventType() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getEventType(swigCPtr);
  }

  public String getNamespaceURI() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getNamespaceURI(swigCPtr);
  }

  public String getLocalName() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getLocalName(swigCPtr);
  }

  public String getPrefix() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getPrefix(swigCPtr);
  }

  public String getValue() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getValue(swigCPtr);
  }

  public int getAttributeCount() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getAttributeCount(swigCPtr);
  }

  public boolean isAttributeSpecified(int index) throws XmlException {
    return dbxml_javaJNI.XmlEventReader_isAttributeSpecified(swigCPtr, index);
  }

  public String getAttributeLocalName(int index) throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getAttributeLocalName(swigCPtr, index);
  }

  public String getAttributeNamespaceURI(int index) throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getAttributeNamespaceURI(swigCPtr, index);
  }

  public String getAttributePrefix(int index) throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getAttributePrefix(swigCPtr, index);
  }

  public String getAttributeValue(int index) throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getAttributeValue(swigCPtr, index);
  }

  public String getEncoding() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getEncoding(swigCPtr);
  }

  public String getVersion() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getVersion(swigCPtr);
  }

  public String getSystemId() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_getSystemId(swigCPtr);
  }

  public boolean isStandalone() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_isStandalone(swigCPtr);
  }

  public boolean standaloneSet() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_standaloneSet(swigCPtr);
  }

  public boolean encodingSet() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_encodingSet(swigCPtr);
  }

  public boolean hasEntityEscapeInfo() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_hasEntityEscapeInfo(swigCPtr);
  }

  public boolean needsEntityEscape(int index) throws XmlException {
    return dbxml_javaJNI.XmlEventReader_needsEntityEscape__SWIG_0(swigCPtr, index);
  }

  public boolean needsEntityEscape() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_needsEntityEscape__SWIG_1(swigCPtr);
  }

  public boolean hasEmptyElementInfo() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_hasEmptyElementInfo(swigCPtr);
  }

  public boolean isEmptyElement() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_isEmptyElement(swigCPtr);
  }

  public boolean isWhiteSpace() throws XmlException {
    return dbxml_javaJNI.XmlEventReader_isWhiteSpace(swigCPtr);
  }

  public final static int StartElement = 0;
  public final static int EndElement = StartElement + 1;
  public final static int Characters = EndElement + 1;
  public final static int CDATA = Characters + 1;
  public final static int Comment = CDATA + 1;
  public final static int Whitespace = Comment + 1;
  public final static int StartDocument = Whitespace + 1;
  public final static int EndDocument = StartDocument + 1;
  public final static int StartEntityReference = EndDocument + 1;
  public final static int EndEntityReference = StartEntityReference + 1;
  public final static int ProcessingInstruction = EndEntityReference + 1;
  public final static int DTD = ProcessingInstruction + 1;

}
