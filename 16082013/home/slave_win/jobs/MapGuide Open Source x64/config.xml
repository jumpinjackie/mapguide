<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>RELEASE_LABEL64</name>
          <description></description>
          <defaultValue>Final</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>WITH_ARCSDE</name>
          <description></description>
          <defaultValue>yes</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MG_VER_MAJOR</name>
          <description></description>
          <defaultValue>2</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MG_VER_MINOR</name>
          <description></description>
          <defaultValue>5</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MG_VER_BUILD</name>
          <description></description>
          <defaultValue>1</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MG_BUILD_SRC64</name>
          <description></description>
          <defaultValue>C:\working\sources\mg-2.5</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>FDO_SRC64</name>
          <description></description>
          <defaultValue>C:\builds\fdo\3.8.0\x64_vc10\Fdo</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>INSTANT_SETUP_SRC</name>
          <description></description>
          <defaultValue>C:\working\sources\MgInstantSetup</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>CLEAR_WORKING_AREA</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>JDK6 64-bit</jdk>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.BatchFile>
      <command>@echo off

SET VCBEXTENSION=_vs10
SET VC_COMPILER=vc100
call &quot;%WINDOWS_SDK_71_ROOT%\Bin\SetEnv.cmd&quot; /release /x64

REM Sigh! We can&apos;t seem to reference this from Jenkins
SET MSBUILD_NET35=C:\Windows\Microsoft.NET\Framework\v3.5\msbuild.exe

SET MG_VER_MAJOR_MINOR=%MG_VER_MAJOR%.%MG_VER_MINOR%
SET MG_VER_MAJOR_MINOR_BUILD=%MG_VER_MAJOR_MINOR%.%MG_VER_BUILD%
SET MG_BUILD_OUTPUT_ROOT64=%MG_BUILD_ARTIFACT_PATH%\mapguide
SET MG_BUILD_OUTPUT64=%MG_BUILD_OUTPUT_ROOT64%\%MG_VER_MAJOR_MINOR_BUILD%\x64\release
SET MG_BUILD_AREA64=%MG_BUILD_AREA%\mapguide\%MG_VER_MAJOR_MINOR_BUILD%\x64
SET REVNUM_FILE64=%MG_TOOL_PATH%\revnum.pl
SET MG_STAMP_FILE64=%MG_BUILD_ARTIFACT_PATH%\last_mapguide_%MG_VER_MAJOR_MINOR_BUILD%_revision_x64.txt
SET BUILD_ACTION=

echo =================== Env Vars for MapGuide =============================
echo MG_VER_MAJOR_MINOR         = %MG_VER_MAJOR_MINOR%
echo MG_VER_MAJOR_MINOR_BUILD   = %MG_VER_MAJOR_MINOR_BUILD%
echo MG_BUILD_OUTPUT_ROOT64     = %MG_BUILD_OUTPUT_ROOT64%
echo MG_BUILD_OUTPUT64          = %MG_BUILD_OUTPUT64%
echo MG_BUILD_AREA64            = %MG_BUILD_AREA64%
echo REVNUM_FILE64              = %REVNUM_FILE64%
echo MG_STAMP_FILE64            = %MG_STAMP_FILE64%
echo INSTANT_SETUP_SRC          = %INSTANT_SETUP_SRC%
echo JAVA_HOME                  = %JAVA_HOME%
echo ANT_HOME                   = %ANT_HOME%
echo =======================================================================

echo [prepare]: Cleaning out build artifacts
if exist %MG_BUILD_OUTPUT64% rd /S /Q %MG_BUILD_OUTPUT64%

pushd %MG_BUILD_SRC64%\MgDev
echo [prepare]: Noting SVN revision
svn info . | perl %REVNUM_FILE64% &gt; revision.txt
set /p MG_REVISION64= &lt; revision.txt
copy /Y revision.txt %MG_STAMP_FILE64%
popd

if &quot;%CLEAR_WORKING_AREA%&quot;==&quot;false&quot; (
    echo [prepare]: Skip cleaning build area
    goto build_mapguide
)

echo [prepare]: Cleaning out SVN metadata in build area
if exist %MG_BUILD_AREA64% for /R %MG_BUILD_AREA64% %%X in (.svn) do (RD /S /Q %%X 2&gt;nul)
echo [prepare]: Cleaning out build area
if exist %MG_BUILD_AREA64% rd /S /Q %MG_BUILD_AREA64%
echo [prepare]: Re-creating output directories
if not exist %MG_BUILD_AREA64%\Installer mkdir %MG_BUILD_AREA64%\Installer
if not exist %MG_BUILD_AREA64%\MgDev mkdir %MG_BUILD_AREA64%\MgDev
if not exist %MG_BUILD_ARTIFACT_PATH%\mg-desktop mkdir %MG_BUILD_ARTIFACT_PATH%\mg-desktop

echo [prepare]: Exporting SVN working copy to build area (Installer)
SET BUILD_ACTION=Exporting SVN working copy to build area (Installer)
svn export %MG_BUILD_SRC64%\Installer %MG_BUILD_AREA64%\Installer --force
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

echo [prepare]: Copying SVN working copy to build area (MgDev)
SET BUILD_ACTION=Copying SVN working copy to build area (MgDev)
svn export %MG_BUILD_SRC64%\MgDev %MG_BUILD_AREA64%\MgDev --force
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

echo [prepare]: Overlaying SVN metadata
REM Yeah, we&apos;re basically re-copying, but this will include missing SVN metadata that export obviously leaves out
robocopy %MG_BUILD_SRC64%\MgDev\Oem\fusion_build %MG_BUILD_AREA64%\MgDev\Oem\fusion_build /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Web\src\localized %MG_BUILD_AREA64%\MgDev\Web\src\localized /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Web\src\mapadmin %MG_BUILD_AREA64%\MgDev\Web\src\mapadmin /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\UnitTest/WebTier\MapAgent\MapAgentForms %MG_BUILD_AREA64%\MgDev\UnitTest/WebTier\MapAgent\MapAgentForms /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Web\src\mapviewerjava %MG_BUILD_AREA64%\MgDev\Web\src\mapviewerjava /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Web\src\mapviewernet %MG_BUILD_AREA64%\MgDev\Web\src\mapviewernet /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Web\src\mapviewerphp %MG_BUILD_AREA64%\MgDev\Web\src\mapviewerphp /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Web\src\schemareport %MG_BUILD_AREA64%\MgDev\Web\src\schemareport /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Web\src\stdicons %MG_BUILD_AREA64%\MgDev\Web\src\stdicons /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Web\src\viewerfiles %MG_BUILD_AREA64%\MgDev\Web\src\viewerfiles /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Doc\samples\dotnetsamples %MG_BUILD_AREA64%\MgDev\Doc\samples\dotnetsamples /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Doc\samples\dotnetviewersample %MG_BUILD_AREA64%\MgDev\Doc\samples\dotnetviewersample /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Doc\samples\javasamples %MG_BUILD_AREA64%\MgDev\Doc\samples\javasamples /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Doc\samples\javaviewersample %MG_BUILD_AREA64%\MgDev\Doc\samples\javaviewersample /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Doc\samples\phpsamples %MG_BUILD_AREA64%\MgDev\Doc\samples\phpsamples /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Doc\samples\phpviewersample %MG_BUILD_AREA64%\MgDev\Doc\samples\phpviewersample /E /NFL /NDL /nc /ns /np /MT
robocopy %MG_BUILD_SRC64%\MgDev\Doc\viewerapi %MG_BUILD_AREA64%\MgDev\Doc\viewerapi /E /NFL /NDL /nc /ns /np /MT

echo [prepare]: Setup FDO in Oem
cd %MG_BUILD_AREA64%\MgDev\Oem\FDO
xcopy /S /Y /I %FDO_SRC64%\Inc Inc
xcopy /S /Y /I %FDO_SRC64%\Lib Lib64
xcopy /S /Y /I %FDO_SRC64%\Bin Bin\Release64
xcopy /S /Y /I %FDO_SRC64%\Bin\com\*.* Bin\Release64\com
REM For release we don&apos;t want pdbs and .net assemblies
cd %MG_BUILD_AREA64%\MgDev\Oem\FDO\Bin\Release64
del /Q OSGeo.FDO.*
del /Q *.pdb

echo [prepare]: Pre-process for 64-bit compilation with Windows SDK 7.1
sed -i &quot;s/\%%MSBUILD\%% InstallerPreReq\%%VS_SLN_SUFFIX\%%.sln/REM \%%MSBUILD\%% InstallerPreReq\%%VS_SLN_SUFFIX\%%.sln/g&quot; %MG_BUILD_AREA64%\Installer\build64.bat
sed -i &quot;s/REM call build64_vce.bat/call build64_vce.bat/g&quot; %MG_BUILD_AREA64%\Installer\build64.bat
echo Updated - %MG_BUILD_AREA64%\Installer\build64.bat

:build_mapguide
cd %MG_BUILD_AREA64%\MgDev
echo [build]: Stamp version numbers
SET BUILD_ACTION=Stamp version numbers
cscript updateversion.vbs /major:%MG_VER_MAJOR% /minor:%MG_VER_MINOR% /point:%MG_VER_BUILD% /build:%MG_REVISION64%
call stampassemblies.bat %MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64%
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

REM ========================================= MapGuide ====================================================

cd %MG_BUILD_AREA64%\MgDev
echo [build]: Set env vars
call setenvironment64.bat vc10

echo [build]: Prep httpd source
cd %MG_BUILD_AREA64%\MgDev\Oem\LinuxApt
if not exist httpd-2.2.21.tar 7z x httpd-2.2.21.tar.gz
REM Extract regardless. We may have an incomplete directory here because windows is stingy
REM about hidden/locked files when deleting a directory you&apos;re sure is clean
7z x httpd-2.2.21.tar
type .\httpd-2.2.21\srclib\apr\include\apr.hw &gt; .\httpd-2.2.21\srclib\apr\include\apr.h
type .\httpd-2.2.21\srclib\apr-util\include\apu.hw &gt; .\httpd-2.2.21\srclib\apr-util\include\apu.h

echo [build]: build oem/server/web
cd %MG_BUILD_AREA64%\MgDev
SET BUILD_ACTION=build oem/server/web
call build64.bat -o=%MG_BUILD_OUTPUT64% -v
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

echo [build]: install files to build artifact directory
SET BUILD_ACTION=install files to build artifact directory
call build64.bat -a=install -o=%MG_BUILD_OUTPUT64%
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

REM Move fusion-selfbuild tools out of staging area
pushd %MG_BUILD_OUTPUT64%\fusion-selfbuild
move /Y fusion-buildtools.zip %MG_BUILD_OUTPUT_ROOT64%
popd
pushd %MG_BUILD_OUTPUT64%
rd /S /Q fusion-selfbuild
popd

REM ========================================= mg-desktop ====================================================
:build_mgdesktop
REM HACK: mg-desktop batch files not aware of new output dir so set old one
SET MG_OUTPUT=%MG_BUILD_AREA64%\MgDev\Release64
pushd %MG_BUILD_AREA64%\MgDev
echo [build]: mg-desktop
SET BUILD_ACTION=Build mg-desktop
call build_desktop.bat x64
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

pushd %MG_BUILD_AREA64%\MgDev\nuget
echo [clean]: Nuget package temp files
call package_clean.bat
popd

pushd %MG_BUILD_AREA64%\MgDev
echo [build]: Nuget packages
call nuget_prepare.bat %MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64% x64
SET BUILD_ACTION=Nuget packages
call nuget_pack.bat x64
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

pushd %MG_BUILD_AREA64%\MgDev\nuget
echo [build]: Copy mg-desktop build artifacts (NuGet packages)
set BUILD_ACTION=Copy mg-desktop build artifacts (NuGet packages)
move *.nupkg %MG_BUILD_ARTIFACT_PATH%\mg-desktop
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

pushd %MG_BUILD_AREA64%\MgDev\Release64
echo [build]: Copy mg-desktop build artifacts (zip dist)
SET BUILD_ACTION=Copy mg-desktop build artifacts (zip dist)
7z a -mx9 %MG_BUILD_ARTIFACT_PATH%\mg-desktop\mg-desktop-%MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64%-net40-vc10-x64.zip Desktop DesktopSamples
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

REM ========================================= Instant Setup =========================================================
pushd %MG_BUILD_AREA64%\Installer
echo [build]: Prepare artifact directory
SET BUILD_ACTION=Prepare artifact directory
call build64.bat -a=prepare -source=%MG_BUILD_OUTPUT64%
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

if not exist %INSTANT_SETUP_SRC% goto checkout_instantsetup
goto update_instantsetup
:checkout_instantsetup
echo [build]: svn checkout MgInstantSetup
SET BUILD_ACTION=svn checkout MgInstantSetup
svn co %INSTANT_SETUP_SVN_URL% %INSTANT_SETUP_SRC%
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
goto build_instantsetup

:update_instantsetup
REM We&apos;ll allow this to fail
echo [build]: svn update MgInstantSetup
pushd %INSTANT_SETUP_SRC%
svn update
popd

:build_instantsetup
echo [build]: MgInstantSetup
pushd %INSTANT_SETUP_SRC%
SET BUILD_ACTION=Building MgInstantSetup
%MSBUILD_NET35% /p:Configuration=Release;Platform=&quot;Any CPU&quot; MgInstantSetup.sln
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

:copy_instantsetup_build_artifacts
echo [build]: Copy MgInstantSetup build artifacts
if not exist %MG_BUILD_OUTPUT64%\Setup mkdir %MG_BUILD_OUTPUT64%\Setup
pushd %INSTANT_SETUP_SRC%\InstantSetup\bin\release
copy /Y *.exe %MG_BUILD_OUTPUT64%\Setup
copy /Y *.pdb %MG_BUILD_OUTPUT64%\Setup
copy /Y *.dll %MG_BUILD_OUTPUT64%\Setup
copy /Y *.config %MG_BUILD_OUTPUT64%\Setup
popd

:zip_mginstantsetup
pushd %MG_BUILD_OUTPUT64%
7z a %MG_BUILD_OUTPUT_ROOT64%\MapGuideOpenSource-%MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64%-InstantSetup-x64.exe -mmt -mx5 -sfx7z.sfx .
popd

REM ========================================= MapGuide Installer ====================================================

:build_installer
pushd %MG_BUILD_AREA64%\Installer
echo [build]: Generate installer file listings
SET BUILD_ACTION=Generate installer file listings
call build64.bat -a=generate -source=%MG_BUILD_OUTPUT64%
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

echo [build]: Build the installer
SET BUILD_ACTION=Build the installer
call build64.bat -source=%MG_BUILD_OUTPUT64% -version=%MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64% -name=MapGuideOpenSource-%MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64%-%RELEASE_LABEL64%-x64 -title=&quot;MapGuide Open Source %MG_VER_MAJOR_MINOR_BUILD% %RELEASE_LABEL64%&quot;
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

move /Y Output\en-US\MapGuideOpenSource-%MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64%-%RELEASE_LABEL64%-x64.exe %MG_BUILD_OUTPUT_ROOT64%
popd
goto end
:error
echo An error occurred while building MapGuide: %BUILD_ACTION%
exit /b 1
:end
exit /b 0</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>