<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>RELEASE_LABEL64</name>
          <description></description>
          <defaultValue>RC1</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>WITH_ARCSDE</name>
          <description></description>
          <defaultValue>yes</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MG_VER_MAJOR</name>
          <description></description>
          <defaultValue>2</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MG_VER_MINOR</name>
          <description></description>
          <defaultValue>6</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MG_VER_BUILD</name>
          <description></description>
          <defaultValue>0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MG_BUILD_SRC64</name>
          <description></description>
          <defaultValue>C:\working\sources\mg-2.6</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>FDO_SRC64</name>
          <description></description>
          <defaultValue>C:\builds\fdo\3.9.0\x64\Fdo</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>INSTANT_SETUP_SRC</name>
          <description></description>
          <defaultValue>C:\working\sources\MgInstantSetup</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>CLEAR_WORKING_AREA</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MG_STAMP_FILE_SOURCE64</name>
          <description></description>
          <defaultValue>C:\working\sources\mapguide_26_revision.txt</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>MG_RUN_UNIT_TESTS64</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>JDK6 64-bit</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.BatchFile>
      <command>@echo off

SET BUILD_ACTION=Setting Visual Studio env vars
SET VCBEXTENSION=_vs12
SET VC_COMPILER=vc110
SET ACTIVENAMECHECK=&quot;Microsoft Visual Studio 11&quot;
SET ACTIVEPATHCHECK=&quot;C:\Program Files\Microsoft Visual Studio 11.0\VC&quot;
if exist %ACTIVEPATHCHECK% goto VSExist
SET ACTIVEPATHCHECK=&quot;C:\Program Files (x86)\Microsoft Visual Studio 11.0\VC&quot;
if exist %ACTIVEPATHCHECK% goto VSExist
goto error

REM Use x86_amd64 because 64-bit compiler in VS2012 express is a cross-compiler
:VSExist
call %ACTIVEPATHCHECK%\vcvarsall.bat x86_amd64

REM Sigh! We can&apos;t seem to reference this from Jenkins
SET MSBUILD_NET40=C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe

SET MG_VER_MAJOR_MINOR=%MG_VER_MAJOR%.%MG_VER_MINOR%
SET MG_VER_MAJOR_MINOR_BUILD=%MG_VER_MAJOR_MINOR%.%MG_VER_BUILD%
SET MG_BUILD_OUTPUT_ROOT64=%MG_BUILD_ARTIFACT_PATH%\mapguide
SET MG_BUILD_OUTPUT64=%MG_BUILD_OUTPUT_ROOT64%\%MG_VER_MAJOR_MINOR_BUILD%\x64\release
SET MG_BUILD_AREA64=%MG_BUILD_AREA%\mapguide\%MG_VER_MAJOR_MINOR_BUILD%\x64
SET REVNUM_FILE64=%MG_TOOL_PATH%\revnum.pl
SET MG_STAMP_FILE64=%MG_BUILD_ARTIFACT_PATH%\last_mapguide_%MG_VER_MAJOR_MINOR_BUILD%_revision_x64.txt
SET BUILD_ACTION=

echo =================== Env Vars for MapGuide =============================
echo MG_VER_MAJOR_MINOR         = %MG_VER_MAJOR_MINOR%
echo MG_VER_MAJOR_MINOR_BUILD   = %MG_VER_MAJOR_MINOR_BUILD%
echo MG_BUILD_OUTPUT_ROOT64     = %MG_BUILD_OUTPUT_ROOT64%
echo MG_BUILD_OUTPUT64          = %MG_BUILD_OUTPUT64%
echo MG_BUILD_AREA64            = %MG_BUILD_AREA64%
echo REVNUM_FILE64              = %REVNUM_FILE64%
echo MG_STAMP_FILE64            = %MG_STAMP_FILE64%
echo INSTANT_SETUP_SRC          = %INSTANT_SETUP_SRC%
echo JAVA_HOME                  = %JAVA_HOME%
echo ANT_HOME                   = %ANT_HOME%
echo MG_RUN_UNIT_TESTS64        = %MG_RUN_UNIT_TESTS64%
echo =======================================================================

echo [prepare]: Cleaning out build artifacts
if exist %MG_BUILD_OUTPUT64% rd /S /Q %MG_BUILD_OUTPUT64%

echo [prepare]: Noting SVN revision
set /p MG_REVISION64= &lt; &quot;%MG_STAMP_FILE_SOURCE64%&quot;
copy /Y &quot;%MG_STAMP_FILE_SOURCE64%&quot; &quot;%MG_STAMP_FILE64%&quot;

if &quot;%CLEAR_WORKING_AREA%&quot;==&quot;false&quot; (
    echo [prepare]: Skip cleaning build area
    goto build_mapguide
)
echo [prepare]: Cleaning out build area
if exist %MG_BUILD_AREA64% rd /S /Q %MG_BUILD_AREA64%
echo [prepare]: Re-creating output directories
if not exist %MG_BUILD_AREA64%\Installer mkdir %MG_BUILD_AREA64%\Installer
if not exist %MG_BUILD_AREA64%\MgDev mkdir %MG_BUILD_AREA64%\MgDev
if not exist %MG_BUILD_ARTIFACT_PATH%\mg-desktop mkdir %MG_BUILD_ARTIFACT_PATH%\mg-desktop

echo [prepare]: Exporting SVN working copy to build area (Installer)
SET BUILD_ACTION=Exporting SVN working copy to build area (Installer)
svn export %MG_BUILD_SRC64%\Installer %MG_BUILD_AREA64%\Installer --force -q
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

echo [prepare]: Copying SVN working copy to build area (MgDev)
SET BUILD_ACTION=Copying SVN working copy to build area (MgDev)
svn export %MG_BUILD_SRC64%\MgDev %MG_BUILD_AREA64%\MgDev --force -q
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

echo [prepare]: Setup FDO in Oem
cd %MG_BUILD_AREA64%\MgDev\Oem\FDO
xcopy /S /Y /I %FDO_SRC64%\Inc Inc
xcopy /S /Y /I %FDO_SRC64%\Lib Lib64
xcopy /S /Y /I %FDO_SRC64%\Bin Bin\Release64
xcopy /S /Y /I %FDO_SRC64%\Bin\com\*.* Bin\Release64\com
REM For release we don&apos;t want pdbs and .net assemblies
cd %MG_BUILD_AREA64%\MgDev\Oem\FDO\Bin\Release64
del /Q OSGeo.FDO.*
del /Q *.pdb

:build_mapguide
cd %MG_BUILD_AREA64%\MgDev
echo [build]: Stamp version numbers
SET BUILD_ACTION=Stamp version numbers %MG_VER_MAJOR%.%MG_VER_MINOR%.%MG_VER_BUILD%.%MG_REVISION64%
cscript updateversion.vbs /major:%MG_VER_MAJOR% /minor:%MG_VER_MINOR% /point:%MG_VER_BUILD% /build:%MG_REVISION64%
call stampassemblies.bat %MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64%
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

REM ========================================= MapGuide ====================================================

cd %MG_BUILD_AREA64%\MgDev
echo [build]: Set env vars
call setenvironment64.bat

echo [build]: build oem/server/web
cd %MG_BUILD_AREA64%\MgDev
SET BUILD_ACTION=build oem/server/web
call build.bat
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

echo [build]: install files to build artifact directory
SET BUILD_ACTION=install files to build artifact directory
call build.bat -a=install -o=%MG_BUILD_OUTPUT64%
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

REM Move fusion-selfbuild tools out of staging area
pushd %MG_BUILD_OUTPUT64%\fusion-selfbuild
move /Y fusion-%MG_VER_MAJOR_MINOR_BUILD%-buildtools.zip %MG_BUILD_OUTPUT_ROOT64%
popd
pushd %MG_BUILD_OUTPUT64%
rd /S /Q fusion-selfbuild
popd

REM ========================================= mg-desktop ====================================================
:build_mgdesktop
REM HACK: mg-desktop batch files not aware of new output dir so set old one
SET MG_OUTPUT=%MG_BUILD_AREA64%\MgDev\Release64
pushd %MG_BUILD_AREA64%\MgDev
echo [build]: mg-desktop
SET BUILD_ACTION=Build mg-desktop
call build_desktop.bat x64
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

pushd %MG_BUILD_AREA64%\MgDev\nuget
echo [clean]: Nuget package temp files
call package_clean.bat
popd

pushd %MG_BUILD_AREA64%\MgDev
echo [build]: Nuget packages
call nuget_prepare.bat %MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64% x64
SET BUILD_ACTION=Nuget packages
call nuget_pack.bat x64
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

pushd %MG_BUILD_AREA64%\MgDev\nuget
echo [build]: Copy mg-desktop build artifacts (NuGet packages)
set BUILD_ACTION=Copy mg-desktop build artifacts (NuGet packages)
move *.nupkg %MG_BUILD_ARTIFACT_PATH%\mg-desktop
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

pushd %MG_BUILD_AREA64%\MgDev\Release64
echo [build]: Copy mg-desktop build artifacts (zip dist)
SET BUILD_ACTION=Copy mg-desktop build artifacts (zip dist)
7z a -mx9 %MG_BUILD_ARTIFACT_PATH%\mg-desktop\mg-desktop-%MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64%-net40-vc11-x64.zip Desktop DesktopSamples
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

REM ========================================= Instant Setup =========================================================
pushd %MG_BUILD_AREA64%\Installer
echo [build]: Prepare artifact directory
SET BUILD_ACTION=Prepare artifact directory
call build.bat -a=prepare -source=%MG_BUILD_OUTPUT64%
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

if not exist %INSTANT_SETUP_SRC% goto checkout_instantsetup
goto update_instantsetup
:checkout_instantsetup
echo [build]: svn checkout MgInstantSetup
SET BUILD_ACTION=svn checkout MgInstantSetup
svn co %INSTANT_SETUP_SVN_URL% %INSTANT_SETUP_SRC%
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
goto build_instantsetup

:update_instantsetup
REM We&apos;ll allow this to fail
echo [build]: svn update MgInstantSetup
pushd %INSTANT_SETUP_SRC%
svn update
popd

:build_instantsetup
echo [build]: MgInstantSetup
pushd %INSTANT_SETUP_SRC%
SET BUILD_ACTION=Building MgInstantSetup
%MSBUILD_NET40% /p:Configuration=Release;Platform=&quot;Any CPU&quot; MgInstantSetup.sln
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error
popd

:copy_instantsetup_build_artifacts
echo [build]: Copy MgInstantSetup build artifacts
if not exist %MG_BUILD_OUTPUT64%\Setup mkdir %MG_BUILD_OUTPUT64%\Setup
pushd %INSTANT_SETUP_SRC%\InstantSetup\bin\release
copy /Y *.exe %MG_BUILD_OUTPUT64%\Setup
copy /Y *.pdb %MG_BUILD_OUTPUT64%\Setup
copy /Y *.dll %MG_BUILD_OUTPUT64%\Setup
copy /Y *.config %MG_BUILD_OUTPUT64%\Setup
popd

:zip_mginstantsetup
pushd %MG_BUILD_OUTPUT64%
7z a %MG_BUILD_OUTPUT_ROOT64%\MapGuideOpenSource-%MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64%-InstantSetup-x64.exe -mmt -mx5 -sfx7z.sfx .
popd

REM ========================================= MapGuide Installer ====================================================

:build_installer
pushd %MG_BUILD_AREA64%\Installer
echo [build]: Generate installer file listings
SET BUILD_ACTION=Generate installer file listings
call build.bat -a=generate -source=%MG_BUILD_OUTPUT64%
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

echo [build]: Build the installer
SET BUILD_ACTION=Build the installer
call build.bat -source=%MG_BUILD_OUTPUT64% -version=%MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64% -name=MapGuideOpenSource-%MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64%-%RELEASE_LABEL64%-x64 -title=&quot;MapGuide Open Source %MG_VER_MAJOR_MINOR_BUILD% %RELEASE_LABEL64%&quot;
if &quot;%errorlevel%&quot;==&quot;1&quot; goto error

move /Y Output\en-US\MapGuideOpenSource-%MG_VER_MAJOR_MINOR_BUILD%.%MG_REVISION64%-%RELEASE_LABEL64%-x64.exe %MG_BUILD_OUTPUT_ROOT64%
popd

if &quot;%MG_RUN_UNIT_TESTS64%&quot;==&quot;false&quot; goto end
:server_unit_test
pushd %MG_BUILD_AREA64%\MgDev\Server\bin\Release64
mgserver.exe test
popd
goto end

:error
echo An error occurred while building MapGuide: %BUILD_ACTION%
exit /b 1
:end
exit /b 0</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers>
    <hudson.plugins.textfinder.TextFinderPublisher plugin="text-finder@1.10">
      <regexp>!!!FAILURES!!!</regexp>
      <succeedIfFound>false</succeedIfFound>
      <unstableIfFound>true</unstableIfFound>
      <alsoCheckConsoleOutput>true</alsoCheckConsoleOutput>
    </hudson.plugins.textfinder.TextFinderPublisher>
  </publishers>
  <buildWrappers/>
</project>