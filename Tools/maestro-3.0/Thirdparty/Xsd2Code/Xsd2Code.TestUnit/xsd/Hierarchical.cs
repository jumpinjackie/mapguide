// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 2.1.3148.17485
//   <NameSpace>XSDCodeGen</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><HidePrivateFieldInIDE>True</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment>
//  <auto-generated>
// ------------------------------------------------------------------------------
namespace XSDCodeGen {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;
    
    
    /// <summary>
    /// Data model of historic update
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Historic {
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private System.DateTime dateField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private List <HistoricHistoUpdates> histoUpdatesField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string schemaVersionField;
        
        /// <summary>
        /// .ctor class constructor
        /// </summary>
        public Historic() {
            if ((this.histoUpdatesField == null)) {
                this.histoUpdatesField = new List <HistoricHistoUpdates>();
            }
            this.schemaVersionField = "1.0";
        }
        
        /// <summary>
        /// Date of update event
        /// </summary>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                if ((dateField.Equals(value) != true)) {
                    this.dateField = value;
                    OnPropertyChanged("Date");
                }
            }
        }
        
        /// <summary>
        /// Historic of all updates
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("HistoUpdates")]
        public List <HistoricHistoUpdates> HistoUpdates {
            get {
                return this.histoUpdatesField;
            }
            set {
                if ((histoUpdatesField.Equals(value) != true)) {
                    this.histoUpdatesField = value;
                    OnPropertyChanged("HistoUpdates");
                }
            }
        }
        
        /// <summary>
        /// XmlSchema version
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("1.0")]
        public string SchemaVersion {
            get {
                return this.schemaVersionField;
            }
            set {
                if ((schemaVersionField.Equals(value) != true)) {
                    this.schemaVersionField = value;
                    OnPropertyChanged("SchemaVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        private void OnPropertyChanged(string info) {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null) {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }
    
    /// <summary>
    /// Historic of all updates
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class HistoricHistoUpdates {
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string updateIdField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private System.DateTime updateDateField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool updateSucessField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string updateErrorMsgField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string updateCodeActionField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string updateLineActionField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private HistoricHistoUpdatesComputer computerField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string dSKDBField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string histoGUIDField;
        
        /// <summary>
        /// .ctor class constructor
        /// </summary>
        public HistoricHistoUpdates() {
            if ((this.computerField == null)) {
                this.computerField = new HistoricHistoUpdatesComputer();
            }
            this.updateSucessField = false;
        }
        
        /// <summary>
        /// Identifier of update
        /// </summary>
        public string UpdateId {
            get {
                return this.updateIdField;
            }
            set {
                if ((updateIdField.Equals(value) != true)) {
                    this.updateIdField = value;
                    OnPropertyChanged("UpdateId");
                }
            }
        }
        
        /// <summary>
        /// Date of the update
        /// </summary>
        public System.DateTime UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                if ((updateDateField.Equals(value) != true)) {
                    this.updateDateField = value;
                    OnPropertyChanged("UpdateDate");
                }
            }
        }
        
        /// <summary>
        /// 0 = Error
        /// 1 = sucess
        /// </summary>
        public bool UpdateSucess {
            get {
                return this.updateSucessField;
            }
            set {
                if ((updateSucessField.Equals(value) != true)) {
                    this.updateSucessField = value;
                    OnPropertyChanged("UpdateSucess");
                }
            }
        }
        
        /// <summary>
        /// Error message
        /// </summary>
        public string UpdateErrorMsg {
            get {
                return this.updateErrorMsgField;
            }
            set {
                if ((updateErrorMsgField.Equals(value) != true)) {
                    this.updateErrorMsgField = value;
                    OnPropertyChanged("UpdateErrorMsg");
                }
            }
        }
        
        /// <summary>
        /// Action code failed
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string UpdateCodeAction {
            get {
                return this.updateCodeActionField;
            }
            set {
                if ((updateCodeActionField.Equals(value) != true)) {
                    this.updateCodeActionField = value;
                    OnPropertyChanged("UpdateCodeAction");
                }
            }
        }
        
        /// <summary>
        /// Action number line failed
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string UpdateLineAction {
            get {
                return this.updateLineActionField;
            }
            set {
                if ((updateLineActionField.Equals(value) != true)) {
                    this.updateLineActionField = value;
                    OnPropertyChanged("UpdateLineAction");
                }
            }
        }
        
        /// <summary>
        /// Computer information
        /// </summary>
        public HistoricHistoUpdatesComputer Computer {
            get {
                return this.computerField;
            }
            set {
                if ((computerField.Equals(value) != true)) {
                    this.computerField = value;
                    OnPropertyChanged("Computer");
                }
            }
        }
        
        /// <remarks/>
        public string DSKDB {
            get {
                return this.dSKDBField;
            }
            set {
                if ((dSKDBField.Equals(value) != true)) {
                    this.dSKDBField = value;
                    OnPropertyChanged("DSKDB");
                }
            }
        }
        
        /// <summary>
        /// Garantee unicity on server historic (generated on client)
        /// </summary>
        public string HistoGUID {
            get {
                return this.histoGUIDField;
            }
            set {
                if ((histoGUIDField.Equals(value) != true)) {
                    this.histoGUIDField = value;
                    OnPropertyChanged("HistoGUID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        private void OnPropertyChanged(string info) {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null) {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }
    
    /// <summary>
    /// Computer information
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class HistoricHistoUpdatesComputer : System.ComponentModel.INotifyPropertyChanged {
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private long freeDiskSpaceField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string cPUField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string osField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string oSServicePackField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private int memoryField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string screenResolutionField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string dSKPCField;
        
        /// <summary>
        /// Indicate the free diskspace in  Octets.
        /// </summary>
        public long FreeDiskSpace {
            get {
                return this.freeDiskSpaceField;
            }
            set {
                if ((freeDiskSpaceField.Equals(value) != true)) {
                    this.freeDiskSpaceField = value;
                    OnPropertyChanged("FreeDiskSpace");
                }
            }
        }
        
        /// <summary>
        /// Type of CPU
        /// </summary>
        public string CPU {
            get {
                return this.cPUField;
            }
            set {
                if ((cPUField.Equals(value) != true)) {
                    this.cPUField = value;
                    OnPropertyChanged("CPU");
                }
            }
        }
        
        /// <summary>
        /// Os Name
        /// </summary>
        public string OS {
            get {
                return this.osField;
            }
            set {
                if ((osField.Equals(value) != true)) {
                    this.osField = value;
                    OnPropertyChanged("OS");
                }
            }
        }
        
        /// <summary>
        /// SP
        /// </summary>
        public string OSServicePack {
            get {
                return this.oSServicePackField;
            }
            set {
                if ((oSServicePackField.Equals(value) != true)) {
                    this.oSServicePackField = value;
                    OnPropertyChanged("OSServicePack");
                }
            }
        }
        
        /// <summary>
        /// In Mo
        /// </summary>
        public int Memory {
            get {
                return this.memoryField;
            }
            set {
                if ((memoryField.Equals(value) != true)) {
                    this.memoryField = value;
                    OnPropertyChanged("Memory");
                }
            }
        }
        
        /// <summary>
        /// Ex. 1024x768
        /// </summary>
        public string ScreenResolution {
            get {
                return this.screenResolutionField;
            }
            set {
                if ((screenResolutionField.Equals(value) != true)) {
                    this.screenResolutionField = value;
                    OnPropertyChanged("ScreenResolution");
                }
            }
        }
        
        /// <remarks/>
        public string DSKPC {
            get {
                return this.dSKPCField;
            }
            set {
                if ((dSKPCField.Equals(value) != true)) {
                    this.dSKPCField = value;
                    OnPropertyChanged("DSKPC");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        private void OnPropertyChanged(string info) {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null) {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }
}
